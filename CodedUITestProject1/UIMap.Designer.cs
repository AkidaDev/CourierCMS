// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace CodedUITestProject1
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WpfControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// This test will simulate login and opening of sanitizing window...
        /// </summary>
        public void LoginAndBasic()
        {
            #region Variable Declarations
            WinEdit uINameEdit = this.UIDebugWindow.UIItemWindow.UIVortexexeListItem.UINameEdit;
            WpfEdit uIUserNameEdit = this.UILoginWindow.UIUserNameEdit;
            WpfEdit uIPasswordEdit = this.UILoginWindow.UIPasswordEdit;
            WpfTreeItem uIClientQuotationTreeItem = this.UIVortexWindow.UIItemTree.UIClientTreeTreeItem.UIClientQuotationTreeItem;
            WpfTreeItem uIDataEntryTreeItem = this.UIVortexWindow.UIItemTree1.UIDataEntryTreeItem;
            WpfTree uIItemTree1 = this.UIVortexWindow.UIItemTree1;
            WpfButton uISanitizingButtonButton = this.UIVortexWindow.UISanitizingButtonButton;
            WpfWindow uIDataEntryWindow = this.UIDataEntryWindow;
            WpfEdit uIPART_EditableTextBoxEdit = this.UIDataEntryWindow.UIConnsignmentNumberComboBox.UIPART_EditableTextBoxEdit;
            WpfComboBox uICustomerSelectedComboBox = this.UIDataEntryWindow.UICustomerSelectedComboBox;
            WpfEdit uIPART_EditableTextBoxEdit1 = this.UIDataEntryWindow.UISubClientComboBoxComboBox.UIPART_EditableTextBoxEdit;
            WpfComboBox uIDestinationComboBox = this.UIDataEntryWindow.UIDestinationComboBox;
            WpfEdit uIDestinationPinEdit = this.UIDataEntryWindow.UIDestinationPinEdit;
            WpfComboBox uITypeComboBoxComboBox = this.UIDataEntryWindow.UITypeComboBoxComboBox;
            WpfComboBox uIMODEComboBox = this.UIDataEntryWindow.UIMODEComboBox;
            WpfComboBox uIDoxComboboxComboBox = this.UIDataEntryWindow.UIDoxComboboxComboBox;
            WpfEdit uIHeightPacketBoxEdit = this.UIDataEntryWindow.UIHeightPacketBoxEdit;
            WpfEdit uIBilledWeightTextBoxEdit = this.UIDataEntryWindow.UIBilledWeightTextBoxEdit;
            WpfEdit uIInsuranceBoxEdit = this.UIDataEntryWindow.UIInsuranceBoxEdit;
            WpfEdit uIBilledAmountEdit = this.UIDataEntryWindow.UIBilledAmountEdit;
            WpfEdit uICostEdit = this.UIDataEntryWindow.UICostEdit;
            WpfEdit uIPART_EditableTextBoxEdit2 = this.UIDataEntryWindow.UIConsgineeNameComboBox.UIPART_EditableTextBoxEdit;
            WpfEdit uIPART_EditableTextBoxEdit3 = this.UIDataEntryWindow.UIConsignerNameComboBox.UIPART_EditableTextBoxEdit;
            WpfCheckBox uIUnticktodisablerecalCheckBox = this.UIDataEntryWindow.UIUnticktodisablerecalCheckBox;
            WpfButton uINextSaveButton = this.UIDataEntryWindow.UINextSaveButton;
            WpfButton uIItemButton = this.UIDataEntryWindow.UIItemButton;
            WpfButton uIItemButton1 = this.UIDataEntryWindow.UIItemButton1;
            WinButton uICloseButton = this.UIDataEntryWindow1.UICloseButton;
            WinWindow uIVortexWindow1 = this.UIVortexWindow1;
            WinButton uICloseButton1 = this.UIVortexWindow1.UICloseButton;
            #endregion

            // Click 'Name' text box
            Mouse.Click(uINameEdit, new Point(20, 10));

            // Type 'dharmendra' in 'UserName' text box
            uIUserNameEdit.Text = this.LoginAndBasicParams.UIUserNameEditText;

            // Type '{Tab}' in 'UserName' text box
            Keyboard.SendKeys(uIUserNameEdit, this.LoginAndBasicParams.UIUserNameEditSendKeys, ModifierKeys.None);

            // Type '********' in 'Password' text box
            Keyboard.SendKeys(uIPasswordEdit, this.LoginAndBasicParams.UIPasswordEditSendKeys, true);

            // Double-Click 'Client Tree' -> 'Client Quotation' tree item
            Mouse.DoubleClick(uIClientQuotationTreeItem, new Point(132, 12));

            // Click 'Client Tree' -> 'Client Quotation' tree item
            Mouse.Click(uIClientQuotationTreeItem, new Point(132, 12));

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Click 'Data Entry' tree item
            Mouse.Click(uIDataEntryTreeItem, new Point(107, 17));

            // Click tree
            Mouse.Click(uIItemTree1, new Point(0, 39));

            // Click 'Data Entry' tree item
            Mouse.Click(uIDataEntryTreeItem, new Point(39, 10));

            // Click 'Data Entry' tree item
            Mouse.Click(uIDataEntryTreeItem, new Point(41, 12));

            // Double-Click 'Data Entry' tree item
            Mouse.DoubleClick(uIDataEntryTreeItem, new Point(112, 12));

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Click 'SanitizingButton' button
            Mouse.Click(uISanitizingButtonButton, new Point(32, 19));

            // Click 'Data Entry' window
            Mouse.Click(uIDataEntryWindow, new Point(394, 91));

            // Click 'PART_EditableTextBox' text box
            Mouse.Click(uIPART_EditableTextBoxEdit, new Point(131, 2));

            // Type '{Tab}' in 'PART_EditableTextBox' text box
            Keyboard.SendKeys(uIPART_EditableTextBoxEdit, this.LoginAndBasicParams.UIPART_EditableTextBoxEditSendKeys, ModifierKeys.None);

            // Type '{Tab}' in 'CustomerSelected' combo box
            Keyboard.SendKeys(uICustomerSelectedComboBox, this.LoginAndBasicParams.UICustomerSelectedComboBoxSendKeys, ModifierKeys.None);

            // Type '{Tab}' in 'PART_EditableTextBox' text box
            Keyboard.SendKeys(uIPART_EditableTextBoxEdit1, this.LoginAndBasicParams.UIPART_EditableTextBoxEditSendKeys1, ModifierKeys.None);

            // Type '{Tab}' in 'Destination' combo box
            Keyboard.SendKeys(uIDestinationComboBox, this.LoginAndBasicParams.UIDestinationComboBoxSendKeys, ModifierKeys.None);

            // Type '{Tab}' in 'DestinationPin' text box
            Keyboard.SendKeys(uIDestinationPinEdit, this.LoginAndBasicParams.UIDestinationPinEditSendKeys, ModifierKeys.None);

            // Type '{Tab}' in 'TypeComboBox' combo box
            Keyboard.SendKeys(uITypeComboBoxComboBox, this.LoginAndBasicParams.UITypeComboBoxComboBoxSendKeys, ModifierKeys.None);

            // Type '{Tab}' in 'MODE' combo box
            Keyboard.SendKeys(uIMODEComboBox, this.LoginAndBasicParams.UIMODEComboBoxSendKeys, ModifierKeys.None);

            // Type '{Tab}' in 'DoxCombobox' combo box
            Keyboard.SendKeys(uIDoxComboboxComboBox, this.LoginAndBasicParams.UIDoxComboboxComboBoxSendKeys, ModifierKeys.None);

            // Type '{Tab}' in 'HeightPacketBox' text box
            Keyboard.SendKeys(uIHeightPacketBoxEdit, this.LoginAndBasicParams.UIHeightPacketBoxEditSendKeys, ModifierKeys.None);

            // Type '{Tab}' in 'BilledWeightTextBox' text box
            Keyboard.SendKeys(uIBilledWeightTextBoxEdit, this.LoginAndBasicParams.UIBilledWeightTextBoxEditSendKeys, ModifierKeys.None);

            // Type '{Tab}' in 'InsuranceBox' text box
            Keyboard.SendKeys(uIInsuranceBoxEdit, this.LoginAndBasicParams.UIInsuranceBoxEditSendKeys, ModifierKeys.None);

            // Type '{Tab}' in 'BilledAmount' text box
            Keyboard.SendKeys(uIBilledAmountEdit, this.LoginAndBasicParams.UIBilledAmountEditSendKeys, ModifierKeys.None);

            // Type '{Tab}' in 'Cost' text box
            Keyboard.SendKeys(uICostEdit, this.LoginAndBasicParams.UICostEditSendKeys, ModifierKeys.None);

            // Type '{Tab}' in 'PART_EditableTextBox' text box
            Keyboard.SendKeys(uIPART_EditableTextBoxEdit2, this.LoginAndBasicParams.UIPART_EditableTextBoxEditSendKeys2, ModifierKeys.None);

            // Type '{Tab}' in 'PART_EditableTextBox' text box
            Keyboard.SendKeys(uIPART_EditableTextBoxEdit3, this.LoginAndBasicParams.UIPART_EditableTextBoxEditSendKeys3, ModifierKeys.None);

            // Type '{Tab}' in 'Untick to disable recalculation' check box
            Keyboard.SendKeys(uIUnticktodisablerecalCheckBox, this.LoginAndBasicParams.UIUnticktodisablerecalCheckBoxSendKeys, ModifierKeys.None);

            // Type '{Tab}' in 'Next & Save' button
            Keyboard.SendKeys(uINextSaveButton, this.LoginAndBasicParams.UINextSaveButtonSendKeys, ModifierKeys.None);

            // Type '{Tab}' in button numbered 2 in 'Data Entry' window
            Keyboard.SendKeys(uIItemButton, this.LoginAndBasicParams.UIItemButtonSendKeys, ModifierKeys.None);

            // Type '{Tab}' in button numbered 3 in 'Data Entry' window
            Keyboard.SendKeys(uIItemButton1, this.LoginAndBasicParams.UIItemButton1SendKeys, ModifierKeys.None);

            // Type '{Tab}' in 'PART_EditableTextBox' text box
            Keyboard.SendKeys(uIPART_EditableTextBoxEdit, this.LoginAndBasicParams.UIPART_EditableTextBoxEditSendKeys4, ModifierKeys.None);

            // Type '{Tab}' in 'CustomerSelected' combo box
            Keyboard.SendKeys(uICustomerSelectedComboBox, this.LoginAndBasicParams.UICustomerSelectedComboBoxSendKeys1, ModifierKeys.None);

            // Type '{Tab}' in 'PART_EditableTextBox' text box
            Keyboard.SendKeys(uIPART_EditableTextBoxEdit1, this.LoginAndBasicParams.UIPART_EditableTextBoxEditSendKeys5, ModifierKeys.None);

            // Type '{Tab}' in 'Destination' combo box
            Keyboard.SendKeys(uIDestinationComboBox, this.LoginAndBasicParams.UIDestinationComboBoxSendKeys1, ModifierKeys.None);

            // Click 'Close' button
            Mouse.Click(uICloseButton, new Point(25, 7));

            // Type 'Control + s' in 'Vortex' window
            Keyboard.SendKeys(uIVortexWindow1, this.LoginAndBasicParams.UIVortexWindow1SendKeys, ModifierKeys.Control);

            // Click 'Close' button
            Mouse.Click(uICloseButton1, new Point(14, 11));
        }
        
        #region Properties
        public virtual LoginAndBasicParams LoginAndBasicParams
        {
            get
            {
                if ((this.mLoginAndBasicParams == null))
                {
                    this.mLoginAndBasicParams = new LoginAndBasicParams();
                }
                return this.mLoginAndBasicParams;
            }
        }
        
        public UIDebugWindow UIDebugWindow
        {
            get
            {
                if ((this.mUIDebugWindow == null))
                {
                    this.mUIDebugWindow = new UIDebugWindow();
                }
                return this.mUIDebugWindow;
            }
        }
        
        public UILoginWindow UILoginWindow
        {
            get
            {
                if ((this.mUILoginWindow == null))
                {
                    this.mUILoginWindow = new UILoginWindow();
                }
                return this.mUILoginWindow;
            }
        }
        
        public UIVortexWindow UIVortexWindow
        {
            get
            {
                if ((this.mUIVortexWindow == null))
                {
                    this.mUIVortexWindow = new UIVortexWindow();
                }
                return this.mUIVortexWindow;
            }
        }
        
        public UIDataEntryWindow UIDataEntryWindow
        {
            get
            {
                if ((this.mUIDataEntryWindow == null))
                {
                    this.mUIDataEntryWindow = new UIDataEntryWindow();
                }
                return this.mUIDataEntryWindow;
            }
        }
        
        public UIDataEntryWindow1 UIDataEntryWindow1
        {
            get
            {
                if ((this.mUIDataEntryWindow1 == null))
                {
                    this.mUIDataEntryWindow1 = new UIDataEntryWindow1();
                }
                return this.mUIDataEntryWindow1;
            }
        }
        
        public UIVortexWindow1 UIVortexWindow1
        {
            get
            {
                if ((this.mUIVortexWindow1 == null))
                {
                    this.mUIVortexWindow1 = new UIVortexWindow1();
                }
                return this.mUIVortexWindow1;
            }
        }
        #endregion
        
        #region Fields
        private LoginAndBasicParams mLoginAndBasicParams;
        
        private UIDebugWindow mUIDebugWindow;
        
        private UILoginWindow mUILoginWindow;
        
        private UIVortexWindow mUIVortexWindow;
        
        private UIDataEntryWindow mUIDataEntryWindow;
        
        private UIDataEntryWindow1 mUIDataEntryWindow1;
        
        private UIVortexWindow1 mUIVortexWindow1;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'LoginAndBasic'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class LoginAndBasicParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'dharmendra' in 'UserName' text box
        /// </summary>
        public string UIUserNameEditText = "dharmendra";
        
        /// <summary>
        /// Type '{Tab}' in 'UserName' text box
        /// </summary>
        public string UIUserNameEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '********' in 'Password' text box
        /// </summary>
        public string UIPasswordEditSendKeys = "WMzYxsI+0QoTn2GdhB9RyqSa8vOqPjCSe5bIsXSytjU=";
        
        /// <summary>
        /// Type '{Tab}' in 'PART_EditableTextBox' text box
        /// </summary>
        public string UIPART_EditableTextBoxEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '{Tab}' in 'CustomerSelected' combo box
        /// </summary>
        public string UICustomerSelectedComboBoxSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '{Tab}' in 'PART_EditableTextBox' text box
        /// </summary>
        public string UIPART_EditableTextBoxEditSendKeys1 = "{Tab}";
        
        /// <summary>
        /// Type '{Tab}' in 'Destination' combo box
        /// </summary>
        public string UIDestinationComboBoxSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '{Tab}' in 'DestinationPin' text box
        /// </summary>
        public string UIDestinationPinEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '{Tab}' in 'TypeComboBox' combo box
        /// </summary>
        public string UITypeComboBoxComboBoxSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '{Tab}' in 'MODE' combo box
        /// </summary>
        public string UIMODEComboBoxSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '{Tab}' in 'DoxCombobox' combo box
        /// </summary>
        public string UIDoxComboboxComboBoxSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '{Tab}' in 'HeightPacketBox' text box
        /// </summary>
        public string UIHeightPacketBoxEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '{Tab}' in 'BilledWeightTextBox' text box
        /// </summary>
        public string UIBilledWeightTextBoxEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '{Tab}' in 'InsuranceBox' text box
        /// </summary>
        public string UIInsuranceBoxEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '{Tab}' in 'BilledAmount' text box
        /// </summary>
        public string UIBilledAmountEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '{Tab}' in 'Cost' text box
        /// </summary>
        public string UICostEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '{Tab}' in 'PART_EditableTextBox' text box
        /// </summary>
        public string UIPART_EditableTextBoxEditSendKeys2 = "{Tab}";
        
        /// <summary>
        /// Type '{Tab}' in 'PART_EditableTextBox' text box
        /// </summary>
        public string UIPART_EditableTextBoxEditSendKeys3 = "{Tab}";
        
        /// <summary>
        /// Type '{Tab}' in 'Untick to disable recalculation' check box
        /// </summary>
        public string UIUnticktodisablerecalCheckBoxSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '{Tab}' in 'Next & Save' button
        /// </summary>
        public string UINextSaveButtonSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '{Tab}' in button numbered 2 in 'Data Entry' window
        /// </summary>
        public string UIItemButtonSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '{Tab}' in button numbered 3 in 'Data Entry' window
        /// </summary>
        public string UIItemButton1SendKeys = "{Tab}";
        
        /// <summary>
        /// Type '{Tab}' in 'PART_EditableTextBox' text box
        /// </summary>
        public string UIPART_EditableTextBoxEditSendKeys4 = "{Tab}";
        
        /// <summary>
        /// Type '{Tab}' in 'CustomerSelected' combo box
        /// </summary>
        public string UICustomerSelectedComboBoxSendKeys1 = "{Tab}";
        
        /// <summary>
        /// Type '{Tab}' in 'PART_EditableTextBox' text box
        /// </summary>
        public string UIPART_EditableTextBoxEditSendKeys5 = "{Tab}";
        
        /// <summary>
        /// Type '{Tab}' in 'Destination' combo box
        /// </summary>
        public string UIDestinationComboBoxSendKeys1 = "{Tab}";
        
        /// <summary>
        /// Type 'Control + s' in 'Vortex' window
        /// </summary>
        public string UIVortexWindow1SendKeys = "s";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIDebugWindow : WinWindow
    {
        
        public UIDebugWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Debug";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "CabinetWClass";
            this.WindowTitles.Add("Debug");
            #endregion
        }
        
        #region Properties
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Items View";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "DirectUIHWND";
            this.WindowTitles.Add("Debug");
            #endregion
        }
        
        #region Properties
        public UIVortexexeListItem UIVortexexeListItem
        {
            get
            {
                if ((this.mUIVortexexeListItem == null))
                {
                    this.mUIVortexexeListItem = new UIVortexexeListItem(this);
                }
                return this.mUIVortexexeListItem;
            }
        }
        #endregion
        
        #region Fields
        private UIVortexexeListItem mUIVortexexeListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIVortexexeListItem : WinListItem
    {
        
        public UIVortexexeListItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinListItem.PropertyNames.Name] = "Vortex.exe";
            this.WindowTitles.Add("Debug");
            #endregion
        }
        
        #region Properties
        public WinEdit UINameEdit
        {
            get
            {
                if ((this.mUINameEdit == null))
                {
                    this.mUINameEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUINameEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Name";
                    this.mUINameEdit.WindowTitles.Add("Debug");
                    #endregion
                }
                return this.mUINameEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINameEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UILoginWindow : WpfWindow
    {
        
        public UILoginWindow()
        {
            #region Search Criteria
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "Login";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Login");
            #endregion
        }
        
        #region Properties
        public WpfEdit UIUserNameEdit
        {
            get
            {
                if ((this.mUIUserNameEdit == null))
                {
                    this.mUIUserNameEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUIUserNameEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UserName";
                    this.mUIUserNameEdit.WindowTitles.Add("Login");
                    #endregion
                }
                return this.mUIUserNameEdit;
            }
        }
        
        public WpfEdit UIPasswordEdit
        {
            get
            {
                if ((this.mUIPasswordEdit == null))
                {
                    this.mUIPasswordEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUIPasswordEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Password";
                    this.mUIPasswordEdit.WindowTitles.Add("Login");
                    #endregion
                }
                return this.mUIPasswordEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mUIUserNameEdit;
        
        private WpfEdit mUIPasswordEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIVortexWindow : WpfWindow
    {
        
        public UIVortexWindow()
        {
            #region Search Criteria
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "Vortex";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Vortex");
            #endregion
        }
        
        #region Properties
        public UIItemTree UIItemTree
        {
            get
            {
                if ((this.mUIItemTree == null))
                {
                    this.mUIItemTree = new UIItemTree(this);
                }
                return this.mUIItemTree;
            }
        }
        
        public UIItemTree1 UIItemTree1
        {
            get
            {
                if ((this.mUIItemTree1 == null))
                {
                    this.mUIItemTree1 = new UIItemTree1(this);
                }
                return this.mUIItemTree1;
            }
        }
        
        public WpfButton UISanitizingButtonButton
        {
            get
            {
                if ((this.mUISanitizingButtonButton == null))
                {
                    this.mUISanitizingButtonButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUISanitizingButtonButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SanitizingButton";
                    this.mUISanitizingButtonButton.WindowTitles.Add("Vortex");
                    #endregion
                }
                return this.mUISanitizingButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private UIItemTree mUIItemTree;
        
        private UIItemTree1 mUIItemTree1;
        
        private WpfButton mUISanitizingButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIItemTree : WpfTree
    {
        
        public UIItemTree(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Vortex");
            #endregion
        }
        
        #region Properties
        public UIClientTreeTreeItem UIClientTreeTreeItem
        {
            get
            {
                if ((this.mUIClientTreeTreeItem == null))
                {
                    this.mUIClientTreeTreeItem = new UIClientTreeTreeItem(this);
                }
                return this.mUIClientTreeTreeItem;
            }
        }
        #endregion
        
        #region Fields
        private UIClientTreeTreeItem mUIClientTreeTreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIClientTreeTreeItem : WpfTreeItem
    {
        
        public UIClientTreeTreeItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Name] = "Client Tree";
            this.WindowTitles.Add("Vortex");
            #endregion
        }
        
        #region Properties
        public WpfTreeItem UIClientQuotationTreeItem
        {
            get
            {
                if ((this.mUIClientQuotationTreeItem == null))
                {
                    this.mUIClientQuotationTreeItem = new WpfTreeItem(this);
                    #region Search Criteria
                    this.mUIClientQuotationTreeItem.SearchProperties[WpfTreeItem.PropertyNames.AutomationId] = "Quotation";
                    this.mUIClientQuotationTreeItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUIClientQuotationTreeItem.WindowTitles.Add("Vortex");
                    #endregion
                }
                return this.mUIClientQuotationTreeItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfTreeItem mUIClientQuotationTreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIItemTree1 : WpfTree
    {
        
        public UIItemTree1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Vortex");
            #endregion
        }
        
        #region Properties
        public WpfTreeItem UIDataEntryTreeItem
        {
            get
            {
                if ((this.mUIDataEntryTreeItem == null))
                {
                    this.mUIDataEntryTreeItem = new WpfTreeItem(this);
                    #region Search Criteria
                    this.mUIDataEntryTreeItem.SearchProperties[WpfTreeItem.PropertyNames.Name] = "Data Entry";
                    this.mUIDataEntryTreeItem.WindowTitles.Add("Vortex");
                    #endregion
                }
                return this.mUIDataEntryTreeItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfTreeItem mUIDataEntryTreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIDataEntryWindow : WpfWindow
    {
        
        public UIDataEntryWindow()
        {
            #region Search Criteria
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "Data Entry";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Data Entry");
            #endregion
        }
        
        #region Properties
        public UIConnsignmentNumberComboBox UIConnsignmentNumberComboBox
        {
            get
            {
                if ((this.mUIConnsignmentNumberComboBox == null))
                {
                    this.mUIConnsignmentNumberComboBox = new UIConnsignmentNumberComboBox(this);
                }
                return this.mUIConnsignmentNumberComboBox;
            }
        }
        
        public WpfComboBox UICustomerSelectedComboBox
        {
            get
            {
                if ((this.mUICustomerSelectedComboBox == null))
                {
                    this.mUICustomerSelectedComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mUICustomerSelectedComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "CustomerSelected";
                    this.mUICustomerSelectedComboBox.WindowTitles.Add("Data Entry");
                    #endregion
                }
                return this.mUICustomerSelectedComboBox;
            }
        }
        
        public UISubClientComboBoxComboBox UISubClientComboBoxComboBox
        {
            get
            {
                if ((this.mUISubClientComboBoxComboBox == null))
                {
                    this.mUISubClientComboBoxComboBox = new UISubClientComboBoxComboBox(this);
                }
                return this.mUISubClientComboBoxComboBox;
            }
        }
        
        public WpfComboBox UIDestinationComboBox
        {
            get
            {
                if ((this.mUIDestinationComboBox == null))
                {
                    this.mUIDestinationComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mUIDestinationComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "Destination";
                    this.mUIDestinationComboBox.WindowTitles.Add("Data Entry");
                    #endregion
                }
                return this.mUIDestinationComboBox;
            }
        }
        
        public WpfEdit UIDestinationPinEdit
        {
            get
            {
                if ((this.mUIDestinationPinEdit == null))
                {
                    this.mUIDestinationPinEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUIDestinationPinEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "DestinationPin";
                    this.mUIDestinationPinEdit.WindowTitles.Add("Data Entry");
                    #endregion
                }
                return this.mUIDestinationPinEdit;
            }
        }
        
        public WpfComboBox UITypeComboBoxComboBox
        {
            get
            {
                if ((this.mUITypeComboBoxComboBox == null))
                {
                    this.mUITypeComboBoxComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mUITypeComboBoxComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "TypeComboBox";
                    this.mUITypeComboBoxComboBox.WindowTitles.Add("Data Entry");
                    #endregion
                }
                return this.mUITypeComboBoxComboBox;
            }
        }
        
        public WpfComboBox UIMODEComboBox
        {
            get
            {
                if ((this.mUIMODEComboBox == null))
                {
                    this.mUIMODEComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mUIMODEComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "MODE";
                    this.mUIMODEComboBox.WindowTitles.Add("Data Entry");
                    #endregion
                }
                return this.mUIMODEComboBox;
            }
        }
        
        public WpfComboBox UIDoxComboboxComboBox
        {
            get
            {
                if ((this.mUIDoxComboboxComboBox == null))
                {
                    this.mUIDoxComboboxComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mUIDoxComboboxComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "DoxCombobox";
                    this.mUIDoxComboboxComboBox.WindowTitles.Add("Data Entry");
                    #endregion
                }
                return this.mUIDoxComboboxComboBox;
            }
        }
        
        public WpfEdit UIHeightPacketBoxEdit
        {
            get
            {
                if ((this.mUIHeightPacketBoxEdit == null))
                {
                    this.mUIHeightPacketBoxEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUIHeightPacketBoxEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "HeightPacketBox";
                    this.mUIHeightPacketBoxEdit.WindowTitles.Add("Data Entry");
                    #endregion
                }
                return this.mUIHeightPacketBoxEdit;
            }
        }
        
        public WpfEdit UIBilledWeightTextBoxEdit
        {
            get
            {
                if ((this.mUIBilledWeightTextBoxEdit == null))
                {
                    this.mUIBilledWeightTextBoxEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUIBilledWeightTextBoxEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "BilledWeightTextBox";
                    this.mUIBilledWeightTextBoxEdit.WindowTitles.Add("Data Entry");
                    #endregion
                }
                return this.mUIBilledWeightTextBoxEdit;
            }
        }
        
        public WpfEdit UIInsuranceBoxEdit
        {
            get
            {
                if ((this.mUIInsuranceBoxEdit == null))
                {
                    this.mUIInsuranceBoxEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUIInsuranceBoxEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "InsuranceBox";
                    this.mUIInsuranceBoxEdit.WindowTitles.Add("Data Entry");
                    #endregion
                }
                return this.mUIInsuranceBoxEdit;
            }
        }
        
        public WpfEdit UIBilledAmountEdit
        {
            get
            {
                if ((this.mUIBilledAmountEdit == null))
                {
                    this.mUIBilledAmountEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUIBilledAmountEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "BilledAmount";
                    this.mUIBilledAmountEdit.WindowTitles.Add("Data Entry");
                    #endregion
                }
                return this.mUIBilledAmountEdit;
            }
        }
        
        public WpfEdit UICostEdit
        {
            get
            {
                if ((this.mUICostEdit == null))
                {
                    this.mUICostEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUICostEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Cost";
                    this.mUICostEdit.WindowTitles.Add("Data Entry");
                    #endregion
                }
                return this.mUICostEdit;
            }
        }
        
        public UIConsgineeNameComboBox UIConsgineeNameComboBox
        {
            get
            {
                if ((this.mUIConsgineeNameComboBox == null))
                {
                    this.mUIConsgineeNameComboBox = new UIConsgineeNameComboBox(this);
                }
                return this.mUIConsgineeNameComboBox;
            }
        }
        
        public UIConsignerNameComboBox UIConsignerNameComboBox
        {
            get
            {
                if ((this.mUIConsignerNameComboBox == null))
                {
                    this.mUIConsignerNameComboBox = new UIConsignerNameComboBox(this);
                }
                return this.mUIConsignerNameComboBox;
            }
        }
        
        public WpfCheckBox UIUnticktodisablerecalCheckBox
        {
            get
            {
                if ((this.mUIUnticktodisablerecalCheckBox == null))
                {
                    this.mUIUnticktodisablerecalCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mUIUnticktodisablerecalCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "RecalculateCheckBox";
                    this.mUIUnticktodisablerecalCheckBox.WindowTitles.Add("Data Entry");
                    #endregion
                }
                return this.mUIUnticktodisablerecalCheckBox;
            }
        }
        
        public WpfButton UINextSaveButton
        {
            get
            {
                if ((this.mUINextSaveButton == null))
                {
                    this.mUINextSaveButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUINextSaveButton.SearchProperties[WpfButton.PropertyNames.HelpText] = "Next & Save";
                    this.mUINextSaveButton.WindowTitles.Add("Data Entry");
                    #endregion
                }
                return this.mUINextSaveButton;
            }
        }
        
        public WpfButton UIItemButton
        {
            get
            {
                if ((this.mUIItemButton == null))
                {
                    this.mUIItemButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIItemButton.SearchProperties[WpfButton.PropertyNames.Instance] = "2";
                    this.mUIItemButton.WindowTitles.Add("Data Entry");
                    #endregion
                }
                return this.mUIItemButton;
            }
        }
        
        public WpfButton UIItemButton1
        {
            get
            {
                if ((this.mUIItemButton1 == null))
                {
                    this.mUIItemButton1 = new WpfButton(this);
                    #region Search Criteria
                    this.mUIItemButton1.SearchProperties[WpfButton.PropertyNames.Instance] = "3";
                    this.mUIItemButton1.WindowTitles.Add("Data Entry");
                    #endregion
                }
                return this.mUIItemButton1;
            }
        }
        #endregion
        
        #region Fields
        private UIConnsignmentNumberComboBox mUIConnsignmentNumberComboBox;
        
        private WpfComboBox mUICustomerSelectedComboBox;
        
        private UISubClientComboBoxComboBox mUISubClientComboBoxComboBox;
        
        private WpfComboBox mUIDestinationComboBox;
        
        private WpfEdit mUIDestinationPinEdit;
        
        private WpfComboBox mUITypeComboBoxComboBox;
        
        private WpfComboBox mUIMODEComboBox;
        
        private WpfComboBox mUIDoxComboboxComboBox;
        
        private WpfEdit mUIHeightPacketBoxEdit;
        
        private WpfEdit mUIBilledWeightTextBoxEdit;
        
        private WpfEdit mUIInsuranceBoxEdit;
        
        private WpfEdit mUIBilledAmountEdit;
        
        private WpfEdit mUICostEdit;
        
        private UIConsgineeNameComboBox mUIConsgineeNameComboBox;
        
        private UIConsignerNameComboBox mUIConsignerNameComboBox;
        
        private WpfCheckBox mUIUnticktodisablerecalCheckBox;
        
        private WpfButton mUINextSaveButton;
        
        private WpfButton mUIItemButton;
        
        private WpfButton mUIItemButton1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIConnsignmentNumberComboBox : WpfComboBox
    {
        
        public UIConnsignmentNumberComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "ConnsignmentNumber";
            this.WindowTitles.Add("Data Entry");
            #endregion
        }
        
        #region Properties
        public WpfEdit UIPART_EditableTextBoxEdit
        {
            get
            {
                if ((this.mUIPART_EditableTextBoxEdit == null))
                {
                    this.mUIPART_EditableTextBoxEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUIPART_EditableTextBoxEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "PART_EditableTextBox";
                    this.mUIPART_EditableTextBoxEdit.WindowTitles.Add("Data Entry");
                    #endregion
                }
                return this.mUIPART_EditableTextBoxEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mUIPART_EditableTextBoxEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UISubClientComboBoxComboBox : WpfComboBox
    {
        
        public UISubClientComboBoxComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "SubClientComboBox";
            this.WindowTitles.Add("Data Entry");
            #endregion
        }
        
        #region Properties
        public WpfEdit UIPART_EditableTextBoxEdit
        {
            get
            {
                if ((this.mUIPART_EditableTextBoxEdit == null))
                {
                    this.mUIPART_EditableTextBoxEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUIPART_EditableTextBoxEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "PART_EditableTextBox";
                    this.mUIPART_EditableTextBoxEdit.WindowTitles.Add("Data Entry");
                    #endregion
                }
                return this.mUIPART_EditableTextBoxEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mUIPART_EditableTextBoxEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIConsgineeNameComboBox : WpfComboBox
    {
        
        public UIConsgineeNameComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "ConsgineeName";
            this.WindowTitles.Add("Data Entry");
            #endregion
        }
        
        #region Properties
        public WpfEdit UIPART_EditableTextBoxEdit
        {
            get
            {
                if ((this.mUIPART_EditableTextBoxEdit == null))
                {
                    this.mUIPART_EditableTextBoxEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUIPART_EditableTextBoxEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "PART_EditableTextBox";
                    this.mUIPART_EditableTextBoxEdit.WindowTitles.Add("Data Entry");
                    #endregion
                }
                return this.mUIPART_EditableTextBoxEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mUIPART_EditableTextBoxEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIConsignerNameComboBox : WpfComboBox
    {
        
        public UIConsignerNameComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "ConsignerName";
            this.WindowTitles.Add("Data Entry");
            #endregion
        }
        
        #region Properties
        public WpfEdit UIPART_EditableTextBoxEdit
        {
            get
            {
                if ((this.mUIPART_EditableTextBoxEdit == null))
                {
                    this.mUIPART_EditableTextBoxEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUIPART_EditableTextBoxEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "PART_EditableTextBox";
                    this.mUIPART_EditableTextBoxEdit.WindowTitles.Add("Data Entry");
                    #endregion
                }
                return this.mUIPART_EditableTextBoxEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mUIPART_EditableTextBoxEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIDataEntryWindow1 : WinWindow
    {
        
        public UIDataEntryWindow1()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Data Entry";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Data Entry");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("Data Entry");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIVortexWindow1 : WinWindow
    {
        
        public UIVortexWindow1()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Vortex";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Vortex");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("Vortex");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
}
