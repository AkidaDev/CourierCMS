#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FinalUi
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="BillingDatabase")]
	public partial class BillingDataDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCity(City instance);
    partial void UpdateCity(City instance);
    partial void DeleteCity(City instance);
    partial void InsertZONE(ZONE instance);
    partial void UpdateZONE(ZONE instance);
    partial void DeleteZONE(ZONE instance);
    partial void InsertClient(Client instance);
    partial void UpdateClient(Client instance);
    partial void DeleteClient(Client instance);
    partial void InsertEmployee(Employee instance);
    partial void UpdateEmployee(Employee instance);
    partial void DeleteEmployee(Employee instance);
    partial void InsertInvoice(Invoice instance);
    partial void UpdateInvoice(Invoice instance);
    partial void DeleteInvoice(Invoice instance);
    partial void InsertInvoiceAnalyzeResult(InvoiceAnalyzeResult instance);
    partial void UpdateInvoiceAnalyzeResult(InvoiceAnalyzeResult instance);
    partial void DeleteInvoiceAnalyzeResult(InvoiceAnalyzeResult instance);
    partial void InsertInvoiceAssignment(InvoiceAssignment instance);
    partial void UpdateInvoiceAssignment(InvoiceAssignment instance);
    partial void DeleteInvoiceAssignment(InvoiceAssignment instance);
    partial void InsertPaymentEntry(PaymentEntry instance);
    partial void UpdatePaymentEntry(PaymentEntry instance);
    partial void DeletePaymentEntry(PaymentEntry instance);
    partial void InsertPermission(Permission instance);
    partial void UpdatePermission(Permission instance);
    partial void DeletePermission(Permission instance);
    partial void InsertQuotation(Quotation instance);
    partial void UpdateQuotation(Quotation instance);
    partial void DeleteQuotation(Quotation instance);
    partial void InsertRule(Rule instance);
    partial void UpdateRule(Rule instance);
    partial void DeleteRule(Rule instance);
    partial void InsertRuntimeData(RuntimeData instance);
    partial void UpdateRuntimeData(RuntimeData instance);
    partial void DeleteRuntimeData(RuntimeData instance);
    partial void InsertService(Service instance);
    partial void UpdateService(Service instance);
    partial void DeleteService(Service instance);
    partial void InsertServiceGroup(ServiceGroup instance);
    partial void UpdateServiceGroup(ServiceGroup instance);
    partial void DeleteServiceGroup(ServiceGroup instance);
    partial void InsertServiceGroupAssignment(ServiceGroupAssignment instance);
    partial void UpdateServiceGroupAssignment(ServiceGroupAssignment instance);
    partial void DeleteServiceGroupAssignment(ServiceGroupAssignment instance);
    partial void InsertState(State instance);
    partial void UpdateState(State instance);
    partial void DeleteState(State instance);
    partial void InsertStock(Stock instance);
    partial void UpdateStock(Stock instance);
    partial void DeleteStock(Stock instance);
    partial void InsertTransaction(Transaction instance);
    partial void UpdateTransaction(Transaction instance);
    partial void DeleteTransaction(Transaction instance);
    partial void InsertUser_permission(User_permission instance);
    partial void UpdateUser_permission(User_permission instance);
    partial void DeleteUser_permission(User_permission instance);
    partial void InsertExpense(Expense instance);
    partial void UpdateExpense(Expense instance);
    partial void DeleteExpense(Expense instance);
    #endregion
		
		
		public BillingDataDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BillingDataDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BillingDataDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BillingDataDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<City> Cities
		{
			get
			{
				return this.GetTable<City>();
			}
		}
		
		public System.Data.Linq.Table<ZONE> ZONEs
		{
			get
			{
				return this.GetTable<ZONE>();
			}
		}
		
		public System.Data.Linq.Table<Client> Clients
		{
			get
			{
				return this.GetTable<Client>();
			}
		}
		
		public System.Data.Linq.Table<Country> Countries
		{
			get
			{
				return this.GetTable<Country>();
			}
		}
		
		public System.Data.Linq.Table<Employee> Employees
		{
			get
			{
				return this.GetTable<Employee>();
			}
		}
		
		public System.Data.Linq.Table<Invoice> Invoices
		{
			get
			{
				return this.GetTable<Invoice>();
			}
		}
		
		public System.Data.Linq.Table<InvoiceAnalyzeResult> InvoiceAnalyzeResults
		{
			get
			{
				return this.GetTable<InvoiceAnalyzeResult>();
			}
		}
		
		public System.Data.Linq.Table<InvoiceAssignment> InvoiceAssignments
		{
			get
			{
				return this.GetTable<InvoiceAssignment>();
			}
		}
		
		public System.Data.Linq.Table<PaymentEntry> PaymentEntries
		{
			get
			{
				return this.GetTable<PaymentEntry>();
			}
		}
		
		public System.Data.Linq.Table<Permission> Permissions
		{
			get
			{
				return this.GetTable<Permission>();
			}
		}
		
		public System.Data.Linq.Table<Quotation> Quotations
		{
			get
			{
				return this.GetTable<Quotation>();
			}
		}
		
		public System.Data.Linq.Table<Rule> Rules
		{
			get
			{
				return this.GetTable<Rule>();
			}
		}
		
		public System.Data.Linq.Table<RuntimeData> RuntimeDatas
		{
			get
			{
				return this.GetTable<RuntimeData>();
			}
		}
		
		public System.Data.Linq.Table<Service> Services
		{
			get
			{
				return this.GetTable<Service>();
			}
		}
		
		public System.Data.Linq.Table<ServiceGroup> ServiceGroups
		{
			get
			{
				return this.GetTable<ServiceGroup>();
			}
		}
		
		public System.Data.Linq.Table<ServiceGroupAssignment> ServiceGroupAssignments
		{
			get
			{
				return this.GetTable<ServiceGroupAssignment>();
			}
		}
		
		public System.Data.Linq.Table<State> States
		{
			get
			{
				return this.GetTable<State>();
			}
		}
		
		public System.Data.Linq.Table<Stock> Stocks
		{
			get
			{
				return this.GetTable<Stock>();
			}
		}
		
		public System.Data.Linq.Table<Transaction> Transactions
		{
			get
			{
				return this.GetTable<Transaction>();
			}
		}
		
		public System.Data.Linq.Table<User_permission> User_permissions
		{
			get
			{
				return this.GetTable<User_permission>();
			}
		}
		
		public System.Data.Linq.Table<AccountStatement> AccountStatements
		{
			get
			{
				return this.GetTable<AccountStatement>();
			}
		}
		
		public System.Data.Linq.Table<TransactionCityView> TransactionCityViews
		{
			get
			{
				return this.GetTable<TransactionCityView>();
			}
		}
		
		public System.Data.Linq.Table<BalanceView> BalanceViews
		{
			get
			{
				return this.GetTable<BalanceView>();
			}
		}
		
		public System.Data.Linq.Table<InvoiceView> InvoiceViews
		{
			get
			{
				return this.GetTable<InvoiceView>();
			}
		}
		
		public System.Data.Linq.Table<MISReportView> MISReportViews
		{
			get
			{
				return this.GetTable<MISReportView>();
			}
		}
		
		public System.Data.Linq.Table<PROFITVIEW> PROFITVIEWs
		{
			get
			{
				return this.GetTable<PROFITVIEW>();
			}
		}
		
		public System.Data.Linq.Table<RuntimeCityView> RuntimeCityViews
		{
			get
			{
				return this.GetTable<RuntimeCityView>();
			}
		}
		
		public System.Data.Linq.Table<StockAssignmentView> StockAssignmentViews
		{
			get
			{
				return this.GetTable<StockAssignmentView>();
			}
		}
		
		public System.Data.Linq.Table<Expense> Expenses
		{
			get
			{
				return this.GetTable<Expense>();
			}
		}
		
		public System.Data.Linq.Table<ClientReportView> ClientReportViews
		{
			get
			{
				return this.GetTable<ClientReportView>();
			}
		}
		
		public System.Data.Linq.Table<AccountStatementFull> AccountStatementFulls
		{
			get
			{
				return this.GetTable<AccountStatementFull>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ImportFileData")]
		public int ImportFileData([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SheetNo", DbType="Int")] System.Nullable<int> sheetNo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserName", DbType="VarChar(50)")] string userName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EmpName", DbType="VarChar(50)")] string empName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), sheetNo, userName, empName);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_TransferTransactionDetails")]
		public int sp_TransferTransactionDetails()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SaveRuntimeData")]
		public int SaveRuntimeData([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SheetNo", DbType="Int")] System.Nullable<int> sheetNo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserName", DbType="VarChar(50)")] string userName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), sheetNo, userName);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_deleteSheetFromRuntime")]
		public int sp_deleteSheetFromRuntime([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserName", DbType="VarChar(50)")] string userName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SheetNo", DbType="Int")] System.Nullable<int> sheetNo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userName, sheetNo);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_LoadToRuntimeFromBookNo")]
		public int sp_LoadToRuntimeFromBookNo([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StockStart", DbType="VarChar(50)")] string stockStart, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StockEnd", DbType="VarChar(50)")] string stockEnd, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserName", DbType="VarChar(50)")] string userName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SheetNo", DbType="Int")] System.Nullable<int> sheetNo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), stockStart, stockEnd, userName, sheetNo);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_LoadToRuntimeFromDate")]
		public int sp_LoadToRuntimeFromDate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserName", DbType="VarChar(50)")] string userName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SheetNo", DbType="Int")] System.Nullable<int> sheetNo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ToDate", DbType="DateTime")] System.Nullable<System.DateTime> toDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FromDate", DbType="DateTime")] System.Nullable<System.DateTime> fromDate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userName, sheetNo, toDate, fromDate);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_ReflectTransactionInRuntime")]
		public int sp_ReflectTransactionInRuntime()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_TransferClients")]
		public int sp_TransferClients()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_TransferFRWRDRAsService")]
		public int sp_TransferFRWRDRAsService()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_TransferMInvoiceDetailToBInvoiceDetail", IsComposable=true)]
		public object sp_TransferMInvoiceDetailToBInvoiceDetail()
		{
			return ((object)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod()))).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_TransferMInvoiceToBInvoice", IsComposable=true)]
		public object sp_TransferMInvoiceToBInvoice()
		{
			return ((object)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod()))).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_TransferPaymentDetails")]
		public int sp_TransferPaymentDetails()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_TransferRatespart1", IsComposable=true)]
		public object sp_TransferRatespart1()
		{
			return ((object)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod()))).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_TransferRatespart2", IsComposable=true)]
		public object sp_TransferRatespart2()
		{
			return ((object)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod()))).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetPreviousDue", IsComposable=true)]
		public System.Nullable<double> GetPreviousDue([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CLCODE", DbType="VarChar(6)")] string cLCODE)
		{
			return ((System.Nullable<double>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), cLCODE).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateBillingAmount")]
		public int UpdateBillingAmount()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.getRate", IsComposable=true)]
		public System.Nullable<decimal> getRate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ConsignmentNo", DbType="VarChar(255)")] string consignmentNo)
		{
			return ((System.Nullable<decimal>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), consignmentNo).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CarryOverDue", IsComposable=true)]
		public System.Nullable<double> CarryOverDue([global::System.Data.Linq.Mapping.ParameterAttribute(Name="OnDate", DbType="Date")] System.Nullable<System.DateTime> onDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClientCode", DbType="VarChar(50)")] string clientCode)
		{
			return ((System.Nullable<double>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), onDate, clientCode).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CarryOverDue", IsComposable=true)]
		public System.Nullable<double> CarryOverDue1([global::System.Data.Linq.Mapping.ParameterAttribute(Name="OnDate", DbType="Date")] System.Nullable<System.DateTime> onDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClientCode", DbType="VarChar(50)")] string clientCode)
		{
			return ((System.Nullable<double>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), onDate, clientCode).ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.City")]
	public partial class City : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CITY_CODE;
		
		private string _CITY_DESC;
		
		private string _CITY_STATE;
		
		private string _CITY_STATUS;
		
		private string _CITY_STATE_DESC;
		
		private System.Nullable<System.DateTime> _MOD_DATE;
		
		private System.Nullable<double> _MOD_TIME;
		
		private string _NODEID;
		
		private string _USERID;
		
		private string _TRANS_STATUS;
		
		private string _CITY_COD;
		
		private string _CITY_CATG_PDN;
		
		private System.Nullable<double> _city_category;
		
		private string _ZONE;
		
		private char _Status;
		
		private EntityRef<State> _State;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCITY_CODEChanging(string value);
    partial void OnCITY_CODEChanged();
    partial void OnCITY_DESCChanging(string value);
    partial void OnCITY_DESCChanged();
    partial void OnCITY_STATEChanging(string value);
    partial void OnCITY_STATEChanged();
    partial void OnCITY_STATUSChanging(string value);
    partial void OnCITY_STATUSChanged();
    partial void OnCITY_STATE_DESCChanging(string value);
    partial void OnCITY_STATE_DESCChanged();
    partial void OnMOD_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnMOD_DATEChanged();
    partial void OnMOD_TIMEChanging(System.Nullable<double> value);
    partial void OnMOD_TIMEChanged();
    partial void OnNODEIDChanging(string value);
    partial void OnNODEIDChanged();
    partial void OnUSERIDChanging(string value);
    partial void OnUSERIDChanged();
    partial void OnTRANS_STATUSChanging(string value);
    partial void OnTRANS_STATUSChanged();
    partial void OnCITY_CODChanging(string value);
    partial void OnCITY_CODChanged();
    partial void OnCITY_CATG_PDNChanging(string value);
    partial void OnCITY_CATG_PDNChanged();
    partial void Oncity_categoryChanging(System.Nullable<double> value);
    partial void Oncity_categoryChanged();
    partial void OnZONEChanging(string value);
    partial void OnZONEChanged();
    partial void OnStatusChanging(char value);
    partial void OnStatusChanged();
    #endregion
		
		public City()
		{
			this._State = default(EntityRef<State>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CITY_CODE", DbType="VarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CITY_CODE
		{
			get
			{
				return this._CITY_CODE;
			}
			set
			{
				if ((this._CITY_CODE != value))
				{
					this.OnCITY_CODEChanging(value);
					this.SendPropertyChanging();
					this._CITY_CODE = value;
					this.SendPropertyChanged("CITY_CODE");
					this.OnCITY_CODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CITY_DESC", DbType="NVarChar(255)")]
		public string CITY_DESC
		{
			get
			{
				return this._CITY_DESC;
			}
			set
			{
				if ((this._CITY_DESC != value))
				{
					this.OnCITY_DESCChanging(value);
					this.SendPropertyChanging();
					this._CITY_DESC = value;
					this.SendPropertyChanged("CITY_DESC");
					this.OnCITY_DESCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CITY_STATE", DbType="NVarChar(255)")]
		public string CITY_STATE
		{
			get
			{
				return this._CITY_STATE;
			}
			set
			{
				if ((this._CITY_STATE != value))
				{
					if (this._State.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCITY_STATEChanging(value);
					this.SendPropertyChanging();
					this._CITY_STATE = value;
					this.SendPropertyChanged("CITY_STATE");
					this.OnCITY_STATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CITY_STATUS", DbType="NVarChar(255)")]
		public string CITY_STATUS
		{
			get
			{
				return this._CITY_STATUS;
			}
			set
			{
				if ((this._CITY_STATUS != value))
				{
					this.OnCITY_STATUSChanging(value);
					this.SendPropertyChanging();
					this._CITY_STATUS = value;
					this.SendPropertyChanged("CITY_STATUS");
					this.OnCITY_STATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CITY_STATE_DESC", DbType="NVarChar(255)")]
		public string CITY_STATE_DESC
		{
			get
			{
				return this._CITY_STATE_DESC;
			}
			set
			{
				if ((this._CITY_STATE_DESC != value))
				{
					this.OnCITY_STATE_DESCChanging(value);
					this.SendPropertyChanging();
					this._CITY_STATE_DESC = value;
					this.SendPropertyChanged("CITY_STATE_DESC");
					this.OnCITY_STATE_DESCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MOD_DATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> MOD_DATE
		{
			get
			{
				return this._MOD_DATE;
			}
			set
			{
				if ((this._MOD_DATE != value))
				{
					this.OnMOD_DATEChanging(value);
					this.SendPropertyChanging();
					this._MOD_DATE = value;
					this.SendPropertyChanged("MOD_DATE");
					this.OnMOD_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MOD_TIME", DbType="Float")]
		public System.Nullable<double> MOD_TIME
		{
			get
			{
				return this._MOD_TIME;
			}
			set
			{
				if ((this._MOD_TIME != value))
				{
					this.OnMOD_TIMEChanging(value);
					this.SendPropertyChanging();
					this._MOD_TIME = value;
					this.SendPropertyChanged("MOD_TIME");
					this.OnMOD_TIMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NODEID", DbType="NVarChar(255)")]
		public string NODEID
		{
			get
			{
				return this._NODEID;
			}
			set
			{
				if ((this._NODEID != value))
				{
					this.OnNODEIDChanging(value);
					this.SendPropertyChanging();
					this._NODEID = value;
					this.SendPropertyChanged("NODEID");
					this.OnNODEIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USERID", DbType="NVarChar(255)")]
		public string USERID
		{
			get
			{
				return this._USERID;
			}
			set
			{
				if ((this._USERID != value))
				{
					this.OnUSERIDChanging(value);
					this.SendPropertyChanging();
					this._USERID = value;
					this.SendPropertyChanged("USERID");
					this.OnUSERIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRANS_STATUS", DbType="NVarChar(255)")]
		public string TRANS_STATUS
		{
			get
			{
				return this._TRANS_STATUS;
			}
			set
			{
				if ((this._TRANS_STATUS != value))
				{
					this.OnTRANS_STATUSChanging(value);
					this.SendPropertyChanging();
					this._TRANS_STATUS = value;
					this.SendPropertyChanged("TRANS_STATUS");
					this.OnTRANS_STATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CITY_COD", DbType="NVarChar(255)")]
		public string CITY_COD
		{
			get
			{
				return this._CITY_COD;
			}
			set
			{
				if ((this._CITY_COD != value))
				{
					this.OnCITY_CODChanging(value);
					this.SendPropertyChanging();
					this._CITY_COD = value;
					this.SendPropertyChanged("CITY_COD");
					this.OnCITY_CODChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CITY_CATG_PDN", DbType="NVarChar(255)")]
		public string CITY_CATG_PDN
		{
			get
			{
				return this._CITY_CATG_PDN;
			}
			set
			{
				if ((this._CITY_CATG_PDN != value))
				{
					this.OnCITY_CATG_PDNChanging(value);
					this.SendPropertyChanging();
					this._CITY_CATG_PDN = value;
					this.SendPropertyChanged("CITY_CATG_PDN");
					this.OnCITY_CATG_PDNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city_category", DbType="Float")]
		public System.Nullable<double> city_category
		{
			get
			{
				return this._city_category;
			}
			set
			{
				if ((this._city_category != value))
				{
					this.Oncity_categoryChanging(value);
					this.SendPropertyChanging();
					this._city_category = value;
					this.SendPropertyChanged("city_category");
					this.Oncity_categoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZONE", DbType="VarChar(30)")]
		public string ZONE
		{
			get
			{
				return this._ZONE;
			}
			set
			{
				if ((this._ZONE != value))
				{
					this.OnZONEChanging(value);
					this.SendPropertyChanging();
					this._ZONE = value;
					this.SendPropertyChanged("ZONE");
					this.OnZONEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Char(1) NOT NULL")]
		public char Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="State_City", Storage="_State", ThisKey="CITY_STATE", OtherKey="STATE_CODE", IsForeignKey=true)]
		public State State
		{
			get
			{
				return this._State.Entity;
			}
			set
			{
				State previousValue = this._State.Entity;
				if (((previousValue != value) 
							|| (this._State.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._State.Entity = null;
						previousValue.Cities.Remove(this);
					}
					this._State.Entity = value;
					if ((value != null))
					{
						value.Cities.Add(this);
						this._CITY_STATE = value.STATE_CODE;
					}
					else
					{
						this._CITY_STATE = default(string);
					}
					this.SendPropertyChanged("State");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ZONE")]
	public partial class ZONE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _zcode;
		
		private string _Zone_name;
		
		private System.Nullable<char> _Mode;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnzcodeChanging(string value);
    partial void OnzcodeChanged();
    partial void OnZone_nameChanging(string value);
    partial void OnZone_nameChanged();
    partial void OnModeChanging(System.Nullable<char> value);
    partial void OnModeChanged();
    #endregion
		
		public ZONE()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zcode", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string zcode
		{
			get
			{
				return this._zcode;
			}
			set
			{
				if ((this._zcode != value))
				{
					this.OnzcodeChanging(value);
					this.SendPropertyChanging();
					this._zcode = value;
					this.SendPropertyChanged("zcode");
					this.OnzcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zone_name", DbType="VarChar(20)")]
		public string Zone_name
		{
			get
			{
				return this._Zone_name;
			}
			set
			{
				if ((this._Zone_name != value))
				{
					this.OnZone_nameChanging(value);
					this.SendPropertyChanging();
					this._Zone_name = value;
					this.SendPropertyChanged("Zone_name");
					this.OnZone_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mode", DbType="Char(1)")]
		public System.Nullable<char> Mode
		{
			get
			{
				return this._Mode;
			}
			set
			{
				if ((this._Mode != value))
				{
					this.OnModeChanging(value);
					this.SendPropertyChanging();
					this._Mode = value;
					this.SendPropertyChanged("Mode");
					this.OnModeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Client")]
	public partial class Client : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CLCODE;
		
		private string _CLNAME;
		
		private string _CPERSON;
		
		private string _ADDRESS;
		
		private string _STREET;
		
		private string _CITY_NAME;
		
		private string _CONTACTNO;
		
		private string _EMAILID;
		
		private System.Nullable<double> _FUEL;
		
		private System.Nullable<double> _OPBALANCE;
		
		private System.Nullable<double> _AMTADD;
		
		private System.Nullable<double> _AMTDISC;
		
		private System.Nullable<double> _STAX;
		
		private string _BRANCH;
		
		private System.Nullable<char> _CLEXT;
		
		private System.Nullable<double> _ADSDOX;
		
		private System.Nullable<double> _ADSNDOX;
		
		private System.Nullable<System.DateTime> _INTRODATE;
		
		private string _BOYCD;
		
		private string _BOYNAME;
		
		private string _APPTRF;
		
		private System.Nullable<bool> _CASTATUS;
		
		private char _Status;
		
		private EntitySet<PaymentEntry> _PaymentEntries;
		
		private EntitySet<Quotation> _Quotations;
		
		private EntitySet<Transaction> _Transactions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCLCODEChanging(string value);
    partial void OnCLCODEChanged();
    partial void OnCLNAMEChanging(string value);
    partial void OnCLNAMEChanged();
    partial void OnCPERSONChanging(string value);
    partial void OnCPERSONChanged();
    partial void OnADDRESSChanging(string value);
    partial void OnADDRESSChanged();
    partial void OnSTREETChanging(string value);
    partial void OnSTREETChanged();
    partial void OnCITY_NAMEChanging(string value);
    partial void OnCITY_NAMEChanged();
    partial void OnCONTACTNOChanging(string value);
    partial void OnCONTACTNOChanged();
    partial void OnEMAILIDChanging(string value);
    partial void OnEMAILIDChanged();
    partial void OnFUELChanging(System.Nullable<double> value);
    partial void OnFUELChanged();
    partial void OnOPBALANCEChanging(System.Nullable<double> value);
    partial void OnOPBALANCEChanged();
    partial void OnAMTADDChanging(System.Nullable<double> value);
    partial void OnAMTADDChanged();
    partial void OnAMTDISCChanging(System.Nullable<double> value);
    partial void OnAMTDISCChanged();
    partial void OnSTAXChanging(System.Nullable<double> value);
    partial void OnSTAXChanged();
    partial void OnBRANCHChanging(string value);
    partial void OnBRANCHChanged();
    partial void OnCLEXTChanging(System.Nullable<char> value);
    partial void OnCLEXTChanged();
    partial void OnADSDOXChanging(System.Nullable<double> value);
    partial void OnADSDOXChanged();
    partial void OnADSNDOXChanging(System.Nullable<double> value);
    partial void OnADSNDOXChanged();
    partial void OnINTRODATEChanging(System.Nullable<System.DateTime> value);
    partial void OnINTRODATEChanged();
    partial void OnBOYCDChanging(string value);
    partial void OnBOYCDChanged();
    partial void OnBOYNAMEChanging(string value);
    partial void OnBOYNAMEChanged();
    partial void OnAPPTRFChanging(string value);
    partial void OnAPPTRFChanged();
    partial void OnCASTATUSChanging(System.Nullable<bool> value);
    partial void OnCASTATUSChanged();
    partial void OnStatusChanging(char value);
    partial void OnStatusChanged();
    #endregion
		
		public Client()
		{
			this._PaymentEntries = new EntitySet<PaymentEntry>(new Action<PaymentEntry>(this.attach_PaymentEntries), new Action<PaymentEntry>(this.detach_PaymentEntries));
			this._Quotations = new EntitySet<Quotation>(new Action<Quotation>(this.attach_Quotations), new Action<Quotation>(this.detach_Quotations));
			this._Transactions = new EntitySet<Transaction>(new Action<Transaction>(this.attach_Transactions), new Action<Transaction>(this.detach_Transactions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CLCODE", DbType="VarChar(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CLCODE
		{
			get
			{
				return this._CLCODE;
			}
			set
			{
				if ((this._CLCODE != value))
				{
					this.OnCLCODEChanging(value);
					this.SendPropertyChanging();
					this._CLCODE = value;
					this.SendPropertyChanged("CLCODE");
					this.OnCLCODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CLNAME", DbType="VarChar(50)")]
		public string CLNAME
		{
			get
			{
				return this._CLNAME;
			}
			set
			{
				if ((this._CLNAME != value))
				{
					this.OnCLNAMEChanging(value);
					this.SendPropertyChanging();
					this._CLNAME = value;
					this.SendPropertyChanged("CLNAME");
					this.OnCLNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CPERSON", DbType="VarChar(50)")]
		public string CPERSON
		{
			get
			{
				return this._CPERSON;
			}
			set
			{
				if ((this._CPERSON != value))
				{
					this.OnCPERSONChanging(value);
					this.SendPropertyChanging();
					this._CPERSON = value;
					this.SendPropertyChanged("CPERSON");
					this.OnCPERSONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADDRESS", DbType="VarChar(100)")]
		public string ADDRESS
		{
			get
			{
				return this._ADDRESS;
			}
			set
			{
				if ((this._ADDRESS != value))
				{
					this.OnADDRESSChanging(value);
					this.SendPropertyChanging();
					this._ADDRESS = value;
					this.SendPropertyChanged("ADDRESS");
					this.OnADDRESSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STREET", DbType="VarChar(100)")]
		public string STREET
		{
			get
			{
				return this._STREET;
			}
			set
			{
				if ((this._STREET != value))
				{
					this.OnSTREETChanging(value);
					this.SendPropertyChanging();
					this._STREET = value;
					this.SendPropertyChanged("STREET");
					this.OnSTREETChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CITY_NAME", DbType="VarChar(20)")]
		public string CITY_NAME
		{
			get
			{
				return this._CITY_NAME;
			}
			set
			{
				if ((this._CITY_NAME != value))
				{
					this.OnCITY_NAMEChanging(value);
					this.SendPropertyChanging();
					this._CITY_NAME = value;
					this.SendPropertyChanged("CITY_NAME");
					this.OnCITY_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CONTACTNO", DbType="VarChar(50)")]
		public string CONTACTNO
		{
			get
			{
				return this._CONTACTNO;
			}
			set
			{
				if ((this._CONTACTNO != value))
				{
					this.OnCONTACTNOChanging(value);
					this.SendPropertyChanging();
					this._CONTACTNO = value;
					this.SendPropertyChanged("CONTACTNO");
					this.OnCONTACTNOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAILID", DbType="VarChar(50)")]
		public string EMAILID
		{
			get
			{
				return this._EMAILID;
			}
			set
			{
				if ((this._EMAILID != value))
				{
					this.OnEMAILIDChanging(value);
					this.SendPropertyChanging();
					this._EMAILID = value;
					this.SendPropertyChanged("EMAILID");
					this.OnEMAILIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FUEL", DbType="Float")]
		public System.Nullable<double> FUEL
		{
			get
			{
				return this._FUEL;
			}
			set
			{
				if ((this._FUEL != value))
				{
					this.OnFUELChanging(value);
					this.SendPropertyChanging();
					this._FUEL = value;
					this.SendPropertyChanged("FUEL");
					this.OnFUELChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OPBALANCE", DbType="Float")]
		public System.Nullable<double> OPBALANCE
		{
			get
			{
				return this._OPBALANCE;
			}
			set
			{
				if ((this._OPBALANCE != value))
				{
					this.OnOPBALANCEChanging(value);
					this.SendPropertyChanging();
					this._OPBALANCE = value;
					this.SendPropertyChanged("OPBALANCE");
					this.OnOPBALANCEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AMTADD", DbType="Float")]
		public System.Nullable<double> AMTADD
		{
			get
			{
				return this._AMTADD;
			}
			set
			{
				if ((this._AMTADD != value))
				{
					this.OnAMTADDChanging(value);
					this.SendPropertyChanging();
					this._AMTADD = value;
					this.SendPropertyChanged("AMTADD");
					this.OnAMTADDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AMTDISC", DbType="Float")]
		public System.Nullable<double> AMTDISC
		{
			get
			{
				return this._AMTDISC;
			}
			set
			{
				if ((this._AMTDISC != value))
				{
					this.OnAMTDISCChanging(value);
					this.SendPropertyChanging();
					this._AMTDISC = value;
					this.SendPropertyChanged("AMTDISC");
					this.OnAMTDISCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STAX", DbType="Float")]
		public System.Nullable<double> STAX
		{
			get
			{
				return this._STAX;
			}
			set
			{
				if ((this._STAX != value))
				{
					this.OnSTAXChanging(value);
					this.SendPropertyChanging();
					this._STAX = value;
					this.SendPropertyChanged("STAX");
					this.OnSTAXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BRANCH", DbType="VarChar(50)")]
		public string BRANCH
		{
			get
			{
				return this._BRANCH;
			}
			set
			{
				if ((this._BRANCH != value))
				{
					this.OnBRANCHChanging(value);
					this.SendPropertyChanging();
					this._BRANCH = value;
					this.SendPropertyChanged("BRANCH");
					this.OnBRANCHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CLEXT", DbType="Char(1)")]
		public System.Nullable<char> CLEXT
		{
			get
			{
				return this._CLEXT;
			}
			set
			{
				if ((this._CLEXT != value))
				{
					this.OnCLEXTChanging(value);
					this.SendPropertyChanging();
					this._CLEXT = value;
					this.SendPropertyChanged("CLEXT");
					this.OnCLEXTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADSDOX", DbType="Float")]
		public System.Nullable<double> ADSDOX
		{
			get
			{
				return this._ADSDOX;
			}
			set
			{
				if ((this._ADSDOX != value))
				{
					this.OnADSDOXChanging(value);
					this.SendPropertyChanging();
					this._ADSDOX = value;
					this.SendPropertyChanged("ADSDOX");
					this.OnADSDOXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADSNDOX", DbType="Float")]
		public System.Nullable<double> ADSNDOX
		{
			get
			{
				return this._ADSNDOX;
			}
			set
			{
				if ((this._ADSNDOX != value))
				{
					this.OnADSNDOXChanging(value);
					this.SendPropertyChanging();
					this._ADSNDOX = value;
					this.SendPropertyChanged("ADSNDOX");
					this.OnADSNDOXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INTRODATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> INTRODATE
		{
			get
			{
				return this._INTRODATE;
			}
			set
			{
				if ((this._INTRODATE != value))
				{
					this.OnINTRODATEChanging(value);
					this.SendPropertyChanging();
					this._INTRODATE = value;
					this.SendPropertyChanged("INTRODATE");
					this.OnINTRODATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BOYCD", DbType="Char(10)")]
		public string BOYCD
		{
			get
			{
				return this._BOYCD;
			}
			set
			{
				if ((this._BOYCD != value))
				{
					this.OnBOYCDChanging(value);
					this.SendPropertyChanging();
					this._BOYCD = value;
					this.SendPropertyChanged("BOYCD");
					this.OnBOYCDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BOYNAME", DbType="VarChar(50)")]
		public string BOYNAME
		{
			get
			{
				return this._BOYNAME;
			}
			set
			{
				if ((this._BOYNAME != value))
				{
					this.OnBOYNAMEChanging(value);
					this.SendPropertyChanging();
					this._BOYNAME = value;
					this.SendPropertyChanged("BOYNAME");
					this.OnBOYNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_APPTRF", DbType="VarChar(6)")]
		public string APPTRF
		{
			get
			{
				return this._APPTRF;
			}
			set
			{
				if ((this._APPTRF != value))
				{
					this.OnAPPTRFChanging(value);
					this.SendPropertyChanging();
					this._APPTRF = value;
					this.SendPropertyChanged("APPTRF");
					this.OnAPPTRFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CASTATUS", DbType="Bit")]
		public System.Nullable<bool> CASTATUS
		{
			get
			{
				return this._CASTATUS;
			}
			set
			{
				if ((this._CASTATUS != value))
				{
					this.OnCASTATUSChanging(value);
					this.SendPropertyChanging();
					this._CASTATUS = value;
					this.SendPropertyChanged("CASTATUS");
					this.OnCASTATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Char(1) NOT NULL")]
		public char Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_PaymentEntry", Storage="_PaymentEntries", ThisKey="CLCODE", OtherKey="ClientCode")]
		public EntitySet<PaymentEntry> PaymentEntries
		{
			get
			{
				return this._PaymentEntries;
			}
			set
			{
				this._PaymentEntries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_Quotation", Storage="_Quotations", ThisKey="CLCODE", OtherKey="CLCODE")]
		public EntitySet<Quotation> Quotations
		{
			get
			{
				return this._Quotations;
			}
			set
			{
				this._Quotations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_Transaction", Storage="_Transactions", ThisKey="CLCODE", OtherKey="CustCode")]
		public EntitySet<Transaction> Transactions
		{
			get
			{
				return this._Transactions;
			}
			set
			{
				this._Transactions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PaymentEntries(PaymentEntry entity)
		{
			this.SendPropertyChanging();
			entity.Client = this;
		}
		
		private void detach_PaymentEntries(PaymentEntry entity)
		{
			this.SendPropertyChanging();
			entity.Client = null;
		}
		
		private void attach_Quotations(Quotation entity)
		{
			this.SendPropertyChanging();
			entity.Client = this;
		}
		
		private void detach_Quotations(Quotation entity)
		{
			this.SendPropertyChanging();
			entity.Client = null;
		}
		
		private void attach_Transactions(Transaction entity)
		{
			this.SendPropertyChanging();
			entity.Client = this;
		}
		
		private void detach_Transactions(Transaction entity)
		{
			this.SendPropertyChanging();
			entity.Client = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Country")]
	public partial class Country
	{
		
		private string _cc_fips;
		
		private string _cc_iso;
		
		private string _tld;
		
		private string _country_name;
		
		public Country()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cc_fips", DbType="NVarChar(2) NOT NULL", CanBeNull=false)]
		public string cc_fips
		{
			get
			{
				return this._cc_fips;
			}
			set
			{
				if ((this._cc_fips != value))
				{
					this._cc_fips = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cc_iso", DbType="NVarChar(2) NOT NULL", CanBeNull=false)]
		public string cc_iso
		{
			get
			{
				return this._cc_iso;
			}
			set
			{
				if ((this._cc_iso != value))
				{
					this._cc_iso = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tld", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		public string tld
		{
			get
			{
				return this._tld;
			}
			set
			{
				if ((this._tld != value))
				{
					this._tld = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_country_name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string country_name
		{
			get
			{
				return this._country_name;
			}
			set
			{
				if ((this._country_name != value))
				{
					this._country_name = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Employee")]
	public partial class Employee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _Name;
		
		private System.Nullable<char> _Gender;
		
		private string _EMPCode;
		
		private string _UserName;
		
		private string _Password;
		
		private char _Status;
		
		private string _Address;
		
		private string _ContactNo;
		
		private string _Other;
		
		private EntitySet<Stock> _Stocks;
		
		private EntitySet<Transaction> _Transactions;
		
		private EntitySet<User_permission> _User_permissions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnGenderChanging(System.Nullable<char> value);
    partial void OnGenderChanged();
    partial void OnEMPCodeChanging(string value);
    partial void OnEMPCodeChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnStatusChanging(char value);
    partial void OnStatusChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnContactNoChanging(string value);
    partial void OnContactNoChanged();
    partial void OnOtherChanging(string value);
    partial void OnOtherChanged();
    #endregion
		
		public Employee()
		{
			this._Stocks = new EntitySet<Stock>(new Action<Stock>(this.attach_Stocks), new Action<Stock>(this.detach_Stocks));
			this._Transactions = new EntitySet<Transaction>(new Action<Transaction>(this.attach_Transactions), new Action<Transaction>(this.detach_Transactions));
			this._User_permissions = new EntitySet<User_permission>(new Action<User_permission>(this.attach_User_permissions), new Action<User_permission>(this.detach_User_permissions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="Char(1)")]
		public System.Nullable<char> Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMPCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string EMPCode
		{
			get
			{
				return this._EMPCode;
			}
			set
			{
				if ((this._EMPCode != value))
				{
					this.OnEMPCodeChanging(value);
					this.SendPropertyChanging();
					this._EMPCode = value;
					this.SendPropertyChanged("EMPCode");
					this.OnEMPCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Char(1) NOT NULL")]
		public char Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(150)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactNo", DbType="VarChar(50)")]
		public string ContactNo
		{
			get
			{
				return this._ContactNo;
			}
			set
			{
				if ((this._ContactNo != value))
				{
					this.OnContactNoChanging(value);
					this.SendPropertyChanging();
					this._ContactNo = value;
					this.SendPropertyChanged("ContactNo");
					this.OnContactNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Other", DbType="VarChar(100)")]
		public string Other
		{
			get
			{
				return this._Other;
			}
			set
			{
				if ((this._Other != value))
				{
					this.OnOtherChanging(value);
					this.SendPropertyChanging();
					this._Other = value;
					this.SendPropertyChanged("Other");
					this.OnOtherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Stock", Storage="_Stocks", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<Stock> Stocks
		{
			get
			{
				return this._Stocks;
			}
			set
			{
				this._Stocks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Transaction", Storage="_Transactions", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<Transaction> Transactions
		{
			get
			{
				return this._Transactions;
			}
			set
			{
				this._Transactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_User_permission", Storage="_User_permissions", ThisKey="Id", OtherKey="emp_id")]
		public EntitySet<User_permission> User_permissions
		{
			get
			{
				return this._User_permissions;
			}
			set
			{
				this._User_permissions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Stocks(Stock entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_Stocks(Stock entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_Transactions(Transaction entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_Transactions(Transaction entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_User_permissions(User_permission entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_User_permissions(User_permission entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Invoice")]
	public partial class Invoice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _BillId;
		
		private string _ClientCode;
		
		private System.DateTime _Date;
		
		private double _TotalAmount;
		
		private double _Fuel;
		
		private double _STax;
		
		private double _Basic;
		
		private string _Remarks;
		
		private System.Nullable<double> _PreviousDue;
		
		private System.Nullable<double> _Misc;
		
		private System.Nullable<double> _Discount;
		
		private string _SubClient;
		
		private EntitySet<InvoiceAssignment> _InvoiceAssignments;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBillIdChanging(string value);
    partial void OnBillIdChanged();
    partial void OnClientCodeChanging(string value);
    partial void OnClientCodeChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnTotalAmountChanging(double value);
    partial void OnTotalAmountChanged();
    partial void OnFuelChanging(double value);
    partial void OnFuelChanged();
    partial void OnSTaxChanging(double value);
    partial void OnSTaxChanged();
    partial void OnBasicChanging(double value);
    partial void OnBasicChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnPreviousDueChanging(System.Nullable<double> value);
    partial void OnPreviousDueChanged();
    partial void OnMiscChanging(System.Nullable<double> value);
    partial void OnMiscChanged();
    partial void OnDiscountChanging(System.Nullable<double> value);
    partial void OnDiscountChanged();
    partial void OnSubClientChanging(string value);
    partial void OnSubClientChanged();
    #endregion
		
		public Invoice()
		{
			this._InvoiceAssignments = new EntitySet<InvoiceAssignment>(new Action<InvoiceAssignment>(this.attach_InvoiceAssignments), new Action<InvoiceAssignment>(this.detach_InvoiceAssignments));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillId", DbType="VarChar(32) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string BillId
		{
			get
			{
				return this._BillId;
			}
			set
			{
				if ((this._BillId != value))
				{
					this.OnBillIdChanging(value);
					this.SendPropertyChanging();
					this._BillId = value;
					this.SendPropertyChanged("BillId");
					this.OnBillIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientCode", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string ClientCode
		{
			get
			{
				return this._ClientCode;
			}
			set
			{
				if ((this._ClientCode != value))
				{
					this.OnClientCodeChanging(value);
					this.SendPropertyChanging();
					this._ClientCode = value;
					this.SendPropertyChanged("ClientCode");
					this.OnClientCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalAmount", DbType="Float NOT NULL")]
		public double TotalAmount
		{
			get
			{
				return this._TotalAmount;
			}
			set
			{
				if ((this._TotalAmount != value))
				{
					this.OnTotalAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalAmount = value;
					this.SendPropertyChanged("TotalAmount");
					this.OnTotalAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fuel", DbType="Float NOT NULL")]
		public double Fuel
		{
			get
			{
				return this._Fuel;
			}
			set
			{
				if ((this._Fuel != value))
				{
					this.OnFuelChanging(value);
					this.SendPropertyChanging();
					this._Fuel = value;
					this.SendPropertyChanged("Fuel");
					this.OnFuelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STax", DbType="Float NOT NULL")]
		public double STax
		{
			get
			{
				return this._STax;
			}
			set
			{
				if ((this._STax != value))
				{
					this.OnSTaxChanging(value);
					this.SendPropertyChanging();
					this._STax = value;
					this.SendPropertyChanged("STax");
					this.OnSTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Basic", DbType="Float NOT NULL")]
		public double Basic
		{
			get
			{
				return this._Basic;
			}
			set
			{
				if ((this._Basic != value))
				{
					this.OnBasicChanging(value);
					this.SendPropertyChanging();
					this._Basic = value;
					this.SendPropertyChanged("Basic");
					this.OnBasicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="VarChar(50)")]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreviousDue", DbType="Float")]
		public System.Nullable<double> PreviousDue
		{
			get
			{
				return this._PreviousDue;
			}
			set
			{
				if ((this._PreviousDue != value))
				{
					this.OnPreviousDueChanging(value);
					this.SendPropertyChanging();
					this._PreviousDue = value;
					this.SendPropertyChanged("PreviousDue");
					this.OnPreviousDueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Misc", DbType="Float")]
		public System.Nullable<double> Misc
		{
			get
			{
				return this._Misc;
			}
			set
			{
				if ((this._Misc != value))
				{
					this.OnMiscChanging(value);
					this.SendPropertyChanging();
					this._Misc = value;
					this.SendPropertyChanged("Misc");
					this.OnMiscChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount", DbType="Float")]
		public System.Nullable<double> Discount
		{
			get
			{
				return this._Discount;
			}
			set
			{
				if ((this._Discount != value))
				{
					this.OnDiscountChanging(value);
					this.SendPropertyChanging();
					this._Discount = value;
					this.SendPropertyChanged("Discount");
					this.OnDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubClient", DbType="VarChar(500)")]
		public string SubClient
		{
			get
			{
				return this._SubClient;
			}
			set
			{
				if ((this._SubClient != value))
				{
					this.OnSubClientChanging(value);
					this.SendPropertyChanging();
					this._SubClient = value;
					this.SendPropertyChanged("SubClient");
					this.OnSubClientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Invoice_InvoiceAssignment", Storage="_InvoiceAssignments", ThisKey="BillId", OtherKey="BillId")]
		public EntitySet<InvoiceAssignment> InvoiceAssignments
		{
			get
			{
				return this._InvoiceAssignments;
			}
			set
			{
				this._InvoiceAssignments.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_InvoiceAssignments(InvoiceAssignment entity)
		{
			this.SendPropertyChanging();
			entity.Invoice = this;
		}
		
		private void detach_InvoiceAssignments(InvoiceAssignment entity)
		{
			this.SendPropertyChanging();
			entity.Invoice = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoiceAnalyzeResult")]
	public partial class InvoiceAnalyzeResult : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Guid _AnalyzeId;
		
		private string _SrlNo;
		
		private string _ConnNo;
		
		private System.Nullable<double> _Weight;
		
		private System.Nullable<double> _Amount;
		
		private string _Destination;
		
		private string _MisMatchDesc;
		
		private string _serviceCode;
		
		private System.Nullable<bool> _hasError;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnAnalyzeIdChanging(System.Guid value);
    partial void OnAnalyzeIdChanged();
    partial void OnSrlNoChanging(string value);
    partial void OnSrlNoChanged();
    partial void OnConnNoChanging(string value);
    partial void OnConnNoChanged();
    partial void OnWeightChanging(System.Nullable<double> value);
    partial void OnWeightChanged();
    partial void OnAmountChanging(System.Nullable<double> value);
    partial void OnAmountChanged();
    partial void OnDestinationChanging(string value);
    partial void OnDestinationChanged();
    partial void OnMisMatchDescChanging(string value);
    partial void OnMisMatchDescChanged();
    partial void OnserviceCodeChanging(string value);
    partial void OnserviceCodeChanged();
    partial void OnhasErrorChanging(System.Nullable<bool> value);
    partial void OnhasErrorChanged();
    #endregion
		
		public InvoiceAnalyzeResult()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnalyzeId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid AnalyzeId
		{
			get
			{
				return this._AnalyzeId;
			}
			set
			{
				if ((this._AnalyzeId != value))
				{
					this.OnAnalyzeIdChanging(value);
					this.SendPropertyChanging();
					this._AnalyzeId = value;
					this.SendPropertyChanged("AnalyzeId");
					this.OnAnalyzeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SrlNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SrlNo
		{
			get
			{
				return this._SrlNo;
			}
			set
			{
				if ((this._SrlNo != value))
				{
					this.OnSrlNoChanging(value);
					this.SendPropertyChanging();
					this._SrlNo = value;
					this.SendPropertyChanged("SrlNo");
					this.OnSrlNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConnNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ConnNo
		{
			get
			{
				return this._ConnNo;
			}
			set
			{
				if ((this._ConnNo != value))
				{
					this.OnConnNoChanging(value);
					this.SendPropertyChanging();
					this._ConnNo = value;
					this.SendPropertyChanged("ConnNo");
					this.OnConnNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Float")]
		public System.Nullable<double> Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Float")]
		public System.Nullable<double> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Destination", DbType="VarChar(50)")]
		public string Destination
		{
			get
			{
				return this._Destination;
			}
			set
			{
				if ((this._Destination != value))
				{
					this.OnDestinationChanging(value);
					this.SendPropertyChanging();
					this._Destination = value;
					this.SendPropertyChanged("Destination");
					this.OnDestinationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MisMatchDesc", DbType="VarChar(MAX)")]
		public string MisMatchDesc
		{
			get
			{
				return this._MisMatchDesc;
			}
			set
			{
				if ((this._MisMatchDesc != value))
				{
					this.OnMisMatchDescChanging(value);
					this.SendPropertyChanging();
					this._MisMatchDesc = value;
					this.SendPropertyChanged("MisMatchDesc");
					this.OnMisMatchDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_serviceCode", DbType="VarChar(10)")]
		public string serviceCode
		{
			get
			{
				return this._serviceCode;
			}
			set
			{
				if ((this._serviceCode != value))
				{
					this.OnserviceCodeChanging(value);
					this.SendPropertyChanging();
					this._serviceCode = value;
					this.SendPropertyChanged("serviceCode");
					this.OnserviceCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hasError", DbType="Bit")]
		public System.Nullable<bool> hasError
		{
			get
			{
				return this._hasError;
			}
			set
			{
				if ((this._hasError != value))
				{
					this.OnhasErrorChanging(value);
					this.SendPropertyChanging();
					this._hasError = value;
					this.SendPropertyChanged("hasError");
					this.OnhasErrorChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoiceAssignment")]
	public partial class InvoiceAssignment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _BillId;
		
		private System.Guid _TransactionId;
		
		private double _BilledAmount;
		
		private double _BilledWeight;
		
		private string _Destination;
		
		private string _DestinationDesc;
		
		private EntityRef<Invoice> _Invoice;
		
		private EntityRef<Transaction> _Transaction;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnBillIdChanging(string value);
    partial void OnBillIdChanged();
    partial void OnTransactionIdChanging(System.Guid value);
    partial void OnTransactionIdChanged();
    partial void OnBilledAmountChanging(double value);
    partial void OnBilledAmountChanged();
    partial void OnBilledWeightChanging(double value);
    partial void OnBilledWeightChanged();
    partial void OnDestinationChanging(string value);
    partial void OnDestinationChanged();
    partial void OnDestinationDescChanging(string value);
    partial void OnDestinationDescChanged();
    #endregion
		
		public InvoiceAssignment()
		{
			this._Invoice = default(EntityRef<Invoice>);
			this._Transaction = default(EntityRef<Transaction>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillId", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
		public string BillId
		{
			get
			{
				return this._BillId;
			}
			set
			{
				if ((this._BillId != value))
				{
					if (this._Invoice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBillIdChanging(value);
					this.SendPropertyChanging();
					this._BillId = value;
					this.SendPropertyChanged("BillId");
					this.OnBillIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid TransactionId
		{
			get
			{
				return this._TransactionId;
			}
			set
			{
				if ((this._TransactionId != value))
				{
					if (this._Transaction.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTransactionIdChanging(value);
					this.SendPropertyChanging();
					this._TransactionId = value;
					this.SendPropertyChanged("TransactionId");
					this.OnTransactionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BilledAmount", DbType="Float NOT NULL")]
		public double BilledAmount
		{
			get
			{
				return this._BilledAmount;
			}
			set
			{
				if ((this._BilledAmount != value))
				{
					this.OnBilledAmountChanging(value);
					this.SendPropertyChanging();
					this._BilledAmount = value;
					this.SendPropertyChanged("BilledAmount");
					this.OnBilledAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BilledWeight", DbType="Float NOT NULL")]
		public double BilledWeight
		{
			get
			{
				return this._BilledWeight;
			}
			set
			{
				if ((this._BilledWeight != value))
				{
					this.OnBilledWeightChanging(value);
					this.SendPropertyChanging();
					this._BilledWeight = value;
					this.SendPropertyChanged("BilledWeight");
					this.OnBilledWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Destination", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Destination
		{
			get
			{
				return this._Destination;
			}
			set
			{
				if ((this._Destination != value))
				{
					this.OnDestinationChanging(value);
					this.SendPropertyChanging();
					this._Destination = value;
					this.SendPropertyChanged("Destination");
					this.OnDestinationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DestinationDesc", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DestinationDesc
		{
			get
			{
				return this._DestinationDesc;
			}
			set
			{
				if ((this._DestinationDesc != value))
				{
					this.OnDestinationDescChanging(value);
					this.SendPropertyChanging();
					this._DestinationDesc = value;
					this.SendPropertyChanged("DestinationDesc");
					this.OnDestinationDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Invoice_InvoiceAssignment", Storage="_Invoice", ThisKey="BillId", OtherKey="BillId", IsForeignKey=true)]
		public Invoice Invoice
		{
			get
			{
				return this._Invoice.Entity;
			}
			set
			{
				Invoice previousValue = this._Invoice.Entity;
				if (((previousValue != value) 
							|| (this._Invoice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Invoice.Entity = null;
						previousValue.InvoiceAssignments.Remove(this);
					}
					this._Invoice.Entity = value;
					if ((value != null))
					{
						value.InvoiceAssignments.Add(this);
						this._BillId = value.BillId;
					}
					else
					{
						this._BillId = default(string);
					}
					this.SendPropertyChanged("Invoice");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Transaction_InvoiceAssignment", Storage="_Transaction", ThisKey="TransactionId", OtherKey="ID", IsForeignKey=true)]
		public Transaction Transaction
		{
			get
			{
				return this._Transaction.Entity;
			}
			set
			{
				Transaction previousValue = this._Transaction.Entity;
				if (((previousValue != value) 
							|| (this._Transaction.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Transaction.Entity = null;
						previousValue.InvoiceAssignments.Remove(this);
					}
					this._Transaction.Entity = value;
					if ((value != null))
					{
						value.InvoiceAssignments.Add(this);
						this._TransactionId = value.ID;
					}
					else
					{
						this._TransactionId = default(System.Guid);
					}
					this.SendPropertyChanged("Transaction");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PaymentEntry")]
	public partial class PaymentEntry : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private System.DateTime _Date;
		
		private double _RecievedAmount;
		
		private string _Type;
		
		private string _ChequeNumber;
		
		private string _ClientCode;
		
		private string _Remarks;
		
		private string _BankName;
		
		private double _DebitNote;
		
		private double _TDS;
		
		private string _InvoiceNumber;
		
		private EntityRef<Client> _Client;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnRecievedAmountChanging(double value);
    partial void OnRecievedAmountChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnChequeNumberChanging(string value);
    partial void OnChequeNumberChanged();
    partial void OnClientCodeChanging(string value);
    partial void OnClientCodeChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnBankNameChanging(string value);
    partial void OnBankNameChanged();
    partial void OnDebitNoteChanging(double value);
    partial void OnDebitNoteChanged();
    partial void OnTDSChanging(double value);
    partial void OnTDSChanged();
    partial void OnInvoiceNumberChanging(string value);
    partial void OnInvoiceNumberChanged();
    #endregion
		
		public PaymentEntry()
		{
			this._Client = default(EntityRef<Client>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecievedAmount", DbType="Float NOT NULL")]
		public double RecievedAmount
		{
			get
			{
				return this._RecievedAmount;
			}
			set
			{
				if ((this._RecievedAmount != value))
				{
					this.OnRecievedAmountChanging(value);
					this.SendPropertyChanging();
					this._RecievedAmount = value;
					this.SendPropertyChanged("RecievedAmount");
					this.OnRecievedAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChequeNumber", DbType="VarChar(50)")]
		public string ChequeNumber
		{
			get
			{
				return this._ChequeNumber;
			}
			set
			{
				if ((this._ChequeNumber != value))
				{
					this.OnChequeNumberChanging(value);
					this.SendPropertyChanging();
					this._ChequeNumber = value;
					this.SendPropertyChanged("ChequeNumber");
					this.OnChequeNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientCode", DbType="VarChar(6)")]
		public string ClientCode
		{
			get
			{
				return this._ClientCode;
			}
			set
			{
				if ((this._ClientCode != value))
				{
					if (this._Client.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClientCodeChanging(value);
					this.SendPropertyChanging();
					this._ClientCode = value;
					this.SendPropertyChanged("ClientCode");
					this.OnClientCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="VarChar(50)")]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankName", DbType="VarChar(50)")]
		public string BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					this.OnBankNameChanging(value);
					this.SendPropertyChanging();
					this._BankName = value;
					this.SendPropertyChanged("BankName");
					this.OnBankNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DebitNote", DbType="Float NOT NULL")]
		public double DebitNote
		{
			get
			{
				return this._DebitNote;
			}
			set
			{
				if ((this._DebitNote != value))
				{
					this.OnDebitNoteChanging(value);
					this.SendPropertyChanging();
					this._DebitNote = value;
					this.SendPropertyChanged("DebitNote");
					this.OnDebitNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TDS", DbType="Float NOT NULL")]
		public double TDS
		{
			get
			{
				return this._TDS;
			}
			set
			{
				if ((this._TDS != value))
				{
					this.OnTDSChanging(value);
					this.SendPropertyChanging();
					this._TDS = value;
					this.SendPropertyChanged("TDS");
					this.OnTDSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNumber", DbType="VarChar(32)")]
		public string InvoiceNumber
		{
			get
			{
				return this._InvoiceNumber;
			}
			set
			{
				if ((this._InvoiceNumber != value))
				{
					this.OnInvoiceNumberChanging(value);
					this.SendPropertyChanging();
					this._InvoiceNumber = value;
					this.SendPropertyChanged("InvoiceNumber");
					this.OnInvoiceNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_PaymentEntry", Storage="_Client", ThisKey="ClientCode", OtherKey="CLCODE", IsForeignKey=true)]
		public Client Client
		{
			get
			{
				return this._Client.Entity;
			}
			set
			{
				Client previousValue = this._Client.Entity;
				if (((previousValue != value) 
							|| (this._Client.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Client.Entity = null;
						previousValue.PaymentEntries.Remove(this);
					}
					this._Client.Entity = value;
					if ((value != null))
					{
						value.PaymentEntries.Add(this);
						this._ClientCode = value.CLCODE;
					}
					else
					{
						this._ClientCode = default(string);
					}
					this.SendPropertyChanged("Client");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Permissions")]
	public partial class Permission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Per;
		
		private EntitySet<User_permission> _User_permissions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnPerChanging(string value);
    partial void OnPerChanged();
    #endregion
		
		public Permission()
		{
			this._User_permissions = new EntitySet<User_permission>(new Action<User_permission>(this.attach_User_permissions), new Action<User_permission>(this.detach_User_permissions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Per", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Per
		{
			get
			{
				return this._Per;
			}
			set
			{
				if ((this._Per != value))
				{
					this.OnPerChanging(value);
					this.SendPropertyChanging();
					this._Per = value;
					this.SendPropertyChanged("Per");
					this.OnPerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Permission_User_permission", Storage="_User_permissions", ThisKey="id", OtherKey="per_id")]
		public EntitySet<User_permission> User_permissions
		{
			get
			{
				return this._User_permissions;
			}
			set
			{
				this._User_permissions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_User_permissions(User_permission entity)
		{
			this.SendPropertyChanging();
			entity.Permission = this;
		}
		
		private void detach_User_permissions(User_permission entity)
		{
			this.SendPropertyChanging();
			entity.Permission = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Quotation")]
	public partial class Quotation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Description;
		
		private string _CLCODE;
		
		private EntitySet<Rule> _Rules;
		
		private EntityRef<Client> _Client;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCLCODEChanging(string value);
    partial void OnCLCODEChanged();
    #endregion
		
		public Quotation()
		{
			this._Rules = new EntitySet<Rule>(new Action<Rule>(this.attach_Rules), new Action<Rule>(this.detach_Rules));
			this._Client = default(EntityRef<Client>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CLCODE", DbType="VarChar(6)")]
		public string CLCODE
		{
			get
			{
				return this._CLCODE;
			}
			set
			{
				if ((this._CLCODE != value))
				{
					if (this._Client.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCLCODEChanging(value);
					this.SendPropertyChanging();
					this._CLCODE = value;
					this.SendPropertyChanged("CLCODE");
					this.OnCLCODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Quotation_Rule", Storage="_Rules", ThisKey="Id", OtherKey="QID")]
		public EntitySet<Rule> Rules
		{
			get
			{
				return this._Rules;
			}
			set
			{
				this._Rules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_Quotation", Storage="_Client", ThisKey="CLCODE", OtherKey="CLCODE", IsForeignKey=true)]
		public Client Client
		{
			get
			{
				return this._Client.Entity;
			}
			set
			{
				Client previousValue = this._Client.Entity;
				if (((previousValue != value) 
							|| (this._Client.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Client.Entity = null;
						previousValue.Quotations.Remove(this);
					}
					this._Client.Entity = value;
					if ((value != null))
					{
						value.Quotations.Add(this);
						this._CLCODE = value.CLCODE;
					}
					else
					{
						this._CLCODE = default(string);
					}
					this.SendPropertyChanged("Client");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Rules(Rule entity)
		{
			this.SendPropertyChanging();
			entity.Quotation = this;
		}
		
		private void detach_Rules(Rule entity)
		{
			this.SendPropertyChanging();
			entity.Quotation = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Rule]")]
	public partial class Rule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _QID;
		
		private string _Remark;
		
		private int _Type;
		
		private string _Properties;
		
		private EntityRef<Quotation> _Quotation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnQIDChanging(int value);
    partial void OnQIDChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnPropertiesChanging(string value);
    partial void OnPropertiesChanged();
    #endregion
		
		public Rule()
		{
			this._Quotation = default(EntityRef<Quotation>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QID", DbType="Int NOT NULL")]
		public int QID
		{
			get
			{
				return this._QID;
			}
			set
			{
				if ((this._QID != value))
				{
					if (this._Quotation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQIDChanging(value);
					this.SendPropertyChanging();
					this._QID = value;
					this.SendPropertyChanged("QID");
					this.OnQIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="VarChar(MAX)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Properties", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Properties
		{
			get
			{
				return this._Properties;
			}
			set
			{
				if ((this._Properties != value))
				{
					this.OnPropertiesChanging(value);
					this.SendPropertyChanging();
					this._Properties = value;
					this.SendPropertyChanged("Properties");
					this.OnPropertiesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Quotation_Rule", Storage="_Quotation", ThisKey="QID", OtherKey="Id", IsForeignKey=true)]
		public Quotation Quotation
		{
			get
			{
				return this._Quotation.Entity;
			}
			set
			{
				Quotation previousValue = this._Quotation.Entity;
				if (((previousValue != value) 
							|| (this._Quotation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Quotation.Entity = null;
						previousValue.Rules.Remove(this);
					}
					this._Quotation.Entity = value;
					if ((value != null))
					{
						value.Rules.Add(this);
						this._QID = value.Id;
					}
					else
					{
						this._QID = default(int);
					}
					this.SendPropertyChanged("Quotation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RuntimeData")]
	public partial class RuntimeData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _ConsignmentNo;
		
		private double _Weight;
		
		private string _Type;
		
		private string _Destination;
		
		private string _Mode;
		
		private System.Nullable<decimal> _DestinationPin;
		
		private System.DateTime _BookingDate;
		
		private decimal _Amount;
		
		private System.Nullable<char> _DOX;
		
		private System.Nullable<double> _ServiceTax;
		
		private System.Nullable<double> _SplDisc;
		
		private string _InvoiceNo;
		
		private System.Nullable<System.DateTime> _InvoiceDate;
		
		private System.Nullable<System.Guid> _EmpId;
		
		private System.Nullable<decimal> _FrAmount;
		
		private System.Nullable<double> _FrWeight;
		
		private System.Nullable<System.Guid> _TransactionId;
		
		private string _CustCode;
		
		private string _TransMF_No;
		
		private System.Nullable<double> _BilledWeight;
		
		private int _SheetNo;
		
		private string _UserId;
		
		private string _City_Desc;
		
		private string _Service_Desc;
		
		private string _Client_Desc;
		
		private string _ConsigneeName;
		
		private string _ConsigneeAddress;
		
		private string _ConsignerName;
		
		private string _ConsignerAddress;
		
		private string _SubClient;
		
		private char _RecalculateEnabled;
		
		private System.Nullable<decimal> _Insurance;
		
		private string _DeliveryStatus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnConsignmentNoChanging(string value);
    partial void OnConsignmentNoChanged();
    partial void OnWeightChanging(double value);
    partial void OnWeightChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnDestinationChanging(string value);
    partial void OnDestinationChanged();
    partial void OnModeChanging(string value);
    partial void OnModeChanged();
    partial void OnDestinationPinChanging(System.Nullable<decimal> value);
    partial void OnDestinationPinChanged();
    partial void OnBookingDateChanging(System.DateTime value);
    partial void OnBookingDateChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnDOXChanging(System.Nullable<char> value);
    partial void OnDOXChanged();
    partial void OnServiceTaxChanging(System.Nullable<double> value);
    partial void OnServiceTaxChanged();
    partial void OnSplDiscChanging(System.Nullable<double> value);
    partial void OnSplDiscChanged();
    partial void OnInvoiceNoChanging(string value);
    partial void OnInvoiceNoChanged();
    partial void OnInvoiceDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInvoiceDateChanged();
    partial void OnEmpIdChanging(System.Nullable<System.Guid> value);
    partial void OnEmpIdChanged();
    partial void OnFrAmountChanging(System.Nullable<decimal> value);
    partial void OnFrAmountChanged();
    partial void OnFrWeightChanging(System.Nullable<double> value);
    partial void OnFrWeightChanged();
    partial void OnTransactionIdChanging(System.Nullable<System.Guid> value);
    partial void OnTransactionIdChanged();
    partial void OnCustCodeChanging(string value);
    partial void OnCustCodeChanged();
    partial void OnTransMF_NoChanging(string value);
    partial void OnTransMF_NoChanged();
    partial void OnBilledWeightChanging(System.Nullable<double> value);
    partial void OnBilledWeightChanged();
    partial void OnSheetNoChanging(int value);
    partial void OnSheetNoChanged();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    partial void OnCity_DescChanging(string value);
    partial void OnCity_DescChanged();
    partial void OnService_DescChanging(string value);
    partial void OnService_DescChanged();
    partial void OnClient_DescChanging(string value);
    partial void OnClient_DescChanged();
    partial void OnConsigneeNameChanging(string value);
    partial void OnConsigneeNameChanged();
    partial void OnConsigneeAddressChanging(string value);
    partial void OnConsigneeAddressChanged();
    partial void OnConsignerNameChanging(string value);
    partial void OnConsignerNameChanged();
    partial void OnConsignerAddressChanging(string value);
    partial void OnConsignerAddressChanged();
    partial void OnSubClientChanging(string value);
    partial void OnSubClientChanged();
    partial void OnRecalculateEnabledChanging(char value);
    partial void OnRecalculateEnabledChanged();
    partial void OnInsuranceChanging(System.Nullable<decimal> value);
    partial void OnInsuranceChanged();
    partial void OnDeliveryStatusChanging(string value);
    partial void OnDeliveryStatusChanged();
    #endregion
		
		public RuntimeData()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsignmentNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ConsignmentNo
		{
			get
			{
				return this._ConsignmentNo;
			}
			set
			{
				if ((this._ConsignmentNo != value))
				{
					this.OnConsignmentNoChanging(value);
					this.SendPropertyChanging();
					this._ConsignmentNo = value;
					this.SendPropertyChanged("ConsignmentNo");
					this.OnConsignmentNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Float NOT NULL")]
		public double Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NChar(25)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Destination", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Destination
		{
			get
			{
				return this._Destination;
			}
			set
			{
				if ((this._Destination != value))
				{
					this.OnDestinationChanging(value);
					this.SendPropertyChanging();
					this._Destination = value;
					this.SendPropertyChanged("Destination");
					this.OnDestinationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mode", DbType="NChar(25)")]
		public string Mode
		{
			get
			{
				return this._Mode;
			}
			set
			{
				if ((this._Mode != value))
				{
					this.OnModeChanging(value);
					this.SendPropertyChanging();
					this._Mode = value;
					this.SendPropertyChanged("Mode");
					this.OnModeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DestinationPin", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> DestinationPin
		{
			get
			{
				return this._DestinationPin;
			}
			set
			{
				if ((this._DestinationPin != value))
				{
					this.OnDestinationPinChanging(value);
					this.SendPropertyChanging();
					this._DestinationPin = value;
					this.SendPropertyChanged("DestinationPin");
					this.OnDestinationPinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookingDate", DbType="Date NOT NULL")]
		public System.DateTime BookingDate
		{
			get
			{
				return this._BookingDate;
			}
			set
			{
				if ((this._BookingDate != value))
				{
					this.OnBookingDateChanging(value);
					this.SendPropertyChanging();
					this._BookingDate = value;
					this.SendPropertyChanged("BookingDate");
					this.OnBookingDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,2) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOX", DbType="Char(1)")]
		public System.Nullable<char> DOX
		{
			get
			{
				return this._DOX;
			}
			set
			{
				if ((this._DOX != value))
				{
					this.OnDOXChanging(value);
					this.SendPropertyChanging();
					this._DOX = value;
					this.SendPropertyChanged("DOX");
					this.OnDOXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceTax", DbType="Float")]
		public System.Nullable<double> ServiceTax
		{
			get
			{
				return this._ServiceTax;
			}
			set
			{
				if ((this._ServiceTax != value))
				{
					this.OnServiceTaxChanging(value);
					this.SendPropertyChanging();
					this._ServiceTax = value;
					this.SendPropertyChanged("ServiceTax");
					this.OnServiceTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SplDisc", DbType="Float")]
		public System.Nullable<double> SplDisc
		{
			get
			{
				return this._SplDisc;
			}
			set
			{
				if ((this._SplDisc != value))
				{
					this.OnSplDiscChanging(value);
					this.SendPropertyChanging();
					this._SplDisc = value;
					this.SendPropertyChanged("SplDisc");
					this.OnSplDiscChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNo", DbType="VarChar(50)")]
		public string InvoiceNo
		{
			get
			{
				return this._InvoiceNo;
			}
			set
			{
				if ((this._InvoiceNo != value))
				{
					this.OnInvoiceNoChanging(value);
					this.SendPropertyChanging();
					this._InvoiceNo = value;
					this.SendPropertyChanged("InvoiceNo");
					this.OnInvoiceNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceDate", DbType="Date")]
		public System.Nullable<System.DateTime> InvoiceDate
		{
			get
			{
				return this._InvoiceDate;
			}
			set
			{
				if ((this._InvoiceDate != value))
				{
					this.OnInvoiceDateChanging(value);
					this.SendPropertyChanging();
					this._InvoiceDate = value;
					this.SendPropertyChanged("InvoiceDate");
					this.OnInvoiceDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> EmpId
		{
			get
			{
				return this._EmpId;
			}
			set
			{
				if ((this._EmpId != value))
				{
					this.OnEmpIdChanging(value);
					this.SendPropertyChanging();
					this._EmpId = value;
					this.SendPropertyChanged("EmpId");
					this.OnEmpIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FrAmount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> FrAmount
		{
			get
			{
				return this._FrAmount;
			}
			set
			{
				if ((this._FrAmount != value))
				{
					this.OnFrAmountChanging(value);
					this.SendPropertyChanging();
					this._FrAmount = value;
					this.SendPropertyChanged("FrAmount");
					this.OnFrAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FrWeight", DbType="Float")]
		public System.Nullable<double> FrWeight
		{
			get
			{
				return this._FrWeight;
			}
			set
			{
				if ((this._FrWeight != value))
				{
					this.OnFrWeightChanging(value);
					this.SendPropertyChanging();
					this._FrWeight = value;
					this.SendPropertyChanged("FrWeight");
					this.OnFrWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> TransactionId
		{
			get
			{
				return this._TransactionId;
			}
			set
			{
				if ((this._TransactionId != value))
				{
					this.OnTransactionIdChanging(value);
					this.SendPropertyChanging();
					this._TransactionId = value;
					this.SendPropertyChanged("TransactionId");
					this.OnTransactionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustCode", DbType="VarChar(10)")]
		public string CustCode
		{
			get
			{
				return this._CustCode;
			}
			set
			{
				if ((this._CustCode != value))
				{
					this.OnCustCodeChanging(value);
					this.SendPropertyChanging();
					this._CustCode = value;
					this.SendPropertyChanged("CustCode");
					this.OnCustCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransMF_No", DbType="VarChar(50)")]
		public string TransMF_No
		{
			get
			{
				return this._TransMF_No;
			}
			set
			{
				if ((this._TransMF_No != value))
				{
					this.OnTransMF_NoChanging(value);
					this.SendPropertyChanging();
					this._TransMF_No = value;
					this.SendPropertyChanged("TransMF_No");
					this.OnTransMF_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BilledWeight", DbType="Float")]
		public System.Nullable<double> BilledWeight
		{
			get
			{
				return this._BilledWeight;
			}
			set
			{
				if ((this._BilledWeight != value))
				{
					this.OnBilledWeightChanging(value);
					this.SendPropertyChanging();
					this._BilledWeight = value;
					this.SendPropertyChanged("BilledWeight");
					this.OnBilledWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SheetNo", DbType="Int NOT NULL")]
		public int SheetNo
		{
			get
			{
				return this._SheetNo;
			}
			set
			{
				if ((this._SheetNo != value))
				{
					this.OnSheetNoChanging(value);
					this.SendPropertyChanging();
					this._SheetNo = value;
					this.SendPropertyChanged("SheetNo");
					this.OnSheetNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City_Desc", DbType="VarChar(50)")]
		public string City_Desc
		{
			get
			{
				return this._City_Desc;
			}
			set
			{
				if ((this._City_Desc != value))
				{
					this.OnCity_DescChanging(value);
					this.SendPropertyChanging();
					this._City_Desc = value;
					this.SendPropertyChanged("City_Desc");
					this.OnCity_DescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Service_Desc", DbType="VarChar(50)")]
		public string Service_Desc
		{
			get
			{
				return this._Service_Desc;
			}
			set
			{
				if ((this._Service_Desc != value))
				{
					this.OnService_DescChanging(value);
					this.SendPropertyChanging();
					this._Service_Desc = value;
					this.SendPropertyChanged("Service_Desc");
					this.OnService_DescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Client_Desc", DbType="VarChar(400)")]
		public string Client_Desc
		{
			get
			{
				return this._Client_Desc;
			}
			set
			{
				if ((this._Client_Desc != value))
				{
					this.OnClient_DescChanging(value);
					this.SendPropertyChanging();
					this._Client_Desc = value;
					this.SendPropertyChanged("Client_Desc");
					this.OnClient_DescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsigneeName", DbType="VarChar(100)")]
		public string ConsigneeName
		{
			get
			{
				return this._ConsigneeName;
			}
			set
			{
				if ((this._ConsigneeName != value))
				{
					this.OnConsigneeNameChanging(value);
					this.SendPropertyChanging();
					this._ConsigneeName = value;
					this.SendPropertyChanged("ConsigneeName");
					this.OnConsigneeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsigneeAddress", DbType="VarChar(500)")]
		public string ConsigneeAddress
		{
			get
			{
				return this._ConsigneeAddress;
			}
			set
			{
				if ((this._ConsigneeAddress != value))
				{
					this.OnConsigneeAddressChanging(value);
					this.SendPropertyChanging();
					this._ConsigneeAddress = value;
					this.SendPropertyChanged("ConsigneeAddress");
					this.OnConsigneeAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsignerName", DbType="VarChar(100)")]
		public string ConsignerName
		{
			get
			{
				return this._ConsignerName;
			}
			set
			{
				if ((this._ConsignerName != value))
				{
					this.OnConsignerNameChanging(value);
					this.SendPropertyChanging();
					this._ConsignerName = value;
					this.SendPropertyChanged("ConsignerName");
					this.OnConsignerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsignerAddress", DbType="VarChar(500)")]
		public string ConsignerAddress
		{
			get
			{
				return this._ConsignerAddress;
			}
			set
			{
				if ((this._ConsignerAddress != value))
				{
					this.OnConsignerAddressChanging(value);
					this.SendPropertyChanging();
					this._ConsignerAddress = value;
					this.SendPropertyChanged("ConsignerAddress");
					this.OnConsignerAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubClient", DbType="VarChar(500)")]
		public string SubClient
		{
			get
			{
				return this._SubClient;
			}
			set
			{
				if ((this._SubClient != value))
				{
					this.OnSubClientChanging(value);
					this.SendPropertyChanging();
					this._SubClient = value;
					this.SendPropertyChanged("SubClient");
					this.OnSubClientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecalculateEnabled", DbType="Char(1) NOT NULL")]
		public char RecalculateEnabled
		{
			get
			{
				return this._RecalculateEnabled;
			}
			set
			{
				if ((this._RecalculateEnabled != value))
				{
					this.OnRecalculateEnabledChanging(value);
					this.SendPropertyChanging();
					this._RecalculateEnabled = value;
					this.SendPropertyChanged("RecalculateEnabled");
					this.OnRecalculateEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Insurance", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Insurance
		{
			get
			{
				return this._Insurance;
			}
			set
			{
				if ((this._Insurance != value))
				{
					this.OnInsuranceChanging(value);
					this.SendPropertyChanging();
					this._Insurance = value;
					this.SendPropertyChanged("Insurance");
					this.OnInsuranceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryStatus", DbType="VarChar(500)")]
		public string DeliveryStatus
		{
			get
			{
				return this._DeliveryStatus;
			}
			set
			{
				if ((this._DeliveryStatus != value))
				{
					this.OnDeliveryStatusChanging(value);
					this.SendPropertyChanging();
					this._DeliveryStatus = value;
					this.SendPropertyChanged("DeliveryStatus");
					this.OnDeliveryStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Service")]
	public partial class Service : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SER_CODE;
		
		private string _SER_DESC;
		
		private string _SER_TYPE_STATUS;
		
		private System.Nullable<System.DateTime> _MOD_DATE;
		
		private System.Nullable<double> _MOD_TIME;
		
		private string _NODEID;
		
		private string _USERID;
		
		private string _TRANS_STATUS;
		
		private System.Nullable<double> _SER_DIV;
		
		private string _MODE_TYPE;
		
		private string _SER_BILLING;
		
		private System.Nullable<double> _PRODUCT_ID;
		
		private string _SER_HIERARCHY_ID;
		
		private EntitySet<ServiceGroupAssignment> _ServiceGroupAssignments;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSER_CODEChanging(string value);
    partial void OnSER_CODEChanged();
    partial void OnSER_DESCChanging(string value);
    partial void OnSER_DESCChanged();
    partial void OnSER_TYPE_STATUSChanging(string value);
    partial void OnSER_TYPE_STATUSChanged();
    partial void OnMOD_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnMOD_DATEChanged();
    partial void OnMOD_TIMEChanging(System.Nullable<double> value);
    partial void OnMOD_TIMEChanged();
    partial void OnNODEIDChanging(string value);
    partial void OnNODEIDChanged();
    partial void OnUSERIDChanging(string value);
    partial void OnUSERIDChanged();
    partial void OnTRANS_STATUSChanging(string value);
    partial void OnTRANS_STATUSChanged();
    partial void OnSER_DIVChanging(System.Nullable<double> value);
    partial void OnSER_DIVChanged();
    partial void OnMODE_TYPEChanging(string value);
    partial void OnMODE_TYPEChanged();
    partial void OnSER_BILLINGChanging(string value);
    partial void OnSER_BILLINGChanged();
    partial void OnPRODUCT_IDChanging(System.Nullable<double> value);
    partial void OnPRODUCT_IDChanged();
    partial void OnSER_HIERARCHY_IDChanging(string value);
    partial void OnSER_HIERARCHY_IDChanged();
    #endregion
		
		public Service()
		{
			this._ServiceGroupAssignments = new EntitySet<ServiceGroupAssignment>(new Action<ServiceGroupAssignment>(this.attach_ServiceGroupAssignments), new Action<ServiceGroupAssignment>(this.detach_ServiceGroupAssignments));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SER_CODE", DbType="NVarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SER_CODE
		{
			get
			{
				return this._SER_CODE;
			}
			set
			{
				if ((this._SER_CODE != value))
				{
					this.OnSER_CODEChanging(value);
					this.SendPropertyChanging();
					this._SER_CODE = value;
					this.SendPropertyChanged("SER_CODE");
					this.OnSER_CODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SER_DESC", DbType="NVarChar(255)")]
		public string SER_DESC
		{
			get
			{
				return this._SER_DESC;
			}
			set
			{
				if ((this._SER_DESC != value))
				{
					this.OnSER_DESCChanging(value);
					this.SendPropertyChanging();
					this._SER_DESC = value;
					this.SendPropertyChanged("SER_DESC");
					this.OnSER_DESCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SER_TYPE_STATUS", DbType="NVarChar(255)")]
		public string SER_TYPE_STATUS
		{
			get
			{
				return this._SER_TYPE_STATUS;
			}
			set
			{
				if ((this._SER_TYPE_STATUS != value))
				{
					this.OnSER_TYPE_STATUSChanging(value);
					this.SendPropertyChanging();
					this._SER_TYPE_STATUS = value;
					this.SendPropertyChanged("SER_TYPE_STATUS");
					this.OnSER_TYPE_STATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MOD_DATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> MOD_DATE
		{
			get
			{
				return this._MOD_DATE;
			}
			set
			{
				if ((this._MOD_DATE != value))
				{
					this.OnMOD_DATEChanging(value);
					this.SendPropertyChanging();
					this._MOD_DATE = value;
					this.SendPropertyChanged("MOD_DATE");
					this.OnMOD_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MOD_TIME", DbType="Float")]
		public System.Nullable<double> MOD_TIME
		{
			get
			{
				return this._MOD_TIME;
			}
			set
			{
				if ((this._MOD_TIME != value))
				{
					this.OnMOD_TIMEChanging(value);
					this.SendPropertyChanging();
					this._MOD_TIME = value;
					this.SendPropertyChanged("MOD_TIME");
					this.OnMOD_TIMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NODEID", DbType="NVarChar(255)")]
		public string NODEID
		{
			get
			{
				return this._NODEID;
			}
			set
			{
				if ((this._NODEID != value))
				{
					this.OnNODEIDChanging(value);
					this.SendPropertyChanging();
					this._NODEID = value;
					this.SendPropertyChanged("NODEID");
					this.OnNODEIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USERID", DbType="NVarChar(255)")]
		public string USERID
		{
			get
			{
				return this._USERID;
			}
			set
			{
				if ((this._USERID != value))
				{
					this.OnUSERIDChanging(value);
					this.SendPropertyChanging();
					this._USERID = value;
					this.SendPropertyChanged("USERID");
					this.OnUSERIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRANS_STATUS", DbType="NVarChar(255)")]
		public string TRANS_STATUS
		{
			get
			{
				return this._TRANS_STATUS;
			}
			set
			{
				if ((this._TRANS_STATUS != value))
				{
					this.OnTRANS_STATUSChanging(value);
					this.SendPropertyChanging();
					this._TRANS_STATUS = value;
					this.SendPropertyChanged("TRANS_STATUS");
					this.OnTRANS_STATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SER_DIV", DbType="Float")]
		public System.Nullable<double> SER_DIV
		{
			get
			{
				return this._SER_DIV;
			}
			set
			{
				if ((this._SER_DIV != value))
				{
					this.OnSER_DIVChanging(value);
					this.SendPropertyChanging();
					this._SER_DIV = value;
					this.SendPropertyChanged("SER_DIV");
					this.OnSER_DIVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MODE_TYPE", DbType="NVarChar(255)")]
		public string MODE_TYPE
		{
			get
			{
				return this._MODE_TYPE;
			}
			set
			{
				if ((this._MODE_TYPE != value))
				{
					this.OnMODE_TYPEChanging(value);
					this.SendPropertyChanging();
					this._MODE_TYPE = value;
					this.SendPropertyChanged("MODE_TYPE");
					this.OnMODE_TYPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SER_BILLING", DbType="NVarChar(255)")]
		public string SER_BILLING
		{
			get
			{
				return this._SER_BILLING;
			}
			set
			{
				if ((this._SER_BILLING != value))
				{
					this.OnSER_BILLINGChanging(value);
					this.SendPropertyChanging();
					this._SER_BILLING = value;
					this.SendPropertyChanged("SER_BILLING");
					this.OnSER_BILLINGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRODUCT_ID", DbType="Float")]
		public System.Nullable<double> PRODUCT_ID
		{
			get
			{
				return this._PRODUCT_ID;
			}
			set
			{
				if ((this._PRODUCT_ID != value))
				{
					this.OnPRODUCT_IDChanging(value);
					this.SendPropertyChanging();
					this._PRODUCT_ID = value;
					this.SendPropertyChanged("PRODUCT_ID");
					this.OnPRODUCT_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SER_HIERARCHY_ID", DbType="NVarChar(255)")]
		public string SER_HIERARCHY_ID
		{
			get
			{
				return this._SER_HIERARCHY_ID;
			}
			set
			{
				if ((this._SER_HIERARCHY_ID != value))
				{
					this.OnSER_HIERARCHY_IDChanging(value);
					this.SendPropertyChanging();
					this._SER_HIERARCHY_ID = value;
					this.SendPropertyChanged("SER_HIERARCHY_ID");
					this.OnSER_HIERARCHY_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_ServiceGroupAssignment", Storage="_ServiceGroupAssignments", ThisKey="SER_CODE", OtherKey="ServiceName")]
		public EntitySet<ServiceGroupAssignment> ServiceGroupAssignments
		{
			get
			{
				return this._ServiceGroupAssignments;
			}
			set
			{
				this._ServiceGroupAssignments.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ServiceGroupAssignments(ServiceGroupAssignment entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_ServiceGroupAssignments(ServiceGroupAssignment entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ServiceGroup")]
	public partial class ServiceGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _GroupName;
		
		private EntitySet<ServiceGroupAssignment> _ServiceGroupAssignments;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGroupNameChanging(string value);
    partial void OnGroupNameChanged();
    #endregion
		
		public ServiceGroup()
		{
			this._ServiceGroupAssignments = new EntitySet<ServiceGroupAssignment>(new Action<ServiceGroupAssignment>(this.attach_ServiceGroupAssignments), new Action<ServiceGroupAssignment>(this.detach_ServiceGroupAssignments));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupName", DbType="VarChar(200) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string GroupName
		{
			get
			{
				return this._GroupName;
			}
			set
			{
				if ((this._GroupName != value))
				{
					this.OnGroupNameChanging(value);
					this.SendPropertyChanging();
					this._GroupName = value;
					this.SendPropertyChanged("GroupName");
					this.OnGroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceGroup_ServiceGroupAssignment", Storage="_ServiceGroupAssignments", ThisKey="GroupName", OtherKey="GroupName")]
		public EntitySet<ServiceGroupAssignment> ServiceGroupAssignments
		{
			get
			{
				return this._ServiceGroupAssignments;
			}
			set
			{
				this._ServiceGroupAssignments.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ServiceGroupAssignments(ServiceGroupAssignment entity)
		{
			this.SendPropertyChanging();
			entity.ServiceGroup = this;
		}
		
		private void detach_ServiceGroupAssignments(ServiceGroupAssignment entity)
		{
			this.SendPropertyChanging();
			entity.ServiceGroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ServiceGroupAssignments")]
	public partial class ServiceGroupAssignment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _GroupName;
		
		private string _ServiceName;
		
		private System.Guid _AssignId;
		
		private EntityRef<Service> _Service;
		
		private EntityRef<ServiceGroup> _ServiceGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGroupNameChanging(string value);
    partial void OnGroupNameChanged();
    partial void OnServiceNameChanging(string value);
    partial void OnServiceNameChanged();
    partial void OnAssignIdChanging(System.Guid value);
    partial void OnAssignIdChanged();
    #endregion
		
		public ServiceGroupAssignment()
		{
			this._Service = default(EntityRef<Service>);
			this._ServiceGroup = default(EntityRef<ServiceGroup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupName", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string GroupName
		{
			get
			{
				return this._GroupName;
			}
			set
			{
				if ((this._GroupName != value))
				{
					if (this._ServiceGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGroupNameChanging(value);
					this.SendPropertyChanging();
					this._GroupName = value;
					this.SendPropertyChanged("GroupName");
					this.OnGroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ServiceName
		{
			get
			{
				return this._ServiceName;
			}
			set
			{
				if ((this._ServiceName != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceNameChanging(value);
					this.SendPropertyChanging();
					this._ServiceName = value;
					this.SendPropertyChanged("ServiceName");
					this.OnServiceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid AssignId
		{
			get
			{
				return this._AssignId;
			}
			set
			{
				if ((this._AssignId != value))
				{
					this.OnAssignIdChanging(value);
					this.SendPropertyChanging();
					this._AssignId = value;
					this.SendPropertyChanged("AssignId");
					this.OnAssignIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_ServiceGroupAssignment", Storage="_Service", ThisKey="ServiceName", OtherKey="SER_CODE", IsForeignKey=true)]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.ServiceGroupAssignments.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.ServiceGroupAssignments.Add(this);
						this._ServiceName = value.SER_CODE;
					}
					else
					{
						this._ServiceName = default(string);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceGroup_ServiceGroupAssignment", Storage="_ServiceGroup", ThisKey="GroupName", OtherKey="GroupName", IsForeignKey=true)]
		public ServiceGroup ServiceGroup
		{
			get
			{
				return this._ServiceGroup.Entity;
			}
			set
			{
				ServiceGroup previousValue = this._ServiceGroup.Entity;
				if (((previousValue != value) 
							|| (this._ServiceGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ServiceGroup.Entity = null;
						previousValue.ServiceGroupAssignments.Remove(this);
					}
					this._ServiceGroup.Entity = value;
					if ((value != null))
					{
						value.ServiceGroupAssignments.Add(this);
						this._GroupName = value.GroupName;
					}
					else
					{
						this._GroupName = default(string);
					}
					this.SendPropertyChanged("ServiceGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.State")]
	public partial class State : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _STATE_CODE;
		
		private string _STATE_DESC;
		
		private string _STATE_COUNTRY;
		
		private string _STATE_CAPITAL;
		
		private string _STATE_MAP;
		
		private System.Nullable<double> _STATE_POPULATION;
		
		private string _STATE_IMP_AREA;
		
		private string _STATE_INDUSTRIES;
		
		private string _STATE_ZO;
		
		private string _STATE_STATUS;
		
		private System.Nullable<System.DateTime> _MOD_DATE;
		
		private System.Nullable<double> _MOD_TIME;
		
		private string _NODEID;
		
		private string _USERID;
		
		private string _TRANS_STATUS;
		
		private string _STATE_RO;
		
		private string _STATE_ZONE;
		
		private EntitySet<City> _Cities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSTATE_CODEChanging(string value);
    partial void OnSTATE_CODEChanged();
    partial void OnSTATE_DESCChanging(string value);
    partial void OnSTATE_DESCChanged();
    partial void OnSTATE_COUNTRYChanging(string value);
    partial void OnSTATE_COUNTRYChanged();
    partial void OnSTATE_CAPITALChanging(string value);
    partial void OnSTATE_CAPITALChanged();
    partial void OnSTATE_MAPChanging(string value);
    partial void OnSTATE_MAPChanged();
    partial void OnSTATE_POPULATIONChanging(System.Nullable<double> value);
    partial void OnSTATE_POPULATIONChanged();
    partial void OnSTATE_IMP_AREAChanging(string value);
    partial void OnSTATE_IMP_AREAChanged();
    partial void OnSTATE_INDUSTRIESChanging(string value);
    partial void OnSTATE_INDUSTRIESChanged();
    partial void OnSTATE_ZOChanging(string value);
    partial void OnSTATE_ZOChanged();
    partial void OnSTATE_STATUSChanging(string value);
    partial void OnSTATE_STATUSChanged();
    partial void OnMOD_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnMOD_DATEChanged();
    partial void OnMOD_TIMEChanging(System.Nullable<double> value);
    partial void OnMOD_TIMEChanged();
    partial void OnNODEIDChanging(string value);
    partial void OnNODEIDChanged();
    partial void OnUSERIDChanging(string value);
    partial void OnUSERIDChanged();
    partial void OnTRANS_STATUSChanging(string value);
    partial void OnTRANS_STATUSChanged();
    partial void OnSTATE_ROChanging(string value);
    partial void OnSTATE_ROChanged();
    partial void OnSTATE_ZONEChanging(string value);
    partial void OnSTATE_ZONEChanged();
    #endregion
		
		public State()
		{
			this._Cities = new EntitySet<City>(new Action<City>(this.attach_Cities), new Action<City>(this.detach_Cities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATE_CODE", DbType="NVarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string STATE_CODE
		{
			get
			{
				return this._STATE_CODE;
			}
			set
			{
				if ((this._STATE_CODE != value))
				{
					this.OnSTATE_CODEChanging(value);
					this.SendPropertyChanging();
					this._STATE_CODE = value;
					this.SendPropertyChanged("STATE_CODE");
					this.OnSTATE_CODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATE_DESC", DbType="NVarChar(255)")]
		public string STATE_DESC
		{
			get
			{
				return this._STATE_DESC;
			}
			set
			{
				if ((this._STATE_DESC != value))
				{
					this.OnSTATE_DESCChanging(value);
					this.SendPropertyChanging();
					this._STATE_DESC = value;
					this.SendPropertyChanged("STATE_DESC");
					this.OnSTATE_DESCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATE_COUNTRY", DbType="NVarChar(255)")]
		public string STATE_COUNTRY
		{
			get
			{
				return this._STATE_COUNTRY;
			}
			set
			{
				if ((this._STATE_COUNTRY != value))
				{
					this.OnSTATE_COUNTRYChanging(value);
					this.SendPropertyChanging();
					this._STATE_COUNTRY = value;
					this.SendPropertyChanged("STATE_COUNTRY");
					this.OnSTATE_COUNTRYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATE_CAPITAL", DbType="NVarChar(255)")]
		public string STATE_CAPITAL
		{
			get
			{
				return this._STATE_CAPITAL;
			}
			set
			{
				if ((this._STATE_CAPITAL != value))
				{
					this.OnSTATE_CAPITALChanging(value);
					this.SendPropertyChanging();
					this._STATE_CAPITAL = value;
					this.SendPropertyChanged("STATE_CAPITAL");
					this.OnSTATE_CAPITALChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATE_MAP", DbType="NVarChar(255)")]
		public string STATE_MAP
		{
			get
			{
				return this._STATE_MAP;
			}
			set
			{
				if ((this._STATE_MAP != value))
				{
					this.OnSTATE_MAPChanging(value);
					this.SendPropertyChanging();
					this._STATE_MAP = value;
					this.SendPropertyChanged("STATE_MAP");
					this.OnSTATE_MAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATE_POPULATION", DbType="Float")]
		public System.Nullable<double> STATE_POPULATION
		{
			get
			{
				return this._STATE_POPULATION;
			}
			set
			{
				if ((this._STATE_POPULATION != value))
				{
					this.OnSTATE_POPULATIONChanging(value);
					this.SendPropertyChanging();
					this._STATE_POPULATION = value;
					this.SendPropertyChanged("STATE_POPULATION");
					this.OnSTATE_POPULATIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATE_IMP_AREA", DbType="NVarChar(255)")]
		public string STATE_IMP_AREA
		{
			get
			{
				return this._STATE_IMP_AREA;
			}
			set
			{
				if ((this._STATE_IMP_AREA != value))
				{
					this.OnSTATE_IMP_AREAChanging(value);
					this.SendPropertyChanging();
					this._STATE_IMP_AREA = value;
					this.SendPropertyChanged("STATE_IMP_AREA");
					this.OnSTATE_IMP_AREAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATE_INDUSTRIES", DbType="NVarChar(255)")]
		public string STATE_INDUSTRIES
		{
			get
			{
				return this._STATE_INDUSTRIES;
			}
			set
			{
				if ((this._STATE_INDUSTRIES != value))
				{
					this.OnSTATE_INDUSTRIESChanging(value);
					this.SendPropertyChanging();
					this._STATE_INDUSTRIES = value;
					this.SendPropertyChanged("STATE_INDUSTRIES");
					this.OnSTATE_INDUSTRIESChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATE_ZO", DbType="NVarChar(255)")]
		public string STATE_ZO
		{
			get
			{
				return this._STATE_ZO;
			}
			set
			{
				if ((this._STATE_ZO != value))
				{
					this.OnSTATE_ZOChanging(value);
					this.SendPropertyChanging();
					this._STATE_ZO = value;
					this.SendPropertyChanged("STATE_ZO");
					this.OnSTATE_ZOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATE_STATUS", DbType="NVarChar(255)")]
		public string STATE_STATUS
		{
			get
			{
				return this._STATE_STATUS;
			}
			set
			{
				if ((this._STATE_STATUS != value))
				{
					this.OnSTATE_STATUSChanging(value);
					this.SendPropertyChanging();
					this._STATE_STATUS = value;
					this.SendPropertyChanged("STATE_STATUS");
					this.OnSTATE_STATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MOD_DATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> MOD_DATE
		{
			get
			{
				return this._MOD_DATE;
			}
			set
			{
				if ((this._MOD_DATE != value))
				{
					this.OnMOD_DATEChanging(value);
					this.SendPropertyChanging();
					this._MOD_DATE = value;
					this.SendPropertyChanged("MOD_DATE");
					this.OnMOD_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MOD_TIME", DbType="Float")]
		public System.Nullable<double> MOD_TIME
		{
			get
			{
				return this._MOD_TIME;
			}
			set
			{
				if ((this._MOD_TIME != value))
				{
					this.OnMOD_TIMEChanging(value);
					this.SendPropertyChanging();
					this._MOD_TIME = value;
					this.SendPropertyChanged("MOD_TIME");
					this.OnMOD_TIMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NODEID", DbType="NVarChar(255)")]
		public string NODEID
		{
			get
			{
				return this._NODEID;
			}
			set
			{
				if ((this._NODEID != value))
				{
					this.OnNODEIDChanging(value);
					this.SendPropertyChanging();
					this._NODEID = value;
					this.SendPropertyChanged("NODEID");
					this.OnNODEIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USERID", DbType="NVarChar(255)")]
		public string USERID
		{
			get
			{
				return this._USERID;
			}
			set
			{
				if ((this._USERID != value))
				{
					this.OnUSERIDChanging(value);
					this.SendPropertyChanging();
					this._USERID = value;
					this.SendPropertyChanged("USERID");
					this.OnUSERIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRANS_STATUS", DbType="NVarChar(255)")]
		public string TRANS_STATUS
		{
			get
			{
				return this._TRANS_STATUS;
			}
			set
			{
				if ((this._TRANS_STATUS != value))
				{
					this.OnTRANS_STATUSChanging(value);
					this.SendPropertyChanging();
					this._TRANS_STATUS = value;
					this.SendPropertyChanged("TRANS_STATUS");
					this.OnTRANS_STATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATE_RO", DbType="NVarChar(255)")]
		public string STATE_RO
		{
			get
			{
				return this._STATE_RO;
			}
			set
			{
				if ((this._STATE_RO != value))
				{
					this.OnSTATE_ROChanging(value);
					this.SendPropertyChanging();
					this._STATE_RO = value;
					this.SendPropertyChanged("STATE_RO");
					this.OnSTATE_ROChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATE_ZONE", DbType="VarChar(50)")]
		public string STATE_ZONE
		{
			get
			{
				return this._STATE_ZONE;
			}
			set
			{
				if ((this._STATE_ZONE != value))
				{
					this.OnSTATE_ZONEChanging(value);
					this.SendPropertyChanging();
					this._STATE_ZONE = value;
					this.SendPropertyChanged("STATE_ZONE");
					this.OnSTATE_ZONEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="State_City", Storage="_Cities", ThisKey="STATE_CODE", OtherKey="CITY_STATE")]
		public EntitySet<City> Cities
		{
			get
			{
				return this._Cities;
			}
			set
			{
				this._Cities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Cities(City entity)
		{
			this.SendPropertyChanging();
			entity.State = this;
		}
		
		private void detach_Cities(City entity)
		{
			this.SendPropertyChanging();
			entity.State = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Stock")]
	public partial class Stock : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Guid _UserId;
		
		private string _StockStart;
		
		private string _StockEnd;
		
		private string _BookNo;
		
		private string _desc;
		
		private System.Nullable<double> _cost;
		
		private System.Nullable<System.DateTime> _Date;
		
		private System.Nullable<int> _DeliveryTime;
		
		private EntityRef<Employee> _Employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnStockStartChanging(string value);
    partial void OnStockStartChanged();
    partial void OnStockEndChanging(string value);
    partial void OnStockEndChanged();
    partial void OnBookNoChanging(string value);
    partial void OnBookNoChanged();
    partial void OndescChanging(string value);
    partial void OndescChanged();
    partial void OncostChanging(System.Nullable<double> value);
    partial void OncostChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnDeliveryTimeChanging(System.Nullable<int> value);
    partial void OnDeliveryTimeChanged();
    #endregion
		
		public Stock()
		{
			this._Employee = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockStart", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string StockStart
		{
			get
			{
				return this._StockStart;
			}
			set
			{
				if ((this._StockStart != value))
				{
					this.OnStockStartChanging(value);
					this.SendPropertyChanging();
					this._StockStart = value;
					this.SendPropertyChanged("StockStart");
					this.OnStockStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockEnd", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string StockEnd
		{
			get
			{
				return this._StockEnd;
			}
			set
			{
				if ((this._StockEnd != value))
				{
					this.OnStockEndChanging(value);
					this.SendPropertyChanging();
					this._StockEnd = value;
					this.SendPropertyChanged("StockEnd");
					this.OnStockEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookNo", DbType="VarChar(20)")]
		public string BookNo
		{
			get
			{
				return this._BookNo;
			}
			set
			{
				if ((this._BookNo != value))
				{
					this.OnBookNoChanging(value);
					this.SendPropertyChanging();
					this._BookNo = value;
					this.SendPropertyChanged("BookNo");
					this.OnBookNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[desc]", Storage="_desc", DbType="VarChar(250)")]
		public string desc
		{
			get
			{
				return this._desc;
			}
			set
			{
				if ((this._desc != value))
				{
					this.OndescChanging(value);
					this.SendPropertyChanging();
					this._desc = value;
					this.SendPropertyChanged("desc");
					this.OndescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cost", DbType="Float")]
		public System.Nullable<double> cost
		{
			get
			{
				return this._cost;
			}
			set
			{
				if ((this._cost != value))
				{
					this.OncostChanging(value);
					this.SendPropertyChanging();
					this._cost = value;
					this.SendPropertyChanged("cost");
					this.OncostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryTime", DbType="Int")]
		public System.Nullable<int> DeliveryTime
		{
			get
			{
				return this._DeliveryTime;
			}
			set
			{
				if ((this._DeliveryTime != value))
				{
					this.OnDeliveryTimeChanging(value);
					this.SendPropertyChanging();
					this._DeliveryTime = value;
					this.SendPropertyChanged("DeliveryTime");
					this.OnDeliveryTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Stock", Storage="_Employee", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.Stocks.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.Stocks.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Transaction]")]
	public partial class Transaction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private decimal _AmountPayed;
		
		private System.Nullable<decimal> _AmountCharged;
		
		private string _ConnsignmentNo;
		
		private double _Weight;
		
		private System.Nullable<double> _WeightByFranchize;
		
		private string _Destination;
		
		private System.Nullable<decimal> _DestinationPin;
		
		private System.Nullable<System.Guid> _UserId;
		
		private System.DateTime _BookingDate;
		
		private System.Nullable<System.DateTime> _AddDate;
		
		private System.Nullable<System.DateTime> _LastModified;
		
		private string _Type;
		
		private string _Mode;
		
		private char _DOX;
		
		private System.Nullable<double> _ServiceTax;
		
		private System.Nullable<double> _SplDisc;
		
		private string _InvoiceNo;
		
		private System.Nullable<System.DateTime> _InvoiceDate;
		
		private string _CustCode;
		
		private string _TransMF_No;
		
		private System.Nullable<double> _BilledWeight;
		
		private string _ConsigneeName;
		
		private string _ConsigneeAddress;
		
		private string _ConsignerName;
		
		private string _ConsignerAddress;
		
		private string _SubClient;
		
		private string _DeliveryStatus;
		
		private char _RecalculateEnabled;
		
		private System.Nullable<decimal> _Insurance;
		
		private EntitySet<InvoiceAssignment> _InvoiceAssignments;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<Client> _Client;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnAmountPayedChanging(decimal value);
    partial void OnAmountPayedChanged();
    partial void OnAmountChargedChanging(System.Nullable<decimal> value);
    partial void OnAmountChargedChanged();
    partial void OnConnsignmentNoChanging(string value);
    partial void OnConnsignmentNoChanged();
    partial void OnWeightChanging(double value);
    partial void OnWeightChanged();
    partial void OnWeightByFranchizeChanging(System.Nullable<double> value);
    partial void OnWeightByFranchizeChanged();
    partial void OnDestinationChanging(string value);
    partial void OnDestinationChanged();
    partial void OnDestinationPinChanging(System.Nullable<decimal> value);
    partial void OnDestinationPinChanged();
    partial void OnUserIdChanging(System.Nullable<System.Guid> value);
    partial void OnUserIdChanged();
    partial void OnBookingDateChanging(System.DateTime value);
    partial void OnBookingDateChanged();
    partial void OnAddDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAddDateChanged();
    partial void OnLastModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnModeChanging(string value);
    partial void OnModeChanged();
    partial void OnDOXChanging(char value);
    partial void OnDOXChanged();
    partial void OnServiceTaxChanging(System.Nullable<double> value);
    partial void OnServiceTaxChanged();
    partial void OnSplDiscChanging(System.Nullable<double> value);
    partial void OnSplDiscChanged();
    partial void OnInvoiceNoChanging(string value);
    partial void OnInvoiceNoChanged();
    partial void OnInvoiceDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInvoiceDateChanged();
    partial void OnCustCodeChanging(string value);
    partial void OnCustCodeChanged();
    partial void OnTransMF_NoChanging(string value);
    partial void OnTransMF_NoChanged();
    partial void OnBilledWeightChanging(System.Nullable<double> value);
    partial void OnBilledWeightChanged();
    partial void OnConsigneeNameChanging(string value);
    partial void OnConsigneeNameChanged();
    partial void OnConsigneeAddressChanging(string value);
    partial void OnConsigneeAddressChanged();
    partial void OnConsignerNameChanging(string value);
    partial void OnConsignerNameChanged();
    partial void OnConsignerAddressChanging(string value);
    partial void OnConsignerAddressChanged();
    partial void OnSubClientChanging(string value);
    partial void OnSubClientChanged();
    partial void OnDeliveryStatusChanging(string value);
    partial void OnDeliveryStatusChanged();
    partial void OnRecalculateEnabledChanging(char value);
    partial void OnRecalculateEnabledChanged();
    partial void OnInsuranceChanging(System.Nullable<decimal> value);
    partial void OnInsuranceChanged();
    #endregion
		
		public Transaction()
		{
			this._InvoiceAssignments = new EntitySet<InvoiceAssignment>(new Action<InvoiceAssignment>(this.attach_InvoiceAssignments), new Action<InvoiceAssignment>(this.detach_InvoiceAssignments));
			this._Employee = default(EntityRef<Employee>);
			this._Client = default(EntityRef<Client>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountPayed", DbType="Decimal(18,2) NOT NULL")]
		public decimal AmountPayed
		{
			get
			{
				return this._AmountPayed;
			}
			set
			{
				if ((this._AmountPayed != value))
				{
					this.OnAmountPayedChanging(value);
					this.SendPropertyChanging();
					this._AmountPayed = value;
					this.SendPropertyChanged("AmountPayed");
					this.OnAmountPayedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountCharged", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> AmountCharged
		{
			get
			{
				return this._AmountCharged;
			}
			set
			{
				if ((this._AmountCharged != value))
				{
					this.OnAmountChargedChanging(value);
					this.SendPropertyChanging();
					this._AmountCharged = value;
					this.SendPropertyChanged("AmountCharged");
					this.OnAmountChargedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConnsignmentNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ConnsignmentNo
		{
			get
			{
				return this._ConnsignmentNo;
			}
			set
			{
				if ((this._ConnsignmentNo != value))
				{
					this.OnConnsignmentNoChanging(value);
					this.SendPropertyChanging();
					this._ConnsignmentNo = value;
					this.SendPropertyChanged("ConnsignmentNo");
					this.OnConnsignmentNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Float NOT NULL")]
		public double Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeightByFranchize", DbType="Float")]
		public System.Nullable<double> WeightByFranchize
		{
			get
			{
				return this._WeightByFranchize;
			}
			set
			{
				if ((this._WeightByFranchize != value))
				{
					this.OnWeightByFranchizeChanging(value);
					this.SendPropertyChanging();
					this._WeightByFranchize = value;
					this.SendPropertyChanged("WeightByFranchize");
					this.OnWeightByFranchizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Destination", DbType="VarChar(50)")]
		public string Destination
		{
			get
			{
				return this._Destination;
			}
			set
			{
				if ((this._Destination != value))
				{
					this.OnDestinationChanging(value);
					this.SendPropertyChanging();
					this._Destination = value;
					this.SendPropertyChanged("Destination");
					this.OnDestinationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DestinationPin", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> DestinationPin
		{
			get
			{
				return this._DestinationPin;
			}
			set
			{
				if ((this._DestinationPin != value))
				{
					this.OnDestinationPinChanging(value);
					this.SendPropertyChanging();
					this._DestinationPin = value;
					this.SendPropertyChanged("DestinationPin");
					this.OnDestinationPinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookingDate", DbType="Date NOT NULL")]
		public System.DateTime BookingDate
		{
			get
			{
				return this._BookingDate;
			}
			set
			{
				if ((this._BookingDate != value))
				{
					this.OnBookingDateChanging(value);
					this.SendPropertyChanging();
					this._BookingDate = value;
					this.SendPropertyChanged("BookingDate");
					this.OnBookingDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddDate", DbType="Date")]
		public System.Nullable<System.DateTime> AddDate
		{
			get
			{
				return this._AddDate;
			}
			set
			{
				if ((this._AddDate != value))
				{
					this.OnAddDateChanging(value);
					this.SendPropertyChanging();
					this._AddDate = value;
					this.SendPropertyChanged("AddDate");
					this.OnAddDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModified", DbType="Date")]
		public System.Nullable<System.DateTime> LastModified
		{
			get
			{
				return this._LastModified;
			}
			set
			{
				if ((this._LastModified != value))
				{
					this.OnLastModifiedChanging(value);
					this.SendPropertyChanging();
					this._LastModified = value;
					this.SendPropertyChanged("LastModified");
					this.OnLastModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NChar(25)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mode", DbType="NChar(25) NOT NULL", CanBeNull=false)]
		public string Mode
		{
			get
			{
				return this._Mode;
			}
			set
			{
				if ((this._Mode != value))
				{
					this.OnModeChanging(value);
					this.SendPropertyChanging();
					this._Mode = value;
					this.SendPropertyChanged("Mode");
					this.OnModeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOX", DbType="Char(1) NOT NULL")]
		public char DOX
		{
			get
			{
				return this._DOX;
			}
			set
			{
				if ((this._DOX != value))
				{
					this.OnDOXChanging(value);
					this.SendPropertyChanging();
					this._DOX = value;
					this.SendPropertyChanged("DOX");
					this.OnDOXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceTax", DbType="Float")]
		public System.Nullable<double> ServiceTax
		{
			get
			{
				return this._ServiceTax;
			}
			set
			{
				if ((this._ServiceTax != value))
				{
					this.OnServiceTaxChanging(value);
					this.SendPropertyChanging();
					this._ServiceTax = value;
					this.SendPropertyChanged("ServiceTax");
					this.OnServiceTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SplDisc", DbType="Float")]
		public System.Nullable<double> SplDisc
		{
			get
			{
				return this._SplDisc;
			}
			set
			{
				if ((this._SplDisc != value))
				{
					this.OnSplDiscChanging(value);
					this.SendPropertyChanging();
					this._SplDisc = value;
					this.SendPropertyChanged("SplDisc");
					this.OnSplDiscChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNo", DbType="VarChar(50)")]
		public string InvoiceNo
		{
			get
			{
				return this._InvoiceNo;
			}
			set
			{
				if ((this._InvoiceNo != value))
				{
					this.OnInvoiceNoChanging(value);
					this.SendPropertyChanging();
					this._InvoiceNo = value;
					this.SendPropertyChanged("InvoiceNo");
					this.OnInvoiceNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceDate", DbType="Date")]
		public System.Nullable<System.DateTime> InvoiceDate
		{
			get
			{
				return this._InvoiceDate;
			}
			set
			{
				if ((this._InvoiceDate != value))
				{
					this.OnInvoiceDateChanging(value);
					this.SendPropertyChanging();
					this._InvoiceDate = value;
					this.SendPropertyChanged("InvoiceDate");
					this.OnInvoiceDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustCode", DbType="VarChar(6)")]
		public string CustCode
		{
			get
			{
				return this._CustCode;
			}
			set
			{
				if ((this._CustCode != value))
				{
					if (this._Client.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustCodeChanging(value);
					this.SendPropertyChanging();
					this._CustCode = value;
					this.SendPropertyChanged("CustCode");
					this.OnCustCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransMF_No", DbType="VarChar(50)")]
		public string TransMF_No
		{
			get
			{
				return this._TransMF_No;
			}
			set
			{
				if ((this._TransMF_No != value))
				{
					this.OnTransMF_NoChanging(value);
					this.SendPropertyChanging();
					this._TransMF_No = value;
					this.SendPropertyChanged("TransMF_No");
					this.OnTransMF_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BilledWeight", DbType="Float")]
		public System.Nullable<double> BilledWeight
		{
			get
			{
				return this._BilledWeight;
			}
			set
			{
				if ((this._BilledWeight != value))
				{
					this.OnBilledWeightChanging(value);
					this.SendPropertyChanging();
					this._BilledWeight = value;
					this.SendPropertyChanged("BilledWeight");
					this.OnBilledWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsigneeName", DbType="VarChar(100)")]
		public string ConsigneeName
		{
			get
			{
				return this._ConsigneeName;
			}
			set
			{
				if ((this._ConsigneeName != value))
				{
					this.OnConsigneeNameChanging(value);
					this.SendPropertyChanging();
					this._ConsigneeName = value;
					this.SendPropertyChanged("ConsigneeName");
					this.OnConsigneeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsigneeAddress", DbType="VarChar(500)")]
		public string ConsigneeAddress
		{
			get
			{
				return this._ConsigneeAddress;
			}
			set
			{
				if ((this._ConsigneeAddress != value))
				{
					this.OnConsigneeAddressChanging(value);
					this.SendPropertyChanging();
					this._ConsigneeAddress = value;
					this.SendPropertyChanged("ConsigneeAddress");
					this.OnConsigneeAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsignerName", DbType="VarChar(100)")]
		public string ConsignerName
		{
			get
			{
				return this._ConsignerName;
			}
			set
			{
				if ((this._ConsignerName != value))
				{
					this.OnConsignerNameChanging(value);
					this.SendPropertyChanging();
					this._ConsignerName = value;
					this.SendPropertyChanged("ConsignerName");
					this.OnConsignerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsignerAddress", DbType="VarChar(500)")]
		public string ConsignerAddress
		{
			get
			{
				return this._ConsignerAddress;
			}
			set
			{
				if ((this._ConsignerAddress != value))
				{
					this.OnConsignerAddressChanging(value);
					this.SendPropertyChanging();
					this._ConsignerAddress = value;
					this.SendPropertyChanged("ConsignerAddress");
					this.OnConsignerAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubClient", DbType="VarChar(500)")]
		public string SubClient
		{
			get
			{
				return this._SubClient;
			}
			set
			{
				if ((this._SubClient != value))
				{
					this.OnSubClientChanging(value);
					this.SendPropertyChanging();
					this._SubClient = value;
					this.SendPropertyChanged("SubClient");
					this.OnSubClientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryStatus", DbType="VarChar(500)")]
		public string DeliveryStatus
		{
			get
			{
				return this._DeliveryStatus;
			}
			set
			{
				if ((this._DeliveryStatus != value))
				{
					this.OnDeliveryStatusChanging(value);
					this.SendPropertyChanging();
					this._DeliveryStatus = value;
					this.SendPropertyChanged("DeliveryStatus");
					this.OnDeliveryStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecalculateEnabled", DbType="Char(1) NOT NULL")]
		public char RecalculateEnabled
		{
			get
			{
				return this._RecalculateEnabled;
			}
			set
			{
				if ((this._RecalculateEnabled != value))
				{
					this.OnRecalculateEnabledChanging(value);
					this.SendPropertyChanging();
					this._RecalculateEnabled = value;
					this.SendPropertyChanged("RecalculateEnabled");
					this.OnRecalculateEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Insurance", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Insurance
		{
			get
			{
				return this._Insurance;
			}
			set
			{
				if ((this._Insurance != value))
				{
					this.OnInsuranceChanging(value);
					this.SendPropertyChanging();
					this._Insurance = value;
					this.SendPropertyChanged("Insurance");
					this.OnInsuranceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Transaction_InvoiceAssignment", Storage="_InvoiceAssignments", ThisKey="ID", OtherKey="TransactionId")]
		public EntitySet<InvoiceAssignment> InvoiceAssignments
		{
			get
			{
				return this._InvoiceAssignments;
			}
			set
			{
				this._InvoiceAssignments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Transaction", Storage="_Employee", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.Transactions.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.Transactions.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_Transaction", Storage="_Client", ThisKey="CustCode", OtherKey="CLCODE", IsForeignKey=true)]
		public Client Client
		{
			get
			{
				return this._Client.Entity;
			}
			set
			{
				Client previousValue = this._Client.Entity;
				if (((previousValue != value) 
							|| (this._Client.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Client.Entity = null;
						previousValue.Transactions.Remove(this);
					}
					this._Client.Entity = value;
					if ((value != null))
					{
						value.Transactions.Add(this);
						this._CustCode = value.CLCODE;
					}
					else
					{
						this._CustCode = default(string);
					}
					this.SendPropertyChanged("Client");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_InvoiceAssignments(InvoiceAssignment entity)
		{
			this.SendPropertyChanging();
			entity.Transaction = this;
		}
		
		private void detach_InvoiceAssignments(InvoiceAssignment entity)
		{
			this.SendPropertyChanging();
			entity.Transaction = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.User_permission")]
	public partial class User_permission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Guid _emp_id;
		
		private int _per_id;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<Permission> _Permission;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onemp_idChanging(System.Guid value);
    partial void Onemp_idChanged();
    partial void Onper_idChanging(int value);
    partial void Onper_idChanged();
    #endregion
		
		public User_permission()
		{
			this._Employee = default(EntityRef<Employee>);
			this._Permission = default(EntityRef<Permission>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emp_id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid emp_id
		{
			get
			{
				return this._emp_id;
			}
			set
			{
				if ((this._emp_id != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onemp_idChanging(value);
					this.SendPropertyChanging();
					this._emp_id = value;
					this.SendPropertyChanged("emp_id");
					this.Onemp_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_per_id", DbType="Int NOT NULL")]
		public int per_id
		{
			get
			{
				return this._per_id;
			}
			set
			{
				if ((this._per_id != value))
				{
					if (this._Permission.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onper_idChanging(value);
					this.SendPropertyChanging();
					this._per_id = value;
					this.SendPropertyChanged("per_id");
					this.Onper_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_User_permission", Storage="_Employee", ThisKey="emp_id", OtherKey="Id", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.User_permissions.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.User_permissions.Add(this);
						this._emp_id = value.Id;
					}
					else
					{
						this._emp_id = default(System.Guid);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Permission_User_permission", Storage="_Permission", ThisKey="per_id", OtherKey="id", IsForeignKey=true)]
		public Permission Permission
		{
			get
			{
				return this._Permission.Entity;
			}
			set
			{
				Permission previousValue = this._Permission.Entity;
				if (((previousValue != value) 
							|| (this._Permission.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Permission.Entity = null;
						previousValue.User_permissions.Remove(this);
					}
					this._Permission.Entity = value;
					if ((value != null))
					{
						value.User_permissions.Add(this);
						this._per_id = value.id;
					}
					else
					{
						this._per_id = default(int);
					}
					this.SendPropertyChanged("Permission");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AccountStatement")]
	public partial class AccountStatement
	{
		
		private string _Id;
		
		private System.DateTime _TransactionDate;
		
		private string _TypeOfRecord;
		
		private string _ClientCode;
		
		private string _Remark;
		
		private string _Details;
		
		private System.Nullable<double> _TotalRecievedAmount;
		
		private System.Nullable<double> _PayAmount;
		
		public AccountStatement()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionDate", DbType="Date NOT NULL")]
		public System.DateTime TransactionDate
		{
			get
			{
				return this._TransactionDate;
			}
			set
			{
				if ((this._TransactionDate != value))
				{
					this._TransactionDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeOfRecord", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		public string TypeOfRecord
		{
			get
			{
				return this._TypeOfRecord;
			}
			set
			{
				if ((this._TypeOfRecord != value))
				{
					this._TypeOfRecord = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientCode", DbType="VarChar(6)")]
		public string ClientCode
		{
			get
			{
				return this._ClientCode;
			}
			set
			{
				if ((this._ClientCode != value))
				{
					this._ClientCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="VarChar(182)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this._Remark = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Details", DbType="VarChar(360)")]
		public string Details
		{
			get
			{
				return this._Details;
			}
			set
			{
				if ((this._Details != value))
				{
					this._Details = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalRecievedAmount", DbType="Float")]
		public System.Nullable<double> TotalRecievedAmount
		{
			get
			{
				return this._TotalRecievedAmount;
			}
			set
			{
				if ((this._TotalRecievedAmount != value))
				{
					this._TotalRecievedAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayAmount", DbType="Float")]
		public System.Nullable<double> PayAmount
		{
			get
			{
				return this._PayAmount;
			}
			set
			{
				if ((this._PayAmount != value))
				{
					this._PayAmount = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TransactionCityView")]
	public partial class TransactionCityView
	{
		
		private System.Guid _ID;
		
		private decimal _AmountPayed;
		
		private System.Nullable<decimal> _AmountCharged;
		
		private string _ConnsignmentNo;
		
		private double _Weight;
		
		private System.Nullable<double> _WeightByFranchize;
		
		private string _Destination;
		
		private System.Nullable<decimal> _DestinationPin;
		
		private System.Nullable<System.Guid> _UserId;
		
		private System.DateTime _BookingDate;
		
		private System.Nullable<System.DateTime> _AddDate;
		
		private System.Nullable<System.DateTime> _LastModified;
		
		private string _Type;
		
		private string _Mode;
		
		private char _DOX;
		
		private System.Nullable<double> _ServiceTax;
		
		private System.Nullable<double> _SplDisc;
		
		private string _InvoiceNo;
		
		private System.Nullable<System.DateTime> _InvoiceDate;
		
		private string _CustCode;
		
		private string _TransMF_No;
		
		private System.Nullable<double> _BilledWeight;
		
		private string _CITY_DESC;
		
		private string _SER_DESC;
		
		private string _CLNAME;
		
		private string _ConsigneeName;
		
		private string _ConsigneeAddress;
		
		private string _ConsignerName;
		
		private string _ConsignerAddress;
		
		private string _SubClient;
		
		private string _DeliveryStatus;
		
		private char _RecalculateEnabled;
		
		private System.Nullable<decimal> _Insurance;
		
		public TransactionCityView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountPayed", DbType="Decimal(18,2) NOT NULL")]
		public decimal AmountPayed
		{
			get
			{
				return this._AmountPayed;
			}
			set
			{
				if ((this._AmountPayed != value))
				{
					this._AmountPayed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountCharged", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> AmountCharged
		{
			get
			{
				return this._AmountCharged;
			}
			set
			{
				if ((this._AmountCharged != value))
				{
					this._AmountCharged = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConnsignmentNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ConnsignmentNo
		{
			get
			{
				return this._ConnsignmentNo;
			}
			set
			{
				if ((this._ConnsignmentNo != value))
				{
					this._ConnsignmentNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Float NOT NULL")]
		public double Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this._Weight = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeightByFranchize", DbType="Float")]
		public System.Nullable<double> WeightByFranchize
		{
			get
			{
				return this._WeightByFranchize;
			}
			set
			{
				if ((this._WeightByFranchize != value))
				{
					this._WeightByFranchize = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Destination", DbType="VarChar(50)")]
		public string Destination
		{
			get
			{
				return this._Destination;
			}
			set
			{
				if ((this._Destination != value))
				{
					this._Destination = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DestinationPin", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> DestinationPin
		{
			get
			{
				return this._DestinationPin;
			}
			set
			{
				if ((this._DestinationPin != value))
				{
					this._DestinationPin = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookingDate", DbType="Date NOT NULL")]
		public System.DateTime BookingDate
		{
			get
			{
				return this._BookingDate;
			}
			set
			{
				if ((this._BookingDate != value))
				{
					this._BookingDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddDate", DbType="Date")]
		public System.Nullable<System.DateTime> AddDate
		{
			get
			{
				return this._AddDate;
			}
			set
			{
				if ((this._AddDate != value))
				{
					this._AddDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModified", DbType="Date")]
		public System.Nullable<System.DateTime> LastModified
		{
			get
			{
				return this._LastModified;
			}
			set
			{
				if ((this._LastModified != value))
				{
					this._LastModified = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NChar(25)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this._Type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mode", DbType="NChar(25) NOT NULL", CanBeNull=false)]
		public string Mode
		{
			get
			{
				return this._Mode;
			}
			set
			{
				if ((this._Mode != value))
				{
					this._Mode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOX", DbType="Char(1) NOT NULL")]
		public char DOX
		{
			get
			{
				return this._DOX;
			}
			set
			{
				if ((this._DOX != value))
				{
					this._DOX = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceTax", DbType="Float")]
		public System.Nullable<double> ServiceTax
		{
			get
			{
				return this._ServiceTax;
			}
			set
			{
				if ((this._ServiceTax != value))
				{
					this._ServiceTax = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SplDisc", DbType="Float")]
		public System.Nullable<double> SplDisc
		{
			get
			{
				return this._SplDisc;
			}
			set
			{
				if ((this._SplDisc != value))
				{
					this._SplDisc = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNo", DbType="VarChar(50)")]
		public string InvoiceNo
		{
			get
			{
				return this._InvoiceNo;
			}
			set
			{
				if ((this._InvoiceNo != value))
				{
					this._InvoiceNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceDate", DbType="Date")]
		public System.Nullable<System.DateTime> InvoiceDate
		{
			get
			{
				return this._InvoiceDate;
			}
			set
			{
				if ((this._InvoiceDate != value))
				{
					this._InvoiceDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustCode", DbType="VarChar(6)")]
		public string CustCode
		{
			get
			{
				return this._CustCode;
			}
			set
			{
				if ((this._CustCode != value))
				{
					this._CustCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransMF_No", DbType="VarChar(50)")]
		public string TransMF_No
		{
			get
			{
				return this._TransMF_No;
			}
			set
			{
				if ((this._TransMF_No != value))
				{
					this._TransMF_No = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BilledWeight", DbType="Float")]
		public System.Nullable<double> BilledWeight
		{
			get
			{
				return this._BilledWeight;
			}
			set
			{
				if ((this._BilledWeight != value))
				{
					this._BilledWeight = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CITY_DESC", DbType="NVarChar(255)")]
		public string CITY_DESC
		{
			get
			{
				return this._CITY_DESC;
			}
			set
			{
				if ((this._CITY_DESC != value))
				{
					this._CITY_DESC = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SER_DESC", DbType="NVarChar(255)")]
		public string SER_DESC
		{
			get
			{
				return this._SER_DESC;
			}
			set
			{
				if ((this._SER_DESC != value))
				{
					this._SER_DESC = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CLNAME", DbType="VarChar(50)")]
		public string CLNAME
		{
			get
			{
				return this._CLNAME;
			}
			set
			{
				if ((this._CLNAME != value))
				{
					this._CLNAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsigneeName", DbType="VarChar(100)")]
		public string ConsigneeName
		{
			get
			{
				return this._ConsigneeName;
			}
			set
			{
				if ((this._ConsigneeName != value))
				{
					this._ConsigneeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsigneeAddress", DbType="VarChar(500)")]
		public string ConsigneeAddress
		{
			get
			{
				return this._ConsigneeAddress;
			}
			set
			{
				if ((this._ConsigneeAddress != value))
				{
					this._ConsigneeAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsignerName", DbType="VarChar(100)")]
		public string ConsignerName
		{
			get
			{
				return this._ConsignerName;
			}
			set
			{
				if ((this._ConsignerName != value))
				{
					this._ConsignerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsignerAddress", DbType="VarChar(500)")]
		public string ConsignerAddress
		{
			get
			{
				return this._ConsignerAddress;
			}
			set
			{
				if ((this._ConsignerAddress != value))
				{
					this._ConsignerAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubClient", DbType="VarChar(500)")]
		public string SubClient
		{
			get
			{
				return this._SubClient;
			}
			set
			{
				if ((this._SubClient != value))
				{
					this._SubClient = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryStatus", DbType="VarChar(500)")]
		public string DeliveryStatus
		{
			get
			{
				return this._DeliveryStatus;
			}
			set
			{
				if ((this._DeliveryStatus != value))
				{
					this._DeliveryStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecalculateEnabled", DbType="Char(1) NOT NULL")]
		public char RecalculateEnabled
		{
			get
			{
				return this._RecalculateEnabled;
			}
			set
			{
				if ((this._RecalculateEnabled != value))
				{
					this._RecalculateEnabled = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Insurance", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Insurance
		{
			get
			{
				return this._Insurance;
			}
			set
			{
				if ((this._Insurance != value))
				{
					this._Insurance = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BalanceView")]
	public partial class BalanceView
	{
		
		private string _PC;
		
		private System.Nullable<double> _PaymentRecieved;
		
		private System.Nullable<double> _AmountBilled;
		
		private System.Nullable<decimal> _NetBalance;
		
		public BalanceView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PC", DbType="VarChar(6)")]
		public string PC
		{
			get
			{
				return this._PC;
			}
			set
			{
				if ((this._PC != value))
				{
					this._PC = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentRecieved", DbType="Float")]
		public System.Nullable<double> PaymentRecieved
		{
			get
			{
				return this._PaymentRecieved;
			}
			set
			{
				if ((this._PaymentRecieved != value))
				{
					this._PaymentRecieved = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountBilled", DbType="Float")]
		public System.Nullable<double> AmountBilled
		{
			get
			{
				return this._AmountBilled;
			}
			set
			{
				if ((this._AmountBilled != value))
				{
					this._AmountBilled = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetBalance", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> NetBalance
		{
			get
			{
				return this._NetBalance;
			}
			set
			{
				if ((this._NetBalance != value))
				{
					this._NetBalance = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoiceView")]
	public partial class InvoiceView
	{
		
		private System.Guid _ID;
		
		private System.Nullable<decimal> _AmountPayed;
		
		private System.Nullable<decimal> _AmountCharged;
		
		private string _ConnsignmentNo;
		
		private double _Weight;
		
		private System.Nullable<double> _WeightByFranchize;
		
		private string _Destination;
		
		private System.Nullable<decimal> _DestinationPin;
		
		private System.Nullable<System.Guid> _UserId;
		
		private System.DateTime _BookingDate;
		
		private System.Nullable<System.DateTime> _AddDate;
		
		private System.Nullable<System.DateTime> _LastModified;
		
		private string _Type;
		
		private string _Mode;
		
		private char _DOX;
		
		private System.Nullable<double> _ServiceTax;
		
		private System.Nullable<double> _SplDisc;
		
		private string _InvoiceNo;
		
		private System.Nullable<System.DateTime> _InvoiceDate;
		
		private string _CustCode;
		
		private string _TransMF_No;
		
		private double _BilledWeight;
		
		private string _BillId;
		
		public InvoiceView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountPayed", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> AmountPayed
		{
			get
			{
				return this._AmountPayed;
			}
			set
			{
				if ((this._AmountPayed != value))
				{
					this._AmountPayed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountCharged", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> AmountCharged
		{
			get
			{
				return this._AmountCharged;
			}
			set
			{
				if ((this._AmountCharged != value))
				{
					this._AmountCharged = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConnsignmentNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ConnsignmentNo
		{
			get
			{
				return this._ConnsignmentNo;
			}
			set
			{
				if ((this._ConnsignmentNo != value))
				{
					this._ConnsignmentNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Float NOT NULL")]
		public double Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this._Weight = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeightByFranchize", DbType="Float")]
		public System.Nullable<double> WeightByFranchize
		{
			get
			{
				return this._WeightByFranchize;
			}
			set
			{
				if ((this._WeightByFranchize != value))
				{
					this._WeightByFranchize = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Destination", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Destination
		{
			get
			{
				return this._Destination;
			}
			set
			{
				if ((this._Destination != value))
				{
					this._Destination = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DestinationPin", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> DestinationPin
		{
			get
			{
				return this._DestinationPin;
			}
			set
			{
				if ((this._DestinationPin != value))
				{
					this._DestinationPin = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookingDate", DbType="Date NOT NULL")]
		public System.DateTime BookingDate
		{
			get
			{
				return this._BookingDate;
			}
			set
			{
				if ((this._BookingDate != value))
				{
					this._BookingDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddDate", DbType="Date")]
		public System.Nullable<System.DateTime> AddDate
		{
			get
			{
				return this._AddDate;
			}
			set
			{
				if ((this._AddDate != value))
				{
					this._AddDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModified", DbType="Date")]
		public System.Nullable<System.DateTime> LastModified
		{
			get
			{
				return this._LastModified;
			}
			set
			{
				if ((this._LastModified != value))
				{
					this._LastModified = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NChar(25)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this._Type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mode", DbType="NChar(25) NOT NULL", CanBeNull=false)]
		public string Mode
		{
			get
			{
				return this._Mode;
			}
			set
			{
				if ((this._Mode != value))
				{
					this._Mode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOX", DbType="Char(1) NOT NULL")]
		public char DOX
		{
			get
			{
				return this._DOX;
			}
			set
			{
				if ((this._DOX != value))
				{
					this._DOX = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceTax", DbType="Float")]
		public System.Nullable<double> ServiceTax
		{
			get
			{
				return this._ServiceTax;
			}
			set
			{
				if ((this._ServiceTax != value))
				{
					this._ServiceTax = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SplDisc", DbType="Float")]
		public System.Nullable<double> SplDisc
		{
			get
			{
				return this._SplDisc;
			}
			set
			{
				if ((this._SplDisc != value))
				{
					this._SplDisc = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNo", DbType="VarChar(50)")]
		public string InvoiceNo
		{
			get
			{
				return this._InvoiceNo;
			}
			set
			{
				if ((this._InvoiceNo != value))
				{
					this._InvoiceNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceDate", DbType="Date")]
		public System.Nullable<System.DateTime> InvoiceDate
		{
			get
			{
				return this._InvoiceDate;
			}
			set
			{
				if ((this._InvoiceDate != value))
				{
					this._InvoiceDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustCode", DbType="VarChar(6)")]
		public string CustCode
		{
			get
			{
				return this._CustCode;
			}
			set
			{
				if ((this._CustCode != value))
				{
					this._CustCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransMF_No", DbType="VarChar(50)")]
		public string TransMF_No
		{
			get
			{
				return this._TransMF_No;
			}
			set
			{
				if ((this._TransMF_No != value))
				{
					this._TransMF_No = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BilledWeight", DbType="Float NOT NULL")]
		public double BilledWeight
		{
			get
			{
				return this._BilledWeight;
			}
			set
			{
				if ((this._BilledWeight != value))
				{
					this._BilledWeight = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillId", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
		public string BillId
		{
			get
			{
				return this._BillId;
			}
			set
			{
				if ((this._BillId != value))
				{
					this._BillId = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MISReportView")]
	public partial class MISReportView
	{
		
		private string _ConnsignmentNo;
		
		private System.DateTime _BookingDate;
		
		private string _SER_DESC;
		
		private System.Nullable<double> _BilledWeight;
		
		private string _ConsigneeName;
		
		private string _ConsignerName;
		
		private string _DeliveryStatus;
		
		private string _CLNAME;
		
		private string _CITY_DESC;
		
		private string _Expr1;
		
		private System.Nullable<decimal> _AmountCharged;
		
		private string _CLCODE;
		
		private string _SubClient;
		
		public MISReportView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConnsignmentNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ConnsignmentNo
		{
			get
			{
				return this._ConnsignmentNo;
			}
			set
			{
				if ((this._ConnsignmentNo != value))
				{
					this._ConnsignmentNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookingDate", DbType="Date NOT NULL")]
		public System.DateTime BookingDate
		{
			get
			{
				return this._BookingDate;
			}
			set
			{
				if ((this._BookingDate != value))
				{
					this._BookingDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SER_DESC", DbType="NVarChar(255)")]
		public string SER_DESC
		{
			get
			{
				return this._SER_DESC;
			}
			set
			{
				if ((this._SER_DESC != value))
				{
					this._SER_DESC = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BilledWeight", DbType="Float")]
		public System.Nullable<double> BilledWeight
		{
			get
			{
				return this._BilledWeight;
			}
			set
			{
				if ((this._BilledWeight != value))
				{
					this._BilledWeight = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsigneeName", DbType="VarChar(100)")]
		public string ConsigneeName
		{
			get
			{
				return this._ConsigneeName;
			}
			set
			{
				if ((this._ConsigneeName != value))
				{
					this._ConsigneeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsignerName", DbType="VarChar(100)")]
		public string ConsignerName
		{
			get
			{
				return this._ConsignerName;
			}
			set
			{
				if ((this._ConsignerName != value))
				{
					this._ConsignerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryStatus", DbType="VarChar(500)")]
		public string DeliveryStatus
		{
			get
			{
				return this._DeliveryStatus;
			}
			set
			{
				if ((this._DeliveryStatus != value))
				{
					this._DeliveryStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CLNAME", DbType="VarChar(50)")]
		public string CLNAME
		{
			get
			{
				return this._CLNAME;
			}
			set
			{
				if ((this._CLNAME != value))
				{
					this._CLNAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CITY_DESC", DbType="NVarChar(255)")]
		public string CITY_DESC
		{
			get
			{
				return this._CITY_DESC;
			}
			set
			{
				if ((this._CITY_DESC != value))
				{
					this._CITY_DESC = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expr1", DbType="NVarChar(255)")]
		public string Expr1
		{
			get
			{
				return this._Expr1;
			}
			set
			{
				if ((this._Expr1 != value))
				{
					this._Expr1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountCharged", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> AmountCharged
		{
			get
			{
				return this._AmountCharged;
			}
			set
			{
				if ((this._AmountCharged != value))
				{
					this._AmountCharged = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CLCODE", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string CLCODE
		{
			get
			{
				return this._CLCODE;
			}
			set
			{
				if ((this._CLCODE != value))
				{
					this._CLCODE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubClient", DbType="VarChar(500)")]
		public string SubClient
		{
			get
			{
				return this._SubClient;
			}
			set
			{
				if ((this._SubClient != value))
				{
					this._SubClient = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PROFITVIEW")]
	public partial class PROFITVIEW
	{
		
		private System.Nullable<decimal> _TotalPayed;
		
		private System.Nullable<double> _TotalChargedAmount;
		
		private string _CustCode;
		
		private System.Nullable<double> _netProfit;
		
		private System.Nullable<double> _FUEL;
		
		public PROFITVIEW()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPayed", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> TotalPayed
		{
			get
			{
				return this._TotalPayed;
			}
			set
			{
				if ((this._TotalPayed != value))
				{
					this._TotalPayed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalChargedAmount", DbType="Float")]
		public System.Nullable<double> TotalChargedAmount
		{
			get
			{
				return this._TotalChargedAmount;
			}
			set
			{
				if ((this._TotalChargedAmount != value))
				{
					this._TotalChargedAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustCode", DbType="VarChar(6)")]
		public string CustCode
		{
			get
			{
				return this._CustCode;
			}
			set
			{
				if ((this._CustCode != value))
				{
					this._CustCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_netProfit", DbType="Float")]
		public System.Nullable<double> netProfit
		{
			get
			{
				return this._netProfit;
			}
			set
			{
				if ((this._netProfit != value))
				{
					this._netProfit = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FUEL", DbType="Float")]
		public System.Nullable<double> FUEL
		{
			get
			{
				return this._FUEL;
			}
			set
			{
				if ((this._FUEL != value))
				{
					this._FUEL = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RuntimeCityView")]
	public partial class RuntimeCityView
	{
		
		private System.Guid _Id;
		
		private string _ConsignmentNo;
		
		private double _Weight;
		
		private string _Type;
		
		private string _Destination;
		
		private string _Mode;
		
		private System.Nullable<decimal> _DestinationPin;
		
		private System.DateTime _BookingDate;
		
		private decimal _Amount;
		
		private System.Nullable<char> _DOX;
		
		private System.Nullable<double> _ServiceTax;
		
		private System.Nullable<double> _SplDisc;
		
		private string _InvoiceNo;
		
		private System.Nullable<System.DateTime> _InvoiceDate;
		
		private System.Nullable<System.Guid> _EmpId;
		
		private System.Nullable<decimal> _FrAmount;
		
		private System.Nullable<double> _FrWeight;
		
		private System.Nullable<System.Guid> _TransactionId;
		
		private string _CustCode;
		
		private string _TransMF_No;
		
		private System.Nullable<double> _BilledWeight;
		
		private string _CITY_DESC;
		
		public RuntimeCityView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsignmentNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ConsignmentNo
		{
			get
			{
				return this._ConsignmentNo;
			}
			set
			{
				if ((this._ConsignmentNo != value))
				{
					this._ConsignmentNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Float NOT NULL")]
		public double Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this._Weight = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NChar(25)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this._Type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Destination", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Destination
		{
			get
			{
				return this._Destination;
			}
			set
			{
				if ((this._Destination != value))
				{
					this._Destination = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mode", DbType="NChar(25)")]
		public string Mode
		{
			get
			{
				return this._Mode;
			}
			set
			{
				if ((this._Mode != value))
				{
					this._Mode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DestinationPin", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> DestinationPin
		{
			get
			{
				return this._DestinationPin;
			}
			set
			{
				if ((this._DestinationPin != value))
				{
					this._DestinationPin = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookingDate", DbType="Date NOT NULL")]
		public System.DateTime BookingDate
		{
			get
			{
				return this._BookingDate;
			}
			set
			{
				if ((this._BookingDate != value))
				{
					this._BookingDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,2) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOX", DbType="Char(1)")]
		public System.Nullable<char> DOX
		{
			get
			{
				return this._DOX;
			}
			set
			{
				if ((this._DOX != value))
				{
					this._DOX = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceTax", DbType="Float")]
		public System.Nullable<double> ServiceTax
		{
			get
			{
				return this._ServiceTax;
			}
			set
			{
				if ((this._ServiceTax != value))
				{
					this._ServiceTax = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SplDisc", DbType="Float")]
		public System.Nullable<double> SplDisc
		{
			get
			{
				return this._SplDisc;
			}
			set
			{
				if ((this._SplDisc != value))
				{
					this._SplDisc = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNo", DbType="VarChar(50)")]
		public string InvoiceNo
		{
			get
			{
				return this._InvoiceNo;
			}
			set
			{
				if ((this._InvoiceNo != value))
				{
					this._InvoiceNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceDate", DbType="Date")]
		public System.Nullable<System.DateTime> InvoiceDate
		{
			get
			{
				return this._InvoiceDate;
			}
			set
			{
				if ((this._InvoiceDate != value))
				{
					this._InvoiceDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> EmpId
		{
			get
			{
				return this._EmpId;
			}
			set
			{
				if ((this._EmpId != value))
				{
					this._EmpId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FrAmount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> FrAmount
		{
			get
			{
				return this._FrAmount;
			}
			set
			{
				if ((this._FrAmount != value))
				{
					this._FrAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FrWeight", DbType="Float")]
		public System.Nullable<double> FrWeight
		{
			get
			{
				return this._FrWeight;
			}
			set
			{
				if ((this._FrWeight != value))
				{
					this._FrWeight = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> TransactionId
		{
			get
			{
				return this._TransactionId;
			}
			set
			{
				if ((this._TransactionId != value))
				{
					this._TransactionId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustCode", DbType="VarChar(10)")]
		public string CustCode
		{
			get
			{
				return this._CustCode;
			}
			set
			{
				if ((this._CustCode != value))
				{
					this._CustCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransMF_No", DbType="VarChar(50)")]
		public string TransMF_No
		{
			get
			{
				return this._TransMF_No;
			}
			set
			{
				if ((this._TransMF_No != value))
				{
					this._TransMF_No = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BilledWeight", DbType="Float")]
		public System.Nullable<double> BilledWeight
		{
			get
			{
				return this._BilledWeight;
			}
			set
			{
				if ((this._BilledWeight != value))
				{
					this._BilledWeight = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CITY_DESC", DbType="NVarChar(255)")]
		public string CITY_DESC
		{
			get
			{
				return this._CITY_DESC;
			}
			set
			{
				if ((this._CITY_DESC != value))
				{
					this._CITY_DESC = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StockAssignmentView")]
	public partial class StockAssignmentView
	{
		
		private int _SrlNo;
		
		private string _EmployeeName;
		
		private string _BookNo;
		
		private System.Nullable<double> _CostPerSlip;
		
		private string _StartNumber;
		
		private string _EndNumber;
		
		private System.Nullable<int> _SlipsUsed;
		
		private System.Nullable<System.DateTime> _AddDate;
		
		private string _Description;
		
		public StockAssignmentView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SrlNo", DbType="Int NOT NULL")]
		public int SrlNo
		{
			get
			{
				return this._SrlNo;
			}
			set
			{
				if ((this._SrlNo != value))
				{
					this._SrlNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeName", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string EmployeeName
		{
			get
			{
				return this._EmployeeName;
			}
			set
			{
				if ((this._EmployeeName != value))
				{
					this._EmployeeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookNo", DbType="VarChar(20)")]
		public string BookNo
		{
			get
			{
				return this._BookNo;
			}
			set
			{
				if ((this._BookNo != value))
				{
					this._BookNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostPerSlip", DbType="Float")]
		public System.Nullable<double> CostPerSlip
		{
			get
			{
				return this._CostPerSlip;
			}
			set
			{
				if ((this._CostPerSlip != value))
				{
					this._CostPerSlip = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartNumber", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string StartNumber
		{
			get
			{
				return this._StartNumber;
			}
			set
			{
				if ((this._StartNumber != value))
				{
					this._StartNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndNumber", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string EndNumber
		{
			get
			{
				return this._EndNumber;
			}
			set
			{
				if ((this._EndNumber != value))
				{
					this._EndNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlipsUsed", DbType="Int")]
		public System.Nullable<int> SlipsUsed
		{
			get
			{
				return this._SlipsUsed;
			}
			set
			{
				if ((this._SlipsUsed != value))
				{
					this._SlipsUsed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddDate", DbType="Date")]
		public System.Nullable<System.DateTime> AddDate
		{
			get
			{
				return this._AddDate;
			}
			set
			{
				if ((this._AddDate != value))
				{
					this._AddDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(250)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Expense")]
	public partial class Expense : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _ExpenseType;
		
		private decimal _Amount;
		
		private string _Remarks;
		
		private System.DateTime _Date;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnExpenseTypeChanging(string value);
    partial void OnExpenseTypeChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    #endregion
		
		public Expense()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpenseType", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string ExpenseType
		{
			get
			{
				return this._ExpenseType;
			}
			set
			{
				if ((this._ExpenseType != value))
				{
					this.OnExpenseTypeChanging(value);
					this.SendPropertyChanging();
					this._ExpenseType = value;
					this.SendPropertyChanged("ExpenseType");
					this.OnExpenseTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,2) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="VarChar(255)")]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClientReportView")]
	public partial class ClientReportView
	{
		
		private System.Nullable<decimal> _TotalAmountPayed;
		
		private System.Nullable<decimal> _TotalAmountCharged;
		
		private System.Nullable<decimal> _BalanceAmount;
		
		private System.Nullable<decimal> _SlipCost;
		
		private string _CustCode;
		
		private System.DateTime _BookingDate;
		
		private string _Month;
		
		private string _GroupName;
		
		private System.Nullable<int> _NumOfConns;
		
		private System.Nullable<double> _FUEL;
		
		private System.Nullable<double> _STAX;
		
		public ClientReportView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalAmountPayed", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> TotalAmountPayed
		{
			get
			{
				return this._TotalAmountPayed;
			}
			set
			{
				if ((this._TotalAmountPayed != value))
				{
					this._TotalAmountPayed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalAmountCharged", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> TotalAmountCharged
		{
			get
			{
				return this._TotalAmountCharged;
			}
			set
			{
				if ((this._TotalAmountCharged != value))
				{
					this._TotalAmountCharged = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BalanceAmount", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> BalanceAmount
		{
			get
			{
				return this._BalanceAmount;
			}
			set
			{
				if ((this._BalanceAmount != value))
				{
					this._BalanceAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlipCost", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> SlipCost
		{
			get
			{
				return this._SlipCost;
			}
			set
			{
				if ((this._SlipCost != value))
				{
					this._SlipCost = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustCode", DbType="VarChar(6)")]
		public string CustCode
		{
			get
			{
				return this._CustCode;
			}
			set
			{
				if ((this._CustCode != value))
				{
					this._CustCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookingDate", DbType="Date NOT NULL")]
		public System.DateTime BookingDate
		{
			get
			{
				return this._BookingDate;
			}
			set
			{
				if ((this._BookingDate != value))
				{
					this._BookingDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Month", DbType="NVarChar(30)")]
		public string Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this._Month = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupName", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string GroupName
		{
			get
			{
				return this._GroupName;
			}
			set
			{
				if ((this._GroupName != value))
				{
					this._GroupName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumOfConns", DbType="Int")]
		public System.Nullable<int> NumOfConns
		{
			get
			{
				return this._NumOfConns;
			}
			set
			{
				if ((this._NumOfConns != value))
				{
					this._NumOfConns = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FUEL", DbType="Float")]
		public System.Nullable<double> FUEL
		{
			get
			{
				return this._FUEL;
			}
			set
			{
				if ((this._FUEL != value))
				{
					this._FUEL = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STAX", DbType="Float")]
		public System.Nullable<double> STAX
		{
			get
			{
				return this._STAX;
			}
			set
			{
				if ((this._STAX != value))
				{
					this._STAX = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AccountStatementFull")]
	public partial class AccountStatementFull
	{
		
		private string _Id;
		
		private System.Nullable<System.DateTime> _TransactionDate;
		
		private string _TypeOfRecord;
		
		private string _ClientCode;
		
		private string _CLNAME;
		
		private string _Remark;
		
		private string _Details;
		
		private System.Nullable<double> _TotalRecievedAmount;
		
		private System.Nullable<double> _PayAmount;
		
		public AccountStatementFull()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="VarChar(50)")]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionDate", DbType="Date")]
		public System.Nullable<System.DateTime> TransactionDate
		{
			get
			{
				return this._TransactionDate;
			}
			set
			{
				if ((this._TransactionDate != value))
				{
					this._TransactionDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeOfRecord", DbType="VarChar(12) NOT NULL", CanBeNull=false)]
		public string TypeOfRecord
		{
			get
			{
				return this._TypeOfRecord;
			}
			set
			{
				if ((this._TypeOfRecord != value))
				{
					this._TypeOfRecord = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientCode", DbType="VarChar(6)")]
		public string ClientCode
		{
			get
			{
				return this._ClientCode;
			}
			set
			{
				if ((this._ClientCode != value))
				{
					this._ClientCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CLNAME", DbType="VarChar(50)")]
		public string CLNAME
		{
			get
			{
				return this._CLNAME;
			}
			set
			{
				if ((this._CLNAME != value))
				{
					this._CLNAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="VarChar(182)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this._Remark = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Details", DbType="VarChar(360)")]
		public string Details
		{
			get
			{
				return this._Details;
			}
			set
			{
				if ((this._Details != value))
				{
					this._Details = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalRecievedAmount", DbType="Float")]
		public System.Nullable<double> TotalRecievedAmount
		{
			get
			{
				return this._TotalRecievedAmount;
			}
			set
			{
				if ((this._TotalRecievedAmount != value))
				{
					this._TotalRecievedAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayAmount", DbType="Float")]
		public System.Nullable<double> PayAmount
		{
			get
			{
				return this._PayAmount;
			}
			set
			{
				if ((this._PayAmount != value))
				{
					this._PayAmount = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
