#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FinalUi
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="BillingDatabase")]
	public partial class BillingDataDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertClient(Client instance);
    partial void UpdateClient(Client instance);
    partial void DeleteClient(Client instance);
    partial void InsertUser_Role(User_Role instance);
    partial void UpdateUser_Role(User_Role instance);
    partial void DeleteUser_Role(User_Role instance);
    partial void InsertRoles_Permission(Roles_Permission instance);
    partial void UpdateRoles_Permission(Roles_Permission instance);
    partial void DeleteRoles_Permission(Roles_Permission instance);
    partial void InsertRole(Role instance);
    partial void UpdateRole(Role instance);
    partial void DeleteRole(Role instance);
    partial void InsertEmployee(Employee instance);
    partial void UpdateEmployee(Employee instance);
    partial void DeleteEmployee(Employee instance);
    partial void InsertClientTransaction(ClientTransaction instance);
    partial void UpdateClientTransaction(ClientTransaction instance);
    partial void DeleteClientTransaction(ClientTransaction instance);
    partial void InsertTransaction(Transaction instance);
    partial void UpdateTransaction(Transaction instance);
    partial void DeleteTransaction(Transaction instance);
    partial void InsertRuntimeData(RuntimeData instance);
    partial void UpdateRuntimeData(RuntimeData instance);
    partial void DeleteRuntimeData(RuntimeData instance);
    partial void InsertRuntimeMeta(RuntimeMeta instance);
    partial void UpdateRuntimeMeta(RuntimeMeta instance);
    partial void DeleteRuntimeMeta(RuntimeMeta instance);
    #endregion
		
		public BillingDataDataContext() : 
				base(Configs.Default.ConnString, mappingSource)
		{
			OnCreated();
		}
		
		public BillingDataDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BillingDataDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BillingDataDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BillingDataDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Client> Clients
		{
			get
			{
				return this.GetTable<Client>();
			}
		}
		
		public System.Data.Linq.Table<User_Role> User_Roles
		{
			get
			{
				return this.GetTable<User_Role>();
			}
		}
		
		public System.Data.Linq.Table<Roles_Permission> Roles_Permissions
		{
			get
			{
				return this.GetTable<Roles_Permission>();
			}
		}
		
		public System.Data.Linq.Table<Role> Roles
		{
			get
			{
				return this.GetTable<Role>();
			}
		}
		
		public System.Data.Linq.Table<Employee> Employees
		{
			get
			{
				return this.GetTable<Employee>();
			}
		}
		
		public System.Data.Linq.Table<ClientTransaction> ClientTransactions
		{
			get
			{
				return this.GetTable<ClientTransaction>();
			}
		}
		
		public System.Data.Linq.Table<Transaction> Transactions
		{
			get
			{
				return this.GetTable<Transaction>();
			}
		}
		
		public System.Data.Linq.Table<RuntimeData> RuntimeDatas
		{
			get
			{
				return this.GetTable<RuntimeData>();
			}
		}
		
		public System.Data.Linq.Table<RuntimeMeta> RuntimeMetas
		{
			get
			{
				return this.GetTable<RuntimeMeta>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Client")]
	public partial class Client : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _Name;
		
		private string _Code;
		
		private System.Nullable<decimal> _PhoneNo;
		
		private string _EmailAddress;
		
		private string _Address;
		
		private EntitySet<ClientTransaction> _ClientTransactions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnPhoneNoChanging(System.Nullable<decimal> value);
    partial void OnPhoneNoChanged();
    partial void OnEmailAddressChanging(string value);
    partial void OnEmailAddressChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    #endregion
		
		public Client()
		{
			this._ClientTransactions = new EntitySet<ClientTransaction>(new Action<ClientTransaction>(this.attach_ClientTransactions), new Action<ClientTransaction>(this.detach_ClientTransactions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNo", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> PhoneNo
		{
			get
			{
				return this._PhoneNo;
			}
			set
			{
				if ((this._PhoneNo != value))
				{
					this.OnPhoneNoChanging(value);
					this.SendPropertyChanging();
					this._PhoneNo = value;
					this.SendPropertyChanged("PhoneNo");
					this.OnPhoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailAddress", DbType="VarChar(50)")]
		public string EmailAddress
		{
			get
			{
				return this._EmailAddress;
			}
			set
			{
				if ((this._EmailAddress != value))
				{
					this.OnEmailAddressChanging(value);
					this.SendPropertyChanging();
					this._EmailAddress = value;
					this.SendPropertyChanged("EmailAddress");
					this.OnEmailAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(MAX)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_ClientTransaction", Storage="_ClientTransactions", ThisKey="Id", OtherKey="ClientID")]
		public EntitySet<ClientTransaction> ClientTransactions
		{
			get
			{
				return this._ClientTransactions;
			}
			set
			{
				this._ClientTransactions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ClientTransactions(ClientTransaction entity)
		{
			this.SendPropertyChanging();
			entity.Client = this;
		}
		
		private void detach_ClientTransactions(ClientTransaction entity)
		{
			this.SendPropertyChanging();
			entity.Client = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.User_Roles")]
	public partial class User_Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Guid _EmployeeId;
		
		private System.Guid _RoleId;
		
		private EntityRef<Role> _Role;
		
		private EntityRef<Employee> _Employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnEmployeeIdChanging(System.Guid value);
    partial void OnEmployeeIdChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    #endregion
		
		public User_Role()
		{
			this._Role = default(EntityRef<Role>);
			this._Employee = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid EmployeeId
		{
			get
			{
				return this._EmployeeId;
			}
			set
			{
				if ((this._EmployeeId != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeId = value;
					this.SendPropertyChanged("EmployeeId");
					this.OnEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_User_Role", Storage="_Role", ThisKey="RoleId", OtherKey="Id", IsForeignKey=true)]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.User_Roles.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.User_Roles.Add(this);
						this._RoleId = value.Id;
					}
					else
					{
						this._RoleId = default(System.Guid);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_User_Role", Storage="_Employee", ThisKey="EmployeeId", OtherKey="Id", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.User_Roles.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.User_Roles.Add(this);
						this._EmployeeId = value.Id;
					}
					else
					{
						this._EmployeeId = default(System.Guid);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Roles_Permissions")]
	public partial class Roles_Permission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Guid _Role_Id;
		
		private string _Permission;
		
		private EntityRef<Role> _Role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnRole_IdChanging(System.Guid value);
    partial void OnRole_IdChanged();
    partial void OnPermissionChanging(string value);
    partial void OnPermissionChanged();
    #endregion
		
		public Roles_Permission()
		{
			this._Role = default(EntityRef<Role>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role_Id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Role_Id
		{
			get
			{
				return this._Role_Id;
			}
			set
			{
				if ((this._Role_Id != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRole_IdChanging(value);
					this.SendPropertyChanging();
					this._Role_Id = value;
					this.SendPropertyChanged("Role_Id");
					this.OnRole_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Permission", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Permission
		{
			get
			{
				return this._Permission;
			}
			set
			{
				if ((this._Permission != value))
				{
					this.OnPermissionChanging(value);
					this.SendPropertyChanging();
					this._Permission = value;
					this.SendPropertyChanged("Permission");
					this.OnPermissionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_Roles_Permission", Storage="_Role", ThisKey="Role_Id", OtherKey="Id", IsForeignKey=true)]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.Roles_Permissions.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.Roles_Permissions.Add(this);
						this._Role_Id = value.Id;
					}
					else
					{
						this._Role_Id = default(System.Guid);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Roles")]
	public partial class Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _Name;
		
		private EntitySet<User_Role> _User_Roles;
		
		private EntitySet<Roles_Permission> _Roles_Permissions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Role()
		{
			this._User_Roles = new EntitySet<User_Role>(new Action<User_Role>(this.attach_User_Roles), new Action<User_Role>(this.detach_User_Roles));
			this._Roles_Permissions = new EntitySet<Roles_Permission>(new Action<Roles_Permission>(this.attach_Roles_Permissions), new Action<Roles_Permission>(this.detach_Roles_Permissions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_User_Role", Storage="_User_Roles", ThisKey="Id", OtherKey="RoleId")]
		public EntitySet<User_Role> User_Roles
		{
			get
			{
				return this._User_Roles;
			}
			set
			{
				this._User_Roles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_Roles_Permission", Storage="_Roles_Permissions", ThisKey="Id", OtherKey="Role_Id")]
		public EntitySet<Roles_Permission> Roles_Permissions
		{
			get
			{
				return this._Roles_Permissions;
			}
			set
			{
				this._Roles_Permissions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_User_Roles(User_Role entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_User_Roles(User_Role entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
		
		private void attach_Roles_Permissions(Roles_Permission entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_Roles_Permissions(Roles_Permission entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Employee")]
	public partial class Employee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _Name;
		
		private System.Nullable<char> _Gender;
		
		private string _EMPCode;
		
		private string _UserName;
		
		private string _Password;
		
		private EntitySet<User_Role> _User_Roles;
		
		private EntitySet<Transaction> _Transactions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnGenderChanging(System.Nullable<char> value);
    partial void OnGenderChanged();
    partial void OnEMPCodeChanging(string value);
    partial void OnEMPCodeChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    #endregion
		
		public Employee()
		{
			this._User_Roles = new EntitySet<User_Role>(new Action<User_Role>(this.attach_User_Roles), new Action<User_Role>(this.detach_User_Roles));
			this._Transactions = new EntitySet<Transaction>(new Action<Transaction>(this.attach_Transactions), new Action<Transaction>(this.detach_Transactions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="Char(1)")]
		public System.Nullable<char> Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMPCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string EMPCode
		{
			get
			{
				return this._EMPCode;
			}
			set
			{
				if ((this._EMPCode != value))
				{
					this.OnEMPCodeChanging(value);
					this.SendPropertyChanging();
					this._EMPCode = value;
					this.SendPropertyChanged("EMPCode");
					this.OnEMPCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_User_Role", Storage="_User_Roles", ThisKey="Id", OtherKey="EmployeeId")]
		public EntitySet<User_Role> User_Roles
		{
			get
			{
				return this._User_Roles;
			}
			set
			{
				this._User_Roles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Transaction", Storage="_Transactions", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<Transaction> Transactions
		{
			get
			{
				return this._Transactions;
			}
			set
			{
				this._Transactions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_User_Roles(User_Role entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_User_Roles(User_Role entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_Transactions(Transaction entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_Transactions(Transaction entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClientTransaction")]
	public partial class ClientTransaction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Guid _ClientID;
		
		private System.Guid _TransactionID;
		
		private EntityRef<Client> _Client;
		
		private EntityRef<Transaction> _Transaction;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnClientIDChanging(System.Guid value);
    partial void OnClientIDChanged();
    partial void OnTransactionIDChanging(System.Guid value);
    partial void OnTransactionIDChanged();
    #endregion
		
		public ClientTransaction()
		{
			this._Client = default(EntityRef<Client>);
			this._Transaction = default(EntityRef<Transaction>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					if (this._Client.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid TransactionID
		{
			get
			{
				return this._TransactionID;
			}
			set
			{
				if ((this._TransactionID != value))
				{
					if (this._Transaction.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTransactionIDChanging(value);
					this.SendPropertyChanging();
					this._TransactionID = value;
					this.SendPropertyChanged("TransactionID");
					this.OnTransactionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_ClientTransaction", Storage="_Client", ThisKey="ClientID", OtherKey="Id", IsForeignKey=true)]
		public Client Client
		{
			get
			{
				return this._Client.Entity;
			}
			set
			{
				Client previousValue = this._Client.Entity;
				if (((previousValue != value) 
							|| (this._Client.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Client.Entity = null;
						previousValue.ClientTransactions.Remove(this);
					}
					this._Client.Entity = value;
					if ((value != null))
					{
						value.ClientTransactions.Add(this);
						this._ClientID = value.Id;
					}
					else
					{
						this._ClientID = default(System.Guid);
					}
					this.SendPropertyChanged("Client");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Transaction_ClientTransaction", Storage="_Transaction", ThisKey="TransactionID", OtherKey="ID", IsForeignKey=true)]
		public Transaction Transaction
		{
			get
			{
				return this._Transaction.Entity;
			}
			set
			{
				Transaction previousValue = this._Transaction.Entity;
				if (((previousValue != value) 
							|| (this._Transaction.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Transaction.Entity = null;
						previousValue.ClientTransactions.Remove(this);
					}
					this._Transaction.Entity = value;
					if ((value != null))
					{
						value.ClientTransactions.Add(this);
						this._TransactionID = value.ID;
					}
					else
					{
						this._TransactionID = default(System.Guid);
					}
					this.SendPropertyChanged("Transaction");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Transaction]")]
	public partial class Transaction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private decimal _AmountPayed;
		
		private System.Nullable<decimal> _AmountCharged;
		
		private string _ConnsignmentNo;
		
		private decimal _Weight;
		
		private System.Nullable<decimal> _WeightByFranchize;
		
		private string _Destination;
		
		private System.Nullable<decimal> _DestinationPin;
		
		private System.Nullable<System.Guid> _UserId;
		
		private System.DateTime _BookingDate;
		
		private System.Nullable<System.DateTime> _AddDate;
		
		private System.Nullable<System.DateTime> _LastModified;
		
		private EntitySet<ClientTransaction> _ClientTransactions;
		
		private EntityRef<Employee> _Employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnAmountPayedChanging(decimal value);
    partial void OnAmountPayedChanged();
    partial void OnAmountChargedChanging(System.Nullable<decimal> value);
    partial void OnAmountChargedChanged();
    partial void OnConnsignmentNoChanging(string value);
    partial void OnConnsignmentNoChanged();
    partial void OnWeightChanging(decimal value);
    partial void OnWeightChanged();
    partial void OnWeightByFranchizeChanging(System.Nullable<decimal> value);
    partial void OnWeightByFranchizeChanged();
    partial void OnDestinationChanging(string value);
    partial void OnDestinationChanged();
    partial void OnDestinationPinChanging(System.Nullable<decimal> value);
    partial void OnDestinationPinChanged();
    partial void OnUserIdChanging(System.Nullable<System.Guid> value);
    partial void OnUserIdChanged();
    partial void OnBookingDateChanging(System.DateTime value);
    partial void OnBookingDateChanged();
    partial void OnAddDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAddDateChanged();
    partial void OnLastModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedChanged();
    #endregion
		
		public Transaction()
		{
			this._ClientTransactions = new EntitySet<ClientTransaction>(new Action<ClientTransaction>(this.attach_ClientTransactions), new Action<ClientTransaction>(this.detach_ClientTransactions));
			this._Employee = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountPayed", DbType="Decimal(18,2) NOT NULL")]
		public decimal AmountPayed
		{
			get
			{
				return this._AmountPayed;
			}
			set
			{
				if ((this._AmountPayed != value))
				{
					this.OnAmountPayedChanging(value);
					this.SendPropertyChanging();
					this._AmountPayed = value;
					this.SendPropertyChanged("AmountPayed");
					this.OnAmountPayedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountCharged", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> AmountCharged
		{
			get
			{
				return this._AmountCharged;
			}
			set
			{
				if ((this._AmountCharged != value))
				{
					this.OnAmountChargedChanging(value);
					this.SendPropertyChanging();
					this._AmountCharged = value;
					this.SendPropertyChanged("AmountCharged");
					this.OnAmountChargedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConnsignmentNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ConnsignmentNo
		{
			get
			{
				return this._ConnsignmentNo;
			}
			set
			{
				if ((this._ConnsignmentNo != value))
				{
					this.OnConnsignmentNoChanging(value);
					this.SendPropertyChanging();
					this._ConnsignmentNo = value;
					this.SendPropertyChanged("ConnsignmentNo");
					this.OnConnsignmentNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Decimal(18,5) NOT NULL")]
		public decimal Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeightByFranchize", DbType="Decimal(18,5)")]
		public System.Nullable<decimal> WeightByFranchize
		{
			get
			{
				return this._WeightByFranchize;
			}
			set
			{
				if ((this._WeightByFranchize != value))
				{
					this.OnWeightByFranchizeChanging(value);
					this.SendPropertyChanging();
					this._WeightByFranchize = value;
					this.SendPropertyChanged("WeightByFranchize");
					this.OnWeightByFranchizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Destination", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Destination
		{
			get
			{
				return this._Destination;
			}
			set
			{
				if ((this._Destination != value))
				{
					this.OnDestinationChanging(value);
					this.SendPropertyChanging();
					this._Destination = value;
					this.SendPropertyChanged("Destination");
					this.OnDestinationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DestinationPin", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> DestinationPin
		{
			get
			{
				return this._DestinationPin;
			}
			set
			{
				if ((this._DestinationPin != value))
				{
					this.OnDestinationPinChanging(value);
					this.SendPropertyChanging();
					this._DestinationPin = value;
					this.SendPropertyChanged("DestinationPin");
					this.OnDestinationPinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookingDate", DbType="Date NOT NULL")]
		public System.DateTime BookingDate
		{
			get
			{
				return this._BookingDate;
			}
			set
			{
				if ((this._BookingDate != value))
				{
					this.OnBookingDateChanging(value);
					this.SendPropertyChanging();
					this._BookingDate = value;
					this.SendPropertyChanged("BookingDate");
					this.OnBookingDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddDate", DbType="Date")]
		public System.Nullable<System.DateTime> AddDate
		{
			get
			{
				return this._AddDate;
			}
			set
			{
				if ((this._AddDate != value))
				{
					this.OnAddDateChanging(value);
					this.SendPropertyChanging();
					this._AddDate = value;
					this.SendPropertyChanged("AddDate");
					this.OnAddDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModified", DbType="Date")]
		public System.Nullable<System.DateTime> LastModified
		{
			get
			{
				return this._LastModified;
			}
			set
			{
				if ((this._LastModified != value))
				{
					this.OnLastModifiedChanging(value);
					this.SendPropertyChanging();
					this._LastModified = value;
					this.SendPropertyChanged("LastModified");
					this.OnLastModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Transaction_ClientTransaction", Storage="_ClientTransactions", ThisKey="ID", OtherKey="TransactionID")]
		public EntitySet<ClientTransaction> ClientTransactions
		{
			get
			{
				return this._ClientTransactions;
			}
			set
			{
				this._ClientTransactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Transaction", Storage="_Employee", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.Transactions.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.Transactions.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ClientTransactions(ClientTransaction entity)
		{
			this.SendPropertyChanging();
			entity.Transaction = this;
		}
		
		private void detach_ClientTransactions(ClientTransaction entity)
		{
			this.SendPropertyChanging();
			entity.Transaction = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RuntimeData")]
	public partial class RuntimeData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _BranchCode;
		
		private string _ConsignmentNo;
		
		private string _BookedBy;
		
		private string _CustomerCode;
		
		private double _Weight;
		
		private string _Type;
		
		private string _Destination;
		
		private string _Mode;
		
		private System.Nullable<int> _Pieces;
		
		private decimal _DestinationPin;
		
		private System.DateTime _BookingDate;
		
		private decimal _Amount;
		
		private string _Status;
		
		private string _Pod_RecD;
		
		private string _TransMF_No;
		
		private System.Nullable<System.TimeSpan> _BookingTime;
		
		private char _DOX;
		
		private double _ServiceTax;
		
		private double _SplDisc;
		
		private string _Contents;
		
		private string _Remarks;
		
		private System.Nullable<decimal> _Value;
		
		private string _InvoiceNo;
		
		private System.DateTime _InvoiceDate;
		
		private System.DateTime _Mod_Date;
		
		private string _Office_Type;
		
		private string _Office_Code;
		
		private string _RefNo;
		
		private System.TimeSpan _Mod_Time;
		
		private string _NodeId;
		
		private string _UserId;
		
		private string _Trans_Status;
		
		private string _Act_Cust_Code;
		
		private System.Nullable<decimal> _Mobile;
		
		private string _email;
		
		private string _NDX_Paper;
		
		private System.Nullable<System.TimeSpan> _PickupTime;
		
		private string _VolumeWieght;
		
		private string _CapturedWieght;
		
		private System.Nullable<System.Guid> _CustId;
		
		private System.Nullable<System.Guid> _EmpId;
		
		private System.Nullable<decimal> _FrAmount;
		
		private System.Nullable<double> _FrWeight;
		
		private System.Nullable<System.Guid> _TransactionId;
		
		private string _CustCode;
		
		private EntitySet<RuntimeMeta> _RuntimeMetas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnBranchCodeChanging(string value);
    partial void OnBranchCodeChanged();
    partial void OnConsignmentNoChanging(string value);
    partial void OnConsignmentNoChanged();
    partial void OnBookedByChanging(string value);
    partial void OnBookedByChanged();
    partial void OnCustomerCodeChanging(string value);
    partial void OnCustomerCodeChanged();
    partial void OnWeightChanging(double value);
    partial void OnWeightChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnDestinationChanging(string value);
    partial void OnDestinationChanged();
    partial void OnModeChanging(string value);
    partial void OnModeChanged();
    partial void OnPiecesChanging(System.Nullable<int> value);
    partial void OnPiecesChanged();
    partial void OnDestinationPinChanging(decimal value);
    partial void OnDestinationPinChanged();
    partial void OnBookingDateChanging(System.DateTime value);
    partial void OnBookingDateChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnPod_RecDChanging(string value);
    partial void OnPod_RecDChanged();
    partial void OnTransMF_NoChanging(string value);
    partial void OnTransMF_NoChanged();
    partial void OnBookingTimeChanging(System.Nullable<System.TimeSpan> value);
    partial void OnBookingTimeChanged();
    partial void OnDOXChanging(char value);
    partial void OnDOXChanged();
    partial void OnServiceTaxChanging(double value);
    partial void OnServiceTaxChanged();
    partial void OnSplDiscChanging(double value);
    partial void OnSplDiscChanged();
    partial void OnContentsChanging(string value);
    partial void OnContentsChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnValueChanging(System.Nullable<decimal> value);
    partial void OnValueChanged();
    partial void OnInvoiceNoChanging(string value);
    partial void OnInvoiceNoChanged();
    partial void OnInvoiceDateChanging(System.DateTime value);
    partial void OnInvoiceDateChanged();
    partial void OnMod_DateChanging(System.DateTime value);
    partial void OnMod_DateChanged();
    partial void OnOffice_TypeChanging(string value);
    partial void OnOffice_TypeChanged();
    partial void OnOffice_CodeChanging(string value);
    partial void OnOffice_CodeChanged();
    partial void OnRefNoChanging(string value);
    partial void OnRefNoChanged();
    partial void OnMod_TimeChanging(System.TimeSpan value);
    partial void OnMod_TimeChanged();
    partial void OnNodeIdChanging(string value);
    partial void OnNodeIdChanged();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    partial void OnTrans_StatusChanging(string value);
    partial void OnTrans_StatusChanged();
    partial void OnAct_Cust_CodeChanging(string value);
    partial void OnAct_Cust_CodeChanged();
    partial void OnMobileChanging(System.Nullable<decimal> value);
    partial void OnMobileChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnNDX_PaperChanging(string value);
    partial void OnNDX_PaperChanged();
    partial void OnPickupTimeChanging(System.Nullable<System.TimeSpan> value);
    partial void OnPickupTimeChanged();
    partial void OnVolumeWieghtChanging(string value);
    partial void OnVolumeWieghtChanged();
    partial void OnCapturedWieghtChanging(string value);
    partial void OnCapturedWieghtChanged();
    partial void OnCustIdChanging(System.Nullable<System.Guid> value);
    partial void OnCustIdChanged();
    partial void OnEmpIdChanging(System.Nullable<System.Guid> value);
    partial void OnEmpIdChanged();
    partial void OnFrAmountChanging(System.Nullable<decimal> value);
    partial void OnFrAmountChanged();
    partial void OnFrWeightChanging(System.Nullable<double> value);
    partial void OnFrWeightChanged();
    partial void OnTransactionIdChanging(System.Nullable<System.Guid> value);
    partial void OnTransactionIdChanged();
    partial void OnCustCodeChanging(string value);
    partial void OnCustCodeChanged();
    #endregion
		
		public RuntimeData()
		{
			this._RuntimeMetas = new EntitySet<RuntimeMeta>(new Action<RuntimeMeta>(this.attach_RuntimeMetas), new Action<RuntimeMeta>(this.detach_RuntimeMetas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchCode", DbType="VarChar(50)")]
		public string BranchCode
		{
			get
			{
				return this._BranchCode;
			}
			set
			{
				if ((this._BranchCode != value))
				{
					this.OnBranchCodeChanging(value);
					this.SendPropertyChanging();
					this._BranchCode = value;
					this.SendPropertyChanged("BranchCode");
					this.OnBranchCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsignmentNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ConsignmentNo
		{
			get
			{
				return this._ConsignmentNo;
			}
			set
			{
				if ((this._ConsignmentNo != value))
				{
					this.OnConsignmentNoChanging(value);
					this.SendPropertyChanging();
					this._ConsignmentNo = value;
					this.SendPropertyChanged("ConsignmentNo");
					this.OnConsignmentNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookedBy", DbType="NChar(25)")]
		public string BookedBy
		{
			get
			{
				return this._BookedBy;
			}
			set
			{
				if ((this._BookedBy != value))
				{
					this.OnBookedByChanging(value);
					this.SendPropertyChanging();
					this._BookedBy = value;
					this.SendPropertyChanged("BookedBy");
					this.OnBookedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerCode", DbType="NChar(25)")]
		public string CustomerCode
		{
			get
			{
				return this._CustomerCode;
			}
			set
			{
				if ((this._CustomerCode != value))
				{
					this.OnCustomerCodeChanging(value);
					this.SendPropertyChanging();
					this._CustomerCode = value;
					this.SendPropertyChanged("CustomerCode");
					this.OnCustomerCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Float NOT NULL")]
		public double Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NChar(25)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Destination", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Destination
		{
			get
			{
				return this._Destination;
			}
			set
			{
				if ((this._Destination != value))
				{
					this.OnDestinationChanging(value);
					this.SendPropertyChanging();
					this._Destination = value;
					this.SendPropertyChanged("Destination");
					this.OnDestinationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mode", DbType="NChar(25) NOT NULL", CanBeNull=false)]
		public string Mode
		{
			get
			{
				return this._Mode;
			}
			set
			{
				if ((this._Mode != value))
				{
					this.OnModeChanging(value);
					this.SendPropertyChanging();
					this._Mode = value;
					this.SendPropertyChanged("Mode");
					this.OnModeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pieces", DbType="Int")]
		public System.Nullable<int> Pieces
		{
			get
			{
				return this._Pieces;
			}
			set
			{
				if ((this._Pieces != value))
				{
					this.OnPiecesChanging(value);
					this.SendPropertyChanging();
					this._Pieces = value;
					this.SendPropertyChanged("Pieces");
					this.OnPiecesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DestinationPin", DbType="Decimal(18,0) NOT NULL")]
		public decimal DestinationPin
		{
			get
			{
				return this._DestinationPin;
			}
			set
			{
				if ((this._DestinationPin != value))
				{
					this.OnDestinationPinChanging(value);
					this.SendPropertyChanging();
					this._DestinationPin = value;
					this.SendPropertyChanged("DestinationPin");
					this.OnDestinationPinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookingDate", DbType="Date NOT NULL")]
		public System.DateTime BookingDate
		{
			get
			{
				return this._BookingDate;
			}
			set
			{
				if ((this._BookingDate != value))
				{
					this.OnBookingDateChanging(value);
					this.SendPropertyChanging();
					this._BookingDate = value;
					this.SendPropertyChanged("BookingDate");
					this.OnBookingDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,2) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NChar(20)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pod_RecD", DbType="NChar(20)")]
		public string Pod_RecD
		{
			get
			{
				return this._Pod_RecD;
			}
			set
			{
				if ((this._Pod_RecD != value))
				{
					this.OnPod_RecDChanging(value);
					this.SendPropertyChanging();
					this._Pod_RecD = value;
					this.SendPropertyChanged("Pod_RecD");
					this.OnPod_RecDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransMF_No", DbType="VarChar(50)")]
		public string TransMF_No
		{
			get
			{
				return this._TransMF_No;
			}
			set
			{
				if ((this._TransMF_No != value))
				{
					this.OnTransMF_NoChanging(value);
					this.SendPropertyChanging();
					this._TransMF_No = value;
					this.SendPropertyChanged("TransMF_No");
					this.OnTransMF_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookingTime", DbType="Time")]
		public System.Nullable<System.TimeSpan> BookingTime
		{
			get
			{
				return this._BookingTime;
			}
			set
			{
				if ((this._BookingTime != value))
				{
					this.OnBookingTimeChanging(value);
					this.SendPropertyChanging();
					this._BookingTime = value;
					this.SendPropertyChanged("BookingTime");
					this.OnBookingTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOX", DbType="Char(1) NOT NULL")]
		public char DOX
		{
			get
			{
				return this._DOX;
			}
			set
			{
				if ((this._DOX != value))
				{
					this.OnDOXChanging(value);
					this.SendPropertyChanging();
					this._DOX = value;
					this.SendPropertyChanged("DOX");
					this.OnDOXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceTax", DbType="Float NOT NULL")]
		public double ServiceTax
		{
			get
			{
				return this._ServiceTax;
			}
			set
			{
				if ((this._ServiceTax != value))
				{
					this.OnServiceTaxChanging(value);
					this.SendPropertyChanging();
					this._ServiceTax = value;
					this.SendPropertyChanged("ServiceTax");
					this.OnServiceTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SplDisc", DbType="Float NOT NULL")]
		public double SplDisc
		{
			get
			{
				return this._SplDisc;
			}
			set
			{
				if ((this._SplDisc != value))
				{
					this.OnSplDiscChanging(value);
					this.SendPropertyChanging();
					this._SplDisc = value;
					this.SendPropertyChanged("SplDisc");
					this.OnSplDiscChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contents", DbType="VarChar(50)")]
		public string Contents
		{
			get
			{
				return this._Contents;
			}
			set
			{
				if ((this._Contents != value))
				{
					this.OnContentsChanging(value);
					this.SendPropertyChanging();
					this._Contents = value;
					this.SendPropertyChanged("Contents");
					this.OnContentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="VarChar(50)")]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string InvoiceNo
		{
			get
			{
				return this._InvoiceNo;
			}
			set
			{
				if ((this._InvoiceNo != value))
				{
					this.OnInvoiceNoChanging(value);
					this.SendPropertyChanging();
					this._InvoiceNo = value;
					this.SendPropertyChanged("InvoiceNo");
					this.OnInvoiceNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceDate", DbType="Date NOT NULL")]
		public System.DateTime InvoiceDate
		{
			get
			{
				return this._InvoiceDate;
			}
			set
			{
				if ((this._InvoiceDate != value))
				{
					this.OnInvoiceDateChanging(value);
					this.SendPropertyChanging();
					this._InvoiceDate = value;
					this.SendPropertyChanged("InvoiceDate");
					this.OnInvoiceDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mod_Date", DbType="Date NOT NULL")]
		public System.DateTime Mod_Date
		{
			get
			{
				return this._Mod_Date;
			}
			set
			{
				if ((this._Mod_Date != value))
				{
					this.OnMod_DateChanging(value);
					this.SendPropertyChanging();
					this._Mod_Date = value;
					this.SendPropertyChanged("Mod_Date");
					this.OnMod_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Office_Type", DbType="NChar(20)")]
		public string Office_Type
		{
			get
			{
				return this._Office_Type;
			}
			set
			{
				if ((this._Office_Type != value))
				{
					this.OnOffice_TypeChanging(value);
					this.SendPropertyChanging();
					this._Office_Type = value;
					this.SendPropertyChanged("Office_Type");
					this.OnOffice_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Office_Code", DbType="NChar(50)")]
		public string Office_Code
		{
			get
			{
				return this._Office_Code;
			}
			set
			{
				if ((this._Office_Code != value))
				{
					this.OnOffice_CodeChanging(value);
					this.SendPropertyChanging();
					this._Office_Code = value;
					this.SendPropertyChanged("Office_Code");
					this.OnOffice_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefNo", DbType="NChar(10)")]
		public string RefNo
		{
			get
			{
				return this._RefNo;
			}
			set
			{
				if ((this._RefNo != value))
				{
					this.OnRefNoChanging(value);
					this.SendPropertyChanging();
					this._RefNo = value;
					this.SendPropertyChanged("RefNo");
					this.OnRefNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mod_Time", DbType="Time NOT NULL")]
		public System.TimeSpan Mod_Time
		{
			get
			{
				return this._Mod_Time;
			}
			set
			{
				if ((this._Mod_Time != value))
				{
					this.OnMod_TimeChanging(value);
					this.SendPropertyChanging();
					this._Mod_Time = value;
					this.SendPropertyChanged("Mod_Time");
					this.OnMod_TimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NodeId", DbType="NChar(50)")]
		public string NodeId
		{
			get
			{
				return this._NodeId;
			}
			set
			{
				if ((this._NodeId != value))
				{
					this.OnNodeIdChanging(value);
					this.SendPropertyChanging();
					this._NodeId = value;
					this.SendPropertyChanged("NodeId");
					this.OnNodeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NChar(18)")]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Trans_Status", DbType="NChar(20)")]
		public string Trans_Status
		{
			get
			{
				return this._Trans_Status;
			}
			set
			{
				if ((this._Trans_Status != value))
				{
					this.OnTrans_StatusChanging(value);
					this.SendPropertyChanging();
					this._Trans_Status = value;
					this.SendPropertyChanged("Trans_Status");
					this.OnTrans_StatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Act_Cust_Code", DbType="NChar(50)")]
		public string Act_Cust_Code
		{
			get
			{
				return this._Act_Cust_Code;
			}
			set
			{
				if ((this._Act_Cust_Code != value))
				{
					this.OnAct_Cust_CodeChanging(value);
					this.SendPropertyChanging();
					this._Act_Cust_Code = value;
					this.SendPropertyChanged("Act_Cust_Code");
					this.OnAct_Cust_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this.OnMobileChanging(value);
					this.SendPropertyChanging();
					this._Mobile = value;
					this.SendPropertyChanged("Mobile");
					this.OnMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(50)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDX_Paper", DbType="NChar(20) NOT NULL", CanBeNull=false)]
		public string NDX_Paper
		{
			get
			{
				return this._NDX_Paper;
			}
			set
			{
				if ((this._NDX_Paper != value))
				{
					this.OnNDX_PaperChanging(value);
					this.SendPropertyChanging();
					this._NDX_Paper = value;
					this.SendPropertyChanged("NDX_Paper");
					this.OnNDX_PaperChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PickupTime", DbType="Time")]
		public System.Nullable<System.TimeSpan> PickupTime
		{
			get
			{
				return this._PickupTime;
			}
			set
			{
				if ((this._PickupTime != value))
				{
					this.OnPickupTimeChanging(value);
					this.SendPropertyChanging();
					this._PickupTime = value;
					this.SendPropertyChanged("PickupTime");
					this.OnPickupTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VolumeWieght", DbType="NChar(50)")]
		public string VolumeWieght
		{
			get
			{
				return this._VolumeWieght;
			}
			set
			{
				if ((this._VolumeWieght != value))
				{
					this.OnVolumeWieghtChanging(value);
					this.SendPropertyChanging();
					this._VolumeWieght = value;
					this.SendPropertyChanged("VolumeWieght");
					this.OnVolumeWieghtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CapturedWieght", DbType="NChar(20)")]
		public string CapturedWieght
		{
			get
			{
				return this._CapturedWieght;
			}
			set
			{
				if ((this._CapturedWieght != value))
				{
					this.OnCapturedWieghtChanging(value);
					this.SendPropertyChanging();
					this._CapturedWieght = value;
					this.SendPropertyChanged("CapturedWieght");
					this.OnCapturedWieghtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CustId
		{
			get
			{
				return this._CustId;
			}
			set
			{
				if ((this._CustId != value))
				{
					this.OnCustIdChanging(value);
					this.SendPropertyChanging();
					this._CustId = value;
					this.SendPropertyChanged("CustId");
					this.OnCustIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> EmpId
		{
			get
			{
				return this._EmpId;
			}
			set
			{
				if ((this._EmpId != value))
				{
					this.OnEmpIdChanging(value);
					this.SendPropertyChanging();
					this._EmpId = value;
					this.SendPropertyChanged("EmpId");
					this.OnEmpIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FrAmount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> FrAmount
		{
			get
			{
				return this._FrAmount;
			}
			set
			{
				if ((this._FrAmount != value))
				{
					this.OnFrAmountChanging(value);
					this.SendPropertyChanging();
					this._FrAmount = value;
					this.SendPropertyChanged("FrAmount");
					this.OnFrAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FrWeight", DbType="Float")]
		public System.Nullable<double> FrWeight
		{
			get
			{
				return this._FrWeight;
			}
			set
			{
				if ((this._FrWeight != value))
				{
					this.OnFrWeightChanging(value);
					this.SendPropertyChanging();
					this._FrWeight = value;
					this.SendPropertyChanged("FrWeight");
					this.OnFrWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> TransactionId
		{
			get
			{
				return this._TransactionId;
			}
			set
			{
				if ((this._TransactionId != value))
				{
					this.OnTransactionIdChanging(value);
					this.SendPropertyChanging();
					this._TransactionId = value;
					this.SendPropertyChanged("TransactionId");
					this.OnTransactionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustCode", DbType="VarChar(10)")]
		public string CustCode
		{
			get
			{
				return this._CustCode;
			}
			set
			{
				if ((this._CustCode != value))
				{
					this.OnCustCodeChanging(value);
					this.SendPropertyChanging();
					this._CustCode = value;
					this.SendPropertyChanged("CustCode");
					this.OnCustCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RuntimeData_RuntimeMeta", Storage="_RuntimeMetas", ThisKey="Id", OtherKey="RuntimeDataID")]
		public EntitySet<RuntimeMeta> RuntimeMetas
		{
			get
			{
				return this._RuntimeMetas;
			}
			set
			{
				this._RuntimeMetas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RuntimeMetas(RuntimeMeta entity)
		{
			this.SendPropertyChanging();
			entity.RuntimeData = this;
		}
		
		private void detach_RuntimeMetas(RuntimeMeta entity)
		{
			this.SendPropertyChanging();
			entity.RuntimeData = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RuntimeMeta")]
	public partial class RuntimeMeta : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Guid _RuntimeDataID;
		
		private string _UserName;
		
		private int _SheetNo;
		
		private EntityRef<RuntimeData> _RuntimeData;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnRuntimeDataIDChanging(System.Guid value);
    partial void OnRuntimeDataIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnSheetNoChanging(int value);
    partial void OnSheetNoChanged();
    #endregion
		
		public RuntimeMeta()
		{
			this._RuntimeData = default(EntityRef<RuntimeData>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RuntimeDataID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid RuntimeDataID
		{
			get
			{
				return this._RuntimeDataID;
			}
			set
			{
				if ((this._RuntimeDataID != value))
				{
					if (this._RuntimeData.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRuntimeDataIDChanging(value);
					this.SendPropertyChanging();
					this._RuntimeDataID = value;
					this.SendPropertyChanged("RuntimeDataID");
					this.OnRuntimeDataIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SheetNo", DbType="Int NOT NULL")]
		public int SheetNo
		{
			get
			{
				return this._SheetNo;
			}
			set
			{
				if ((this._SheetNo != value))
				{
					this.OnSheetNoChanging(value);
					this.SendPropertyChanging();
					this._SheetNo = value;
					this.SendPropertyChanged("SheetNo");
					this.OnSheetNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RuntimeData_RuntimeMeta", Storage="_RuntimeData", ThisKey="RuntimeDataID", OtherKey="Id", IsForeignKey=true)]
		public RuntimeData RuntimeData
		{
			get
			{
				return this._RuntimeData.Entity;
			}
			set
			{
				RuntimeData previousValue = this._RuntimeData.Entity;
				if (((previousValue != value) 
							|| (this._RuntimeData.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RuntimeData.Entity = null;
						previousValue.RuntimeMetas.Remove(this);
					}
					this._RuntimeData.Entity = value;
					if ((value != null))
					{
						value.RuntimeMetas.Add(this);
						this._RuntimeDataID = value.Id;
					}
					else
					{
						this._RuntimeDataID = default(System.Guid);
					}
					this.SendPropertyChanged("RuntimeData");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
