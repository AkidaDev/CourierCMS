#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FinalUi
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="BillingDatabase")]
	public partial class BillingDataDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAssignment(Assignment instance);
    partial void UpdateAssignment(Assignment instance);
    partial void DeleteAssignment(Assignment instance);
    partial void InsertZONE(ZONE instance);
    partial void UpdateZONE(ZONE instance);
    partial void DeleteZONE(ZONE instance);
    partial void InsertCity(City instance);
    partial void UpdateCity(City instance);
    partial void DeleteCity(City instance);
    partial void InsertClient(Client instance);
    partial void UpdateClient(Client instance);
    partial void DeleteClient(Client instance);
    partial void InsertEmployee(Employee instance);
    partial void UpdateEmployee(Employee instance);
    partial void DeleteEmployee(Employee instance);
    partial void InsertRate(Rate instance);
    partial void UpdateRate(Rate instance);
    partial void DeleteRate(Rate instance);
    partial void InsertRole(Role instance);
    partial void UpdateRole(Role instance);
    partial void DeleteRole(Role instance);
    partial void InsertRoles_Permission(Roles_Permission instance);
    partial void UpdateRoles_Permission(Roles_Permission instance);
    partial void DeleteRoles_Permission(Roles_Permission instance);
    partial void InsertRuntimeData(RuntimeData instance);
    partial void UpdateRuntimeData(RuntimeData instance);
    partial void DeleteRuntimeData(RuntimeData instance);
    partial void InsertRuntimeMeta(RuntimeMeta instance);
    partial void UpdateRuntimeMeta(RuntimeMeta instance);
    partial void DeleteRuntimeMeta(RuntimeMeta instance);
    partial void InsertService(Service instance);
    partial void UpdateService(Service instance);
    partial void DeleteService(Service instance);
    partial void InsertState(State instance);
    partial void UpdateState(State instance);
    partial void DeleteState(State instance);
    partial void InsertTransaction(Transaction instance);
    partial void UpdateTransaction(Transaction instance);
    partial void DeleteTransaction(Transaction instance);
    partial void InsertUser_Role(User_Role instance);
    partial void UpdateUser_Role(User_Role instance);
    partial void DeleteUser_Role(User_Role instance);
    #endregion
		
		public BillingDataDataContext() : 
<<<<<<< local
				base(global::FinalUi.Properties.Settings.Default.BillingDatabaseConnectionString2, mappingSource)
=======
				base(global::FinalUi.Properties.Settings.Default.BillingDatabaseConnectionString3, mappingSource)
>>>>>>> other
		{
			OnCreated();
		}
		
		public BillingDataDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BillingDataDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BillingDataDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BillingDataDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Assignment> Assignments
		{
			get
			{
				return this.GetTable<Assignment>();
			}
		}
		
		public System.Data.Linq.Table<ZONE> ZONEs
		{
			get
			{
				return this.GetTable<ZONE>();
			}
		}
		
		public System.Data.Linq.Table<City> Cities
		{
			get
			{
				return this.GetTable<City>();
			}
		}
		
		public System.Data.Linq.Table<Client> Clients
		{
			get
			{
				return this.GetTable<Client>();
			}
		}
		
		public System.Data.Linq.Table<Employee> Employees
		{
			get
			{
				return this.GetTable<Employee>();
			}
		}
		
		public System.Data.Linq.Table<Rate> Rates
		{
			get
			{
				return this.GetTable<Rate>();
			}
		}
		
		public System.Data.Linq.Table<Role> Roles
		{
			get
			{
				return this.GetTable<Role>();
			}
		}
		
		public System.Data.Linq.Table<Roles_Permission> Roles_Permissions
		{
			get
			{
				return this.GetTable<Roles_Permission>();
			}
		}
		
		public System.Data.Linq.Table<RuntimeData> RuntimeDatas
		{
			get
			{
				return this.GetTable<RuntimeData>();
			}
		}
		
		public System.Data.Linq.Table<RuntimeMeta> RuntimeMetas
		{
			get
			{
				return this.GetTable<RuntimeMeta>();
			}
		}
		
		public System.Data.Linq.Table<Service> Services
		{
			get
			{
				return this.GetTable<Service>();
			}
		}
		
		public System.Data.Linq.Table<State> States
		{
			get
			{
				return this.GetTable<State>();
			}
		}
		
		public System.Data.Linq.Table<Transaction> Transactions
		{
			get
			{
				return this.GetTable<Transaction>();
			}
		}
		
		public System.Data.Linq.Table<User_Role> User_Roles
		{
			get
			{
				return this.GetTable<User_Role>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Assignment")]
	public partial class Assignment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _ServiceCode;
		
		private System.Nullable<char> _Dox;
		
		private string _ZoneCode;
		
		private string _RateCode;
		
		private EntityRef<ZONE> _ZONE;
		
		private EntityRef<Rate> _Rate;
		
		private EntityRef<Service> _Service;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnServiceCodeChanging(string value);
    partial void OnServiceCodeChanged();
    partial void OnDoxChanging(System.Nullable<char> value);
    partial void OnDoxChanged();
    partial void OnZoneCodeChanging(string value);
    partial void OnZoneCodeChanged();
    partial void OnRateCodeChanging(string value);
    partial void OnRateCodeChanged();
    #endregion
		
		public Assignment()
		{
			this._ZONE = default(EntityRef<ZONE>);
			this._Rate = default(EntityRef<Rate>);
			this._Service = default(EntityRef<Service>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceCode", DbType="NVarChar(255)")]
		public string ServiceCode
		{
			get
			{
				return this._ServiceCode;
			}
			set
			{
				if ((this._ServiceCode != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceCodeChanging(value);
					this.SendPropertyChanging();
					this._ServiceCode = value;
					this.SendPropertyChanged("ServiceCode");
					this.OnServiceCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dox", DbType="Char(1)")]
		public System.Nullable<char> Dox
		{
			get
			{
				return this._Dox;
			}
			set
			{
				if ((this._Dox != value))
				{
					this.OnDoxChanging(value);
					this.SendPropertyChanging();
					this._Dox = value;
					this.SendPropertyChanged("Dox");
					this.OnDoxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZoneCode", DbType="VarChar(30)")]
		public string ZoneCode
		{
			get
			{
				return this._ZoneCode;
			}
			set
			{
				if ((this._ZoneCode != value))
				{
					if (this._ZONE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnZoneCodeChanging(value);
					this.SendPropertyChanging();
					this._ZoneCode = value;
					this.SendPropertyChanged("ZoneCode");
					this.OnZoneCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RateCode", DbType="VarChar(50)")]
		public string RateCode
		{
			get
			{
				return this._RateCode;
			}
			set
			{
				if ((this._RateCode != value))
				{
					if (this._Rate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRateCodeChanging(value);
					this.SendPropertyChanging();
					this._RateCode = value;
					this.SendPropertyChanged("RateCode");
					this.OnRateCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ZONE_Assignment", Storage="_ZONE", ThisKey="ZoneCode", OtherKey="zcode", IsForeignKey=true)]
		public ZONE ZONE
		{
			get
			{
				return this._ZONE.Entity;
			}
			set
			{
				ZONE previousValue = this._ZONE.Entity;
				if (((previousValue != value) 
							|| (this._ZONE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ZONE.Entity = null;
						previousValue.Assignments.Remove(this);
					}
					this._ZONE.Entity = value;
					if ((value != null))
					{
						value.Assignments.Add(this);
						this._ZoneCode = value.zcode;
					}
					else
					{
						this._ZoneCode = default(string);
					}
					this.SendPropertyChanged("ZONE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rate_Assignment", Storage="_Rate", ThisKey="RateCode", OtherKey="RateCode", IsForeignKey=true)]
		public Rate Rate
		{
			get
			{
				return this._Rate.Entity;
			}
			set
			{
				Rate previousValue = this._Rate.Entity;
				if (((previousValue != value) 
							|| (this._Rate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Rate.Entity = null;
						previousValue.Assignments.Remove(this);
					}
					this._Rate.Entity = value;
					if ((value != null))
					{
						value.Assignments.Add(this);
						this._RateCode = value.RateCode;
					}
					else
					{
						this._RateCode = default(string);
					}
					this.SendPropertyChanged("Rate");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_Assignment", Storage="_Service", ThisKey="ServiceCode", OtherKey="SER_CODE", IsForeignKey=true)]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.Assignments.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.Assignments.Add(this);
						this._ServiceCode = value.SER_CODE;
					}
					else
					{
						this._ServiceCode = default(string);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ZONE")]
	public partial class ZONE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _zcode;
		
		private string _Zone_name;
		
		private System.Nullable<char> _Mode;
		
		private EntitySet<Assignment> _Assignments;
		
		private EntitySet<City> _Cities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnzcodeChanging(string value);
    partial void OnzcodeChanged();
    partial void OnZone_nameChanging(string value);
    partial void OnZone_nameChanged();
    partial void OnModeChanging(System.Nullable<char> value);
    partial void OnModeChanged();
    #endregion
		
		public ZONE()
		{
			this._Assignments = new EntitySet<Assignment>(new Action<Assignment>(this.attach_Assignments), new Action<Assignment>(this.detach_Assignments));
			this._Cities = new EntitySet<City>(new Action<City>(this.attach_Cities), new Action<City>(this.detach_Cities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zcode", DbType="VarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string zcode
		{
			get
			{
				return this._zcode;
			}
			set
			{
				if ((this._zcode != value))
				{
					this.OnzcodeChanging(value);
					this.SendPropertyChanging();
					this._zcode = value;
					this.SendPropertyChanged("zcode");
					this.OnzcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zone_name", DbType="VarChar(20)")]
		public string Zone_name
		{
			get
			{
				return this._Zone_name;
			}
			set
			{
				if ((this._Zone_name != value))
				{
					this.OnZone_nameChanging(value);
					this.SendPropertyChanging();
					this._Zone_name = value;
					this.SendPropertyChanged("Zone_name");
					this.OnZone_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mode", DbType="Char(1)")]
		public System.Nullable<char> Mode
		{
			get
			{
				return this._Mode;
			}
			set
			{
				if ((this._Mode != value))
				{
					this.OnModeChanging(value);
					this.SendPropertyChanging();
					this._Mode = value;
					this.SendPropertyChanged("Mode");
					this.OnModeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ZONE_Assignment", Storage="_Assignments", ThisKey="zcode", OtherKey="ZoneCode")]
		public EntitySet<Assignment> Assignments
		{
			get
			{
				return this._Assignments;
			}
			set
			{
				this._Assignments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ZONE_City", Storage="_Cities", ThisKey="zcode", OtherKey="ZONE")]
		public EntitySet<City> Cities
		{
			get
			{
				return this._Cities;
			}
			set
			{
				this._Cities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Assignments(Assignment entity)
		{
			this.SendPropertyChanging();
			entity.ZONE = this;
		}
		
		private void detach_Assignments(Assignment entity)
		{
			this.SendPropertyChanging();
			entity.ZONE = null;
		}
		
		private void attach_Cities(City entity)
		{
			this.SendPropertyChanging();
			entity.ZONE1 = this;
		}
		
		private void detach_Cities(City entity)
		{
			this.SendPropertyChanging();
			entity.ZONE1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.City")]
	public partial class City : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CITY_CODE;
		
		private string _CITY_DESC;
		
		private string _CITY_STATE;
		
		private string _CITY_STATUS;
		
		private string _CITY_STATE_DESC;
		
		private System.Nullable<System.DateTime> _MOD_DATE;
		
		private System.Nullable<double> _MOD_TIME;
		
		private string _NODEID;
		
		private string _USERID;
		
		private string _TRANS_STATUS;
		
		private string _CITY_COD;
		
		private string _CITY_CATG_PDN;
		
		private System.Nullable<double> _city_category;
		
		private string _ZONE;
		
		private EntityRef<ZONE> _ZONE1;
		
		private EntityRef<State> _State;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCITY_CODEChanging(string value);
    partial void OnCITY_CODEChanged();
    partial void OnCITY_DESCChanging(string value);
    partial void OnCITY_DESCChanged();
    partial void OnCITY_STATEChanging(string value);
    partial void OnCITY_STATEChanged();
    partial void OnCITY_STATUSChanging(string value);
    partial void OnCITY_STATUSChanged();
    partial void OnCITY_STATE_DESCChanging(string value);
    partial void OnCITY_STATE_DESCChanged();
    partial void OnMOD_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnMOD_DATEChanged();
    partial void OnMOD_TIMEChanging(System.Nullable<double> value);
    partial void OnMOD_TIMEChanged();
    partial void OnNODEIDChanging(string value);
    partial void OnNODEIDChanged();
    partial void OnUSERIDChanging(string value);
    partial void OnUSERIDChanged();
    partial void OnTRANS_STATUSChanging(string value);
    partial void OnTRANS_STATUSChanged();
    partial void OnCITY_CODChanging(string value);
    partial void OnCITY_CODChanged();
    partial void OnCITY_CATG_PDNChanging(string value);
    partial void OnCITY_CATG_PDNChanged();
    partial void Oncity_categoryChanging(System.Nullable<double> value);
    partial void Oncity_categoryChanged();
    partial void OnZONEChanging(string value);
    partial void OnZONEChanged();
    #endregion
		
		public City()
		{
			this._ZONE1 = default(EntityRef<ZONE>);
			this._State = default(EntityRef<State>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CITY_CODE", DbType="VarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CITY_CODE
		{
			get
			{
				return this._CITY_CODE;
			}
			set
			{
				if ((this._CITY_CODE != value))
				{
					this.OnCITY_CODEChanging(value);
					this.SendPropertyChanging();
					this._CITY_CODE = value;
					this.SendPropertyChanged("CITY_CODE");
					this.OnCITY_CODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CITY_DESC", DbType="NVarChar(255)")]
		public string CITY_DESC
		{
			get
			{
				return this._CITY_DESC;
			}
			set
			{
				if ((this._CITY_DESC != value))
				{
					this.OnCITY_DESCChanging(value);
					this.SendPropertyChanging();
					this._CITY_DESC = value;
					this.SendPropertyChanged("CITY_DESC");
					this.OnCITY_DESCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CITY_STATE", DbType="NVarChar(255)")]
		public string CITY_STATE
		{
			get
			{
				return this._CITY_STATE;
			}
			set
			{
				if ((this._CITY_STATE != value))
				{
					if (this._State.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCITY_STATEChanging(value);
					this.SendPropertyChanging();
					this._CITY_STATE = value;
					this.SendPropertyChanged("CITY_STATE");
					this.OnCITY_STATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CITY_STATUS", DbType="NVarChar(255)")]
		public string CITY_STATUS
		{
			get
			{
				return this._CITY_STATUS;
			}
			set
			{
				if ((this._CITY_STATUS != value))
				{
					this.OnCITY_STATUSChanging(value);
					this.SendPropertyChanging();
					this._CITY_STATUS = value;
					this.SendPropertyChanged("CITY_STATUS");
					this.OnCITY_STATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CITY_STATE_DESC", DbType="NVarChar(255)")]
		public string CITY_STATE_DESC
		{
			get
			{
				return this._CITY_STATE_DESC;
			}
			set
			{
				if ((this._CITY_STATE_DESC != value))
				{
					this.OnCITY_STATE_DESCChanging(value);
					this.SendPropertyChanging();
					this._CITY_STATE_DESC = value;
					this.SendPropertyChanged("CITY_STATE_DESC");
					this.OnCITY_STATE_DESCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MOD_DATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> MOD_DATE
		{
			get
			{
				return this._MOD_DATE;
			}
			set
			{
				if ((this._MOD_DATE != value))
				{
					this.OnMOD_DATEChanging(value);
					this.SendPropertyChanging();
					this._MOD_DATE = value;
					this.SendPropertyChanged("MOD_DATE");
					this.OnMOD_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MOD_TIME", DbType="Float")]
		public System.Nullable<double> MOD_TIME
		{
			get
			{
				return this._MOD_TIME;
			}
			set
			{
				if ((this._MOD_TIME != value))
				{
					this.OnMOD_TIMEChanging(value);
					this.SendPropertyChanging();
					this._MOD_TIME = value;
					this.SendPropertyChanged("MOD_TIME");
					this.OnMOD_TIMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NODEID", DbType="NVarChar(255)")]
		public string NODEID
		{
			get
			{
				return this._NODEID;
			}
			set
			{
				if ((this._NODEID != value))
				{
					this.OnNODEIDChanging(value);
					this.SendPropertyChanging();
					this._NODEID = value;
					this.SendPropertyChanged("NODEID");
					this.OnNODEIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USERID", DbType="NVarChar(255)")]
		public string USERID
		{
			get
			{
				return this._USERID;
			}
			set
			{
				if ((this._USERID != value))
				{
					this.OnUSERIDChanging(value);
					this.SendPropertyChanging();
					this._USERID = value;
					this.SendPropertyChanged("USERID");
					this.OnUSERIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRANS_STATUS", DbType="NVarChar(255)")]
		public string TRANS_STATUS
		{
			get
			{
				return this._TRANS_STATUS;
			}
			set
			{
				if ((this._TRANS_STATUS != value))
				{
					this.OnTRANS_STATUSChanging(value);
					this.SendPropertyChanging();
					this._TRANS_STATUS = value;
					this.SendPropertyChanged("TRANS_STATUS");
					this.OnTRANS_STATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CITY_COD", DbType="NVarChar(255)")]
		public string CITY_COD
		{
			get
			{
				return this._CITY_COD;
			}
			set
			{
				if ((this._CITY_COD != value))
				{
					this.OnCITY_CODChanging(value);
					this.SendPropertyChanging();
					this._CITY_COD = value;
					this.SendPropertyChanged("CITY_COD");
					this.OnCITY_CODChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CITY_CATG_PDN", DbType="NVarChar(255)")]
		public string CITY_CATG_PDN
		{
			get
			{
				return this._CITY_CATG_PDN;
			}
			set
			{
				if ((this._CITY_CATG_PDN != value))
				{
					this.OnCITY_CATG_PDNChanging(value);
					this.SendPropertyChanging();
					this._CITY_CATG_PDN = value;
					this.SendPropertyChanged("CITY_CATG_PDN");
					this.OnCITY_CATG_PDNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city_category", DbType="Float")]
		public System.Nullable<double> city_category
		{
			get
			{
				return this._city_category;
			}
			set
			{
				if ((this._city_category != value))
				{
					this.Oncity_categoryChanging(value);
					this.SendPropertyChanging();
					this._city_category = value;
					this.SendPropertyChanged("city_category");
					this.Oncity_categoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZONE", DbType="VarChar(30)")]
		public string ZONE
		{
			get
			{
				return this._ZONE;
			}
			set
			{
				if ((this._ZONE != value))
				{
					if (this._ZONE1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnZONEChanging(value);
					this.SendPropertyChanging();
					this._ZONE = value;
					this.SendPropertyChanged("ZONE");
					this.OnZONEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ZONE_City", Storage="_ZONE1", ThisKey="ZONE", OtherKey="zcode", IsForeignKey=true)]
		public ZONE ZONE1
		{
			get
			{
				return this._ZONE1.Entity;
			}
			set
			{
				ZONE previousValue = this._ZONE1.Entity;
				if (((previousValue != value) 
							|| (this._ZONE1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ZONE1.Entity = null;
						previousValue.Cities.Remove(this);
					}
					this._ZONE1.Entity = value;
					if ((value != null))
					{
						value.Cities.Add(this);
						this._ZONE = value.zcode;
					}
					else
					{
						this._ZONE = default(string);
					}
					this.SendPropertyChanged("ZONE1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="State_City", Storage="_State", ThisKey="CITY_STATE", OtherKey="STATE_CODE", IsForeignKey=true)]
		public State State
		{
			get
			{
				return this._State.Entity;
			}
			set
			{
				State previousValue = this._State.Entity;
				if (((previousValue != value) 
							|| (this._State.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._State.Entity = null;
						previousValue.Cities.Remove(this);
					}
					this._State.Entity = value;
					if ((value != null))
					{
						value.Cities.Add(this);
						this._CITY_STATE = value.STATE_CODE;
					}
					else
					{
						this._CITY_STATE = default(string);
					}
					this.SendPropertyChanged("State");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Client")]
	public partial class Client : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CLCODE;
		
		private string _CLNAME;
		
		private string _CPERSON;
		
		private string _ADDRESS;
		
		private string _STREET;
		
		private string _CITY_NAME;
		
		private string _CONTACTNO;
		
		private string _EMAILID;
		
		private System.Nullable<double> _FUEL;
		
		private System.Nullable<double> _OPBALANCE;
		
		private System.Nullable<double> _AMTADD;
		
		private System.Nullable<double> _AMTDISC;
		
		private string _STAX;
		
		private string _BRANCH;
		
		private System.Nullable<char> _CLEXT;
		
		private System.Nullable<double> _ADSDOX;
		
		private System.Nullable<double> _ADSNDOX;
		
		private System.Nullable<System.DateTime> _INTRODATE;
		
		private string _BOYCD;
		
		private string _BOYNAME;
		
		private string _APPTRF;
		
		private EntitySet<Transaction> _Transactions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCLCODEChanging(string value);
    partial void OnCLCODEChanged();
    partial void OnCLNAMEChanging(string value);
    partial void OnCLNAMEChanged();
    partial void OnCPERSONChanging(string value);
    partial void OnCPERSONChanged();
    partial void OnADDRESSChanging(string value);
    partial void OnADDRESSChanged();
    partial void OnSTREETChanging(string value);
    partial void OnSTREETChanged();
    partial void OnCITY_NAMEChanging(string value);
    partial void OnCITY_NAMEChanged();
    partial void OnCONTACTNOChanging(string value);
    partial void OnCONTACTNOChanged();
    partial void OnEMAILIDChanging(string value);
    partial void OnEMAILIDChanged();
    partial void OnFUELChanging(System.Nullable<double> value);
    partial void OnFUELChanged();
    partial void OnOPBALANCEChanging(System.Nullable<double> value);
    partial void OnOPBALANCEChanged();
    partial void OnAMTADDChanging(System.Nullable<double> value);
    partial void OnAMTADDChanged();
    partial void OnAMTDISCChanging(System.Nullable<double> value);
    partial void OnAMTDISCChanged();
    partial void OnSTAXChanging(string value);
    partial void OnSTAXChanged();
    partial void OnBRANCHChanging(string value);
    partial void OnBRANCHChanged();
    partial void OnCLEXTChanging(System.Nullable<char> value);
    partial void OnCLEXTChanged();
    partial void OnADSDOXChanging(System.Nullable<double> value);
    partial void OnADSDOXChanged();
    partial void OnADSNDOXChanging(System.Nullable<double> value);
    partial void OnADSNDOXChanged();
    partial void OnINTRODATEChanging(System.Nullable<System.DateTime> value);
    partial void OnINTRODATEChanged();
    partial void OnBOYCDChanging(string value);
    partial void OnBOYCDChanged();
    partial void OnBOYNAMEChanging(string value);
    partial void OnBOYNAMEChanged();
    partial void OnAPPTRFChanging(string value);
    partial void OnAPPTRFChanged();
    #endregion
		
		public Client()
		{
			this._Transactions = new EntitySet<Transaction>(new Action<Transaction>(this.attach_Transactions), new Action<Transaction>(this.detach_Transactions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CLCODE", DbType="VarChar(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CLCODE
		{
			get
			{
				return this._CLCODE;
			}
			set
			{
				if ((this._CLCODE != value))
				{
					this.OnCLCODEChanging(value);
					this.SendPropertyChanging();
					this._CLCODE = value;
					this.SendPropertyChanged("CLCODE");
					this.OnCLCODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CLNAME", DbType="VarChar(50)")]
		public string CLNAME
		{
			get
			{
				return this._CLNAME;
			}
			set
			{
				if ((this._CLNAME != value))
				{
					this.OnCLNAMEChanging(value);
					this.SendPropertyChanging();
					this._CLNAME = value;
					this.SendPropertyChanged("CLNAME");
					this.OnCLNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CPERSON", DbType="VarChar(50)")]
		public string CPERSON
		{
			get
			{
				return this._CPERSON;
			}
			set
			{
				if ((this._CPERSON != value))
				{
					this.OnCPERSONChanging(value);
					this.SendPropertyChanging();
					this._CPERSON = value;
					this.SendPropertyChanged("CPERSON");
					this.OnCPERSONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADDRESS", DbType="VarChar(100)")]
		public string ADDRESS
		{
			get
			{
				return this._ADDRESS;
			}
			set
			{
				if ((this._ADDRESS != value))
				{
					this.OnADDRESSChanging(value);
					this.SendPropertyChanging();
					this._ADDRESS = value;
					this.SendPropertyChanged("ADDRESS");
					this.OnADDRESSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STREET", DbType="VarChar(100)")]
		public string STREET
		{
			get
			{
				return this._STREET;
			}
			set
			{
				if ((this._STREET != value))
				{
					this.OnSTREETChanging(value);
					this.SendPropertyChanging();
					this._STREET = value;
					this.SendPropertyChanged("STREET");
					this.OnSTREETChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CITY_NAME", DbType="VarChar(20)")]
		public string CITY_NAME
		{
			get
			{
				return this._CITY_NAME;
			}
			set
			{
				if ((this._CITY_NAME != value))
				{
					this.OnCITY_NAMEChanging(value);
					this.SendPropertyChanging();
					this._CITY_NAME = value;
					this.SendPropertyChanged("CITY_NAME");
					this.OnCITY_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CONTACTNO", DbType="VarChar(20)")]
		public string CONTACTNO
		{
			get
			{
				return this._CONTACTNO;
			}
			set
			{
				if ((this._CONTACTNO != value))
				{
					this.OnCONTACTNOChanging(value);
					this.SendPropertyChanging();
					this._CONTACTNO = value;
					this.SendPropertyChanged("CONTACTNO");
					this.OnCONTACTNOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAILID", DbType="VarChar(50)")]
		public string EMAILID
		{
			get
			{
				return this._EMAILID;
			}
			set
			{
				if ((this._EMAILID != value))
				{
					this.OnEMAILIDChanging(value);
					this.SendPropertyChanging();
					this._EMAILID = value;
					this.SendPropertyChanged("EMAILID");
					this.OnEMAILIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FUEL", DbType="Float")]
		public System.Nullable<double> FUEL
		{
			get
			{
				return this._FUEL;
			}
			set
			{
				if ((this._FUEL != value))
				{
					this.OnFUELChanging(value);
					this.SendPropertyChanging();
					this._FUEL = value;
					this.SendPropertyChanged("FUEL");
					this.OnFUELChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OPBALANCE", DbType="Float")]
		public System.Nullable<double> OPBALANCE
		{
			get
			{
				return this._OPBALANCE;
			}
			set
			{
				if ((this._OPBALANCE != value))
				{
					this.OnOPBALANCEChanging(value);
					this.SendPropertyChanging();
					this._OPBALANCE = value;
					this.SendPropertyChanged("OPBALANCE");
					this.OnOPBALANCEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AMTADD", DbType="Float")]
		public System.Nullable<double> AMTADD
		{
			get
			{
				return this._AMTADD;
			}
			set
			{
				if ((this._AMTADD != value))
				{
					this.OnAMTADDChanging(value);
					this.SendPropertyChanging();
					this._AMTADD = value;
					this.SendPropertyChanged("AMTADD");
					this.OnAMTADDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AMTDISC", DbType="Float")]
		public System.Nullable<double> AMTDISC
		{
			get
			{
				return this._AMTDISC;
			}
			set
			{
				if ((this._AMTDISC != value))
				{
					this.OnAMTDISCChanging(value);
					this.SendPropertyChanging();
					this._AMTDISC = value;
					this.SendPropertyChanged("AMTDISC");
					this.OnAMTDISCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STAX", DbType="Char(2)")]
		public string STAX
		{
			get
			{
				return this._STAX;
			}
			set
			{
				if ((this._STAX != value))
				{
					this.OnSTAXChanging(value);
					this.SendPropertyChanging();
					this._STAX = value;
					this.SendPropertyChanged("STAX");
					this.OnSTAXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BRANCH", DbType="VarChar(50)")]
		public string BRANCH
		{
			get
			{
				return this._BRANCH;
			}
			set
			{
				if ((this._BRANCH != value))
				{
					this.OnBRANCHChanging(value);
					this.SendPropertyChanging();
					this._BRANCH = value;
					this.SendPropertyChanged("BRANCH");
					this.OnBRANCHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CLEXT", DbType="Char(1)")]
		public System.Nullable<char> CLEXT
		{
			get
			{
				return this._CLEXT;
			}
			set
			{
				if ((this._CLEXT != value))
				{
					this.OnCLEXTChanging(value);
					this.SendPropertyChanging();
					this._CLEXT = value;
					this.SendPropertyChanged("CLEXT");
					this.OnCLEXTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADSDOX", DbType="Float")]
		public System.Nullable<double> ADSDOX
		{
			get
			{
				return this._ADSDOX;
			}
			set
			{
				if ((this._ADSDOX != value))
				{
					this.OnADSDOXChanging(value);
					this.SendPropertyChanging();
					this._ADSDOX = value;
					this.SendPropertyChanged("ADSDOX");
					this.OnADSDOXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADSNDOX", DbType="Float")]
		public System.Nullable<double> ADSNDOX
		{
			get
			{
				return this._ADSNDOX;
			}
			set
			{
				if ((this._ADSNDOX != value))
				{
					this.OnADSNDOXChanging(value);
					this.SendPropertyChanging();
					this._ADSNDOX = value;
					this.SendPropertyChanged("ADSNDOX");
					this.OnADSNDOXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INTRODATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> INTRODATE
		{
			get
			{
				return this._INTRODATE;
			}
			set
			{
				if ((this._INTRODATE != value))
				{
					this.OnINTRODATEChanging(value);
					this.SendPropertyChanging();
					this._INTRODATE = value;
					this.SendPropertyChanged("INTRODATE");
					this.OnINTRODATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BOYCD", DbType="Char(10)")]
		public string BOYCD
		{
			get
			{
				return this._BOYCD;
			}
			set
			{
				if ((this._BOYCD != value))
				{
					this.OnBOYCDChanging(value);
					this.SendPropertyChanging();
					this._BOYCD = value;
					this.SendPropertyChanged("BOYCD");
					this.OnBOYCDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BOYNAME", DbType="VarChar(50)")]
		public string BOYNAME
		{
			get
			{
				return this._BOYNAME;
			}
			set
			{
				if ((this._BOYNAME != value))
				{
					this.OnBOYNAMEChanging(value);
					this.SendPropertyChanging();
					this._BOYNAME = value;
					this.SendPropertyChanged("BOYNAME");
					this.OnBOYNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_APPTRF", DbType="VarChar(6)")]
		public string APPTRF
		{
			get
			{
				return this._APPTRF;
			}
			set
			{
				if ((this._APPTRF != value))
				{
					this.OnAPPTRFChanging(value);
					this.SendPropertyChanging();
					this._APPTRF = value;
					this.SendPropertyChanged("APPTRF");
					this.OnAPPTRFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_Transaction", Storage="_Transactions", ThisKey="CLCODE", OtherKey="CustCode")]
		public EntitySet<Transaction> Transactions
		{
			get
			{
				return this._Transactions;
			}
			set
			{
				this._Transactions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Transactions(Transaction entity)
		{
			this.SendPropertyChanging();
			entity.Client = this;
		}
		
		private void detach_Transactions(Transaction entity)
		{
			this.SendPropertyChanging();
			entity.Client = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Employee")]
	public partial class Employee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _Name;
		
		private System.Nullable<char> _Gender;
		
		private string _EMPCode;
		
		private string _UserName;
		
		private string _Password;
		
		private EntitySet<Transaction> _Transactions;
		
		private EntitySet<User_Role> _User_Roles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnGenderChanging(System.Nullable<char> value);
    partial void OnGenderChanged();
    partial void OnEMPCodeChanging(string value);
    partial void OnEMPCodeChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    #endregion
		
		public Employee()
		{
			this._Transactions = new EntitySet<Transaction>(new Action<Transaction>(this.attach_Transactions), new Action<Transaction>(this.detach_Transactions));
			this._User_Roles = new EntitySet<User_Role>(new Action<User_Role>(this.attach_User_Roles), new Action<User_Role>(this.detach_User_Roles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="Char(1)")]
		public System.Nullable<char> Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMPCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string EMPCode
		{
			get
			{
				return this._EMPCode;
			}
			set
			{
				if ((this._EMPCode != value))
				{
					this.OnEMPCodeChanging(value);
					this.SendPropertyChanging();
					this._EMPCode = value;
					this.SendPropertyChanged("EMPCode");
					this.OnEMPCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Transaction", Storage="_Transactions", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<Transaction> Transactions
		{
			get
			{
				return this._Transactions;
			}
			set
			{
				this._Transactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_User_Role", Storage="_User_Roles", ThisKey="Id", OtherKey="EmployeeId")]
		public EntitySet<User_Role> User_Roles
		{
			get
			{
				return this._User_Roles;
			}
			set
			{
				this._User_Roles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Transactions(Transaction entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_Transactions(Transaction entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_User_Roles(User_Role entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_User_Roles(User_Role entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Rate")]
	public partial class Rate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _RateXML;
		
		private string _RateCode;
		
		private EntitySet<Assignment> _Assignments;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRateXMLChanging(string value);
    partial void OnRateXMLChanged();
    partial void OnRateCodeChanging(string value);
    partial void OnRateCodeChanged();
    #endregion
		
		public Rate()
		{
			this._Assignments = new EntitySet<Assignment>(new Action<Assignment>(this.attach_Assignments), new Action<Assignment>(this.detach_Assignments));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RateXML", DbType="VarChar(MAX)")]
		public string RateXML
		{
			get
			{
				return this._RateXML;
			}
			set
			{
				if ((this._RateXML != value))
				{
					this.OnRateXMLChanging(value);
					this.SendPropertyChanging();
					this._RateXML = value;
					this.SendPropertyChanged("RateXML");
					this.OnRateXMLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RateCode", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string RateCode
		{
			get
			{
				return this._RateCode;
			}
			set
			{
				if ((this._RateCode != value))
				{
					this.OnRateCodeChanging(value);
					this.SendPropertyChanging();
					this._RateCode = value;
					this.SendPropertyChanged("RateCode");
					this.OnRateCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rate_Assignment", Storage="_Assignments", ThisKey="RateCode", OtherKey="RateCode")]
		public EntitySet<Assignment> Assignments
		{
			get
			{
				return this._Assignments;
			}
			set
			{
				this._Assignments.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Assignments(Assignment entity)
		{
			this.SendPropertyChanging();
			entity.Rate = this;
		}
		
		private void detach_Assignments(Assignment entity)
		{
			this.SendPropertyChanging();
			entity.Rate = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Roles")]
	public partial class Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _Name;
		
		private EntitySet<Roles_Permission> _Roles_Permissions;
		
		private EntitySet<User_Role> _User_Roles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Role()
		{
			this._Roles_Permissions = new EntitySet<Roles_Permission>(new Action<Roles_Permission>(this.attach_Roles_Permissions), new Action<Roles_Permission>(this.detach_Roles_Permissions));
			this._User_Roles = new EntitySet<User_Role>(new Action<User_Role>(this.attach_User_Roles), new Action<User_Role>(this.detach_User_Roles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_Roles_Permission", Storage="_Roles_Permissions", ThisKey="Id", OtherKey="Role_Id")]
		public EntitySet<Roles_Permission> Roles_Permissions
		{
			get
			{
				return this._Roles_Permissions;
			}
			set
			{
				this._Roles_Permissions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_User_Role", Storage="_User_Roles", ThisKey="Id", OtherKey="RoleId")]
		public EntitySet<User_Role> User_Roles
		{
			get
			{
				return this._User_Roles;
			}
			set
			{
				this._User_Roles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Roles_Permissions(Roles_Permission entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_Roles_Permissions(Roles_Permission entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
		
		private void attach_User_Roles(User_Role entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_User_Roles(User_Role entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Roles_Permissions")]
	public partial class Roles_Permission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Guid _Role_Id;
		
		private string _Permission;
		
		private EntityRef<Role> _Role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnRole_IdChanging(System.Guid value);
    partial void OnRole_IdChanged();
    partial void OnPermissionChanging(string value);
    partial void OnPermissionChanged();
    #endregion
		
		public Roles_Permission()
		{
			this._Role = default(EntityRef<Role>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role_Id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Role_Id
		{
			get
			{
				return this._Role_Id;
			}
			set
			{
				if ((this._Role_Id != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRole_IdChanging(value);
					this.SendPropertyChanging();
					this._Role_Id = value;
					this.SendPropertyChanged("Role_Id");
					this.OnRole_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Permission", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Permission
		{
			get
			{
				return this._Permission;
			}
			set
			{
				if ((this._Permission != value))
				{
					this.OnPermissionChanging(value);
					this.SendPropertyChanging();
					this._Permission = value;
					this.SendPropertyChanged("Permission");
					this.OnPermissionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_Roles_Permission", Storage="_Role", ThisKey="Role_Id", OtherKey="Id", IsForeignKey=true)]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.Roles_Permissions.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.Roles_Permissions.Add(this);
						this._Role_Id = value.Id;
					}
					else
					{
						this._Role_Id = default(System.Guid);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RuntimeData")]
	public partial class RuntimeData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _ConsignmentNo;
		
		private double _Weight;
		
		private string _Type;
		
		private string _Destination;
		
		private string _Mode;
		
		private decimal _DestinationPin;
		
		private System.DateTime _BookingDate;
		
		private decimal _Amount;
		
		private char _DOX;
		
		private double _ServiceTax;
		
		private double _SplDisc;
		
		private string _InvoiceNo;
		
		private System.DateTime _InvoiceDate;
		
		private System.Nullable<System.Guid> _EmpId;
		
		private System.Nullable<decimal> _FrAmount;
		
		private System.Nullable<double> _FrWeight;
		
		private System.Guid _TransactionId;
		
		private string _CustCode;
		
		private string _TransMF_No;
		
		private EntitySet<RuntimeMeta> _RuntimeMetas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnConsignmentNoChanging(string value);
    partial void OnConsignmentNoChanged();
    partial void OnWeightChanging(double value);
    partial void OnWeightChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnDestinationChanging(string value);
    partial void OnDestinationChanged();
    partial void OnModeChanging(string value);
    partial void OnModeChanged();
    partial void OnDestinationPinChanging(decimal value);
    partial void OnDestinationPinChanged();
    partial void OnBookingDateChanging(System.DateTime value);
    partial void OnBookingDateChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnDOXChanging(char value);
    partial void OnDOXChanged();
    partial void OnServiceTaxChanging(double value);
    partial void OnServiceTaxChanged();
    partial void OnSplDiscChanging(double value);
    partial void OnSplDiscChanged();
    partial void OnInvoiceNoChanging(string value);
    partial void OnInvoiceNoChanged();
    partial void OnInvoiceDateChanging(System.DateTime value);
    partial void OnInvoiceDateChanged();
    partial void OnEmpIdChanging(System.Nullable<System.Guid> value);
    partial void OnEmpIdChanged();
    partial void OnFrAmountChanging(System.Nullable<decimal> value);
    partial void OnFrAmountChanged();
    partial void OnFrWeightChanging(System.Nullable<double> value);
    partial void OnFrWeightChanged();
    partial void OnTransactionIdChanging(System.Guid value);
    partial void OnTransactionIdChanged();
    partial void OnCustCodeChanging(string value);
    partial void OnCustCodeChanged();
    partial void OnTransMF_NoChanging(string value);
    partial void OnTransMF_NoChanged();
    #endregion
		
		public RuntimeData()
		{
			this._RuntimeMetas = new EntitySet<RuntimeMeta>(new Action<RuntimeMeta>(this.attach_RuntimeMetas), new Action<RuntimeMeta>(this.detach_RuntimeMetas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsignmentNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ConsignmentNo
		{
			get
			{
				return this._ConsignmentNo;
			}
			set
			{
				if ((this._ConsignmentNo != value))
				{
					this.OnConsignmentNoChanging(value);
					this.SendPropertyChanging();
					this._ConsignmentNo = value;
					this.SendPropertyChanged("ConsignmentNo");
					this.OnConsignmentNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Float NOT NULL")]
		public double Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NChar(25)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Destination", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Destination
		{
			get
			{
				return this._Destination;
			}
			set
			{
				if ((this._Destination != value))
				{
					this.OnDestinationChanging(value);
					this.SendPropertyChanging();
					this._Destination = value;
					this.SendPropertyChanged("Destination");
					this.OnDestinationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mode", DbType="NChar(25) NOT NULL", CanBeNull=false)]
		public string Mode
		{
			get
			{
				return this._Mode;
			}
			set
			{
				if ((this._Mode != value))
				{
					this.OnModeChanging(value);
					this.SendPropertyChanging();
					this._Mode = value;
					this.SendPropertyChanged("Mode");
					this.OnModeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DestinationPin", DbType="Decimal(18,0) NOT NULL")]
		public decimal DestinationPin
		{
			get
			{
				return this._DestinationPin;
			}
			set
			{
				if ((this._DestinationPin != value))
				{
					this.OnDestinationPinChanging(value);
					this.SendPropertyChanging();
					this._DestinationPin = value;
					this.SendPropertyChanged("DestinationPin");
					this.OnDestinationPinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookingDate", DbType="Date NOT NULL")]
		public System.DateTime BookingDate
		{
			get
			{
				return this._BookingDate;
			}
			set
			{
				if ((this._BookingDate != value))
				{
					this.OnBookingDateChanging(value);
					this.SendPropertyChanging();
					this._BookingDate = value;
					this.SendPropertyChanged("BookingDate");
					this.OnBookingDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,2) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOX", DbType="Char(1) NOT NULL")]
		public char DOX
		{
			get
			{
				return this._DOX;
			}
			set
			{
				if ((this._DOX != value))
				{
					this.OnDOXChanging(value);
					this.SendPropertyChanging();
					this._DOX = value;
					this.SendPropertyChanged("DOX");
					this.OnDOXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceTax", DbType="Float NOT NULL")]
		public double ServiceTax
		{
			get
			{
				return this._ServiceTax;
			}
			set
			{
				if ((this._ServiceTax != value))
				{
					this.OnServiceTaxChanging(value);
					this.SendPropertyChanging();
					this._ServiceTax = value;
					this.SendPropertyChanged("ServiceTax");
					this.OnServiceTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SplDisc", DbType="Float NOT NULL")]
		public double SplDisc
		{
			get
			{
				return this._SplDisc;
			}
			set
			{
				if ((this._SplDisc != value))
				{
					this.OnSplDiscChanging(value);
					this.SendPropertyChanging();
					this._SplDisc = value;
					this.SendPropertyChanged("SplDisc");
					this.OnSplDiscChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string InvoiceNo
		{
			get
			{
				return this._InvoiceNo;
			}
			set
			{
				if ((this._InvoiceNo != value))
				{
					this.OnInvoiceNoChanging(value);
					this.SendPropertyChanging();
					this._InvoiceNo = value;
					this.SendPropertyChanged("InvoiceNo");
					this.OnInvoiceNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceDate", DbType="Date NOT NULL")]
		public System.DateTime InvoiceDate
		{
			get
			{
				return this._InvoiceDate;
			}
			set
			{
				if ((this._InvoiceDate != value))
				{
					this.OnInvoiceDateChanging(value);
					this.SendPropertyChanging();
					this._InvoiceDate = value;
					this.SendPropertyChanged("InvoiceDate");
					this.OnInvoiceDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> EmpId
		{
			get
			{
				return this._EmpId;
			}
			set
			{
				if ((this._EmpId != value))
				{
					this.OnEmpIdChanging(value);
					this.SendPropertyChanging();
					this._EmpId = value;
					this.SendPropertyChanged("EmpId");
					this.OnEmpIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FrAmount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> FrAmount
		{
			get
			{
				return this._FrAmount;
			}
			set
			{
				if ((this._FrAmount != value))
				{
					this.OnFrAmountChanging(value);
					this.SendPropertyChanging();
					this._FrAmount = value;
					this.SendPropertyChanged("FrAmount");
					this.OnFrAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FrWeight", DbType="Float")]
		public System.Nullable<double> FrWeight
		{
			get
			{
				return this._FrWeight;
			}
			set
			{
				if ((this._FrWeight != value))
				{
					this.OnFrWeightChanging(value);
					this.SendPropertyChanging();
					this._FrWeight = value;
					this.SendPropertyChanged("FrWeight");
					this.OnFrWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid TransactionId
		{
			get
			{
				return this._TransactionId;
			}
			set
			{
				if ((this._TransactionId != value))
				{
					this.OnTransactionIdChanging(value);
					this.SendPropertyChanging();
					this._TransactionId = value;
					this.SendPropertyChanged("TransactionId");
					this.OnTransactionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustCode", DbType="VarChar(10)")]
		public string CustCode
		{
			get
			{
				return this._CustCode;
			}
			set
			{
				if ((this._CustCode != value))
				{
					this.OnCustCodeChanging(value);
					this.SendPropertyChanging();
					this._CustCode = value;
					this.SendPropertyChanged("CustCode");
					this.OnCustCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransMF_No", DbType="VarChar(50)")]
		public string TransMF_No
		{
			get
			{
				return this._TransMF_No;
			}
			set
			{
				if ((this._TransMF_No != value))
				{
					this.OnTransMF_NoChanging(value);
					this.SendPropertyChanging();
					this._TransMF_No = value;
					this.SendPropertyChanged("TransMF_No");
					this.OnTransMF_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RuntimeData_RuntimeMeta", Storage="_RuntimeMetas", ThisKey="Id", OtherKey="RuntimeDataID")]
		public EntitySet<RuntimeMeta> RuntimeMetas
		{
			get
			{
				return this._RuntimeMetas;
			}
			set
			{
				this._RuntimeMetas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RuntimeMetas(RuntimeMeta entity)
		{
			this.SendPropertyChanging();
			entity.RuntimeData = this;
		}
		
		private void detach_RuntimeMetas(RuntimeMeta entity)
		{
			this.SendPropertyChanging();
			entity.RuntimeData = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RuntimeMeta")]
	public partial class RuntimeMeta : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Guid _RuntimeDataID;
		
		private string _UserName;
		
		private int _SheetNo;
		
		private EntityRef<RuntimeData> _RuntimeData;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnRuntimeDataIDChanging(System.Guid value);
    partial void OnRuntimeDataIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnSheetNoChanging(int value);
    partial void OnSheetNoChanged();
    #endregion
		
		public RuntimeMeta()
		{
			this._RuntimeData = default(EntityRef<RuntimeData>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RuntimeDataID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid RuntimeDataID
		{
			get
			{
				return this._RuntimeDataID;
			}
			set
			{
				if ((this._RuntimeDataID != value))
				{
					if (this._RuntimeData.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRuntimeDataIDChanging(value);
					this.SendPropertyChanging();
					this._RuntimeDataID = value;
					this.SendPropertyChanged("RuntimeDataID");
					this.OnRuntimeDataIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SheetNo", DbType="Int NOT NULL")]
		public int SheetNo
		{
			get
			{
				return this._SheetNo;
			}
			set
			{
				if ((this._SheetNo != value))
				{
					this.OnSheetNoChanging(value);
					this.SendPropertyChanging();
					this._SheetNo = value;
					this.SendPropertyChanged("SheetNo");
					this.OnSheetNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RuntimeData_RuntimeMeta", Storage="_RuntimeData", ThisKey="RuntimeDataID", OtherKey="Id", IsForeignKey=true)]
		public RuntimeData RuntimeData
		{
			get
			{
				return this._RuntimeData.Entity;
			}
			set
			{
				RuntimeData previousValue = this._RuntimeData.Entity;
				if (((previousValue != value) 
							|| (this._RuntimeData.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RuntimeData.Entity = null;
						previousValue.RuntimeMetas.Remove(this);
					}
					this._RuntimeData.Entity = value;
					if ((value != null))
					{
						value.RuntimeMetas.Add(this);
						this._RuntimeDataID = value.Id;
					}
					else
					{
						this._RuntimeDataID = default(System.Guid);
					}
					this.SendPropertyChanged("RuntimeData");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Service")]
	public partial class Service : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SER_CODE;
		
		private string _SER_DESC;
		
		private string _SER_TYPE_STATUS;
		
		private System.Nullable<System.DateTime> _MOD_DATE;
		
		private System.Nullable<double> _MOD_TIME;
		
		private string _NODEID;
		
		private string _USERID;
		
		private string _TRANS_STATUS;
		
		private System.Nullable<double> _SER_DIV;
		
		private string _MODE_TYPE;
		
		private string _SER_BILLING;
		
		private System.Nullable<double> _PRODUCT_ID;
		
		private string _SER_HIERARCHY_ID;
		
		private EntitySet<Assignment> _Assignments;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSER_CODEChanging(string value);
    partial void OnSER_CODEChanged();
    partial void OnSER_DESCChanging(string value);
    partial void OnSER_DESCChanged();
    partial void OnSER_TYPE_STATUSChanging(string value);
    partial void OnSER_TYPE_STATUSChanged();
    partial void OnMOD_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnMOD_DATEChanged();
    partial void OnMOD_TIMEChanging(System.Nullable<double> value);
    partial void OnMOD_TIMEChanged();
    partial void OnNODEIDChanging(string value);
    partial void OnNODEIDChanged();
    partial void OnUSERIDChanging(string value);
    partial void OnUSERIDChanged();
    partial void OnTRANS_STATUSChanging(string value);
    partial void OnTRANS_STATUSChanged();
    partial void OnSER_DIVChanging(System.Nullable<double> value);
    partial void OnSER_DIVChanged();
    partial void OnMODE_TYPEChanging(string value);
    partial void OnMODE_TYPEChanged();
    partial void OnSER_BILLINGChanging(string value);
    partial void OnSER_BILLINGChanged();
    partial void OnPRODUCT_IDChanging(System.Nullable<double> value);
    partial void OnPRODUCT_IDChanged();
    partial void OnSER_HIERARCHY_IDChanging(string value);
    partial void OnSER_HIERARCHY_IDChanged();
    #endregion
		
		public Service()
		{
			this._Assignments = new EntitySet<Assignment>(new Action<Assignment>(this.attach_Assignments), new Action<Assignment>(this.detach_Assignments));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SER_CODE", DbType="NVarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SER_CODE
		{
			get
			{
				return this._SER_CODE;
			}
			set
			{
				if ((this._SER_CODE != value))
				{
					this.OnSER_CODEChanging(value);
					this.SendPropertyChanging();
					this._SER_CODE = value;
					this.SendPropertyChanged("SER_CODE");
					this.OnSER_CODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SER_DESC", DbType="NVarChar(255)")]
		public string SER_DESC
		{
			get
			{
				return this._SER_DESC;
			}
			set
			{
				if ((this._SER_DESC != value))
				{
					this.OnSER_DESCChanging(value);
					this.SendPropertyChanging();
					this._SER_DESC = value;
					this.SendPropertyChanged("SER_DESC");
					this.OnSER_DESCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SER_TYPE_STATUS", DbType="NVarChar(255)")]
		public string SER_TYPE_STATUS
		{
			get
			{
				return this._SER_TYPE_STATUS;
			}
			set
			{
				if ((this._SER_TYPE_STATUS != value))
				{
					this.OnSER_TYPE_STATUSChanging(value);
					this.SendPropertyChanging();
					this._SER_TYPE_STATUS = value;
					this.SendPropertyChanged("SER_TYPE_STATUS");
					this.OnSER_TYPE_STATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MOD_DATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> MOD_DATE
		{
			get
			{
				return this._MOD_DATE;
			}
			set
			{
				if ((this._MOD_DATE != value))
				{
					this.OnMOD_DATEChanging(value);
					this.SendPropertyChanging();
					this._MOD_DATE = value;
					this.SendPropertyChanged("MOD_DATE");
					this.OnMOD_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MOD_TIME", DbType="Float")]
		public System.Nullable<double> MOD_TIME
		{
			get
			{
				return this._MOD_TIME;
			}
			set
			{
				if ((this._MOD_TIME != value))
				{
					this.OnMOD_TIMEChanging(value);
					this.SendPropertyChanging();
					this._MOD_TIME = value;
					this.SendPropertyChanged("MOD_TIME");
					this.OnMOD_TIMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NODEID", DbType="NVarChar(255)")]
		public string NODEID
		{
			get
			{
				return this._NODEID;
			}
			set
			{
				if ((this._NODEID != value))
				{
					this.OnNODEIDChanging(value);
					this.SendPropertyChanging();
					this._NODEID = value;
					this.SendPropertyChanged("NODEID");
					this.OnNODEIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USERID", DbType="NVarChar(255)")]
		public string USERID
		{
			get
			{
				return this._USERID;
			}
			set
			{
				if ((this._USERID != value))
				{
					this.OnUSERIDChanging(value);
					this.SendPropertyChanging();
					this._USERID = value;
					this.SendPropertyChanged("USERID");
					this.OnUSERIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRANS_STATUS", DbType="NVarChar(255)")]
		public string TRANS_STATUS
		{
			get
			{
				return this._TRANS_STATUS;
			}
			set
			{
				if ((this._TRANS_STATUS != value))
				{
					this.OnTRANS_STATUSChanging(value);
					this.SendPropertyChanging();
					this._TRANS_STATUS = value;
					this.SendPropertyChanged("TRANS_STATUS");
					this.OnTRANS_STATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SER_DIV", DbType="Float")]
		public System.Nullable<double> SER_DIV
		{
			get
			{
				return this._SER_DIV;
			}
			set
			{
				if ((this._SER_DIV != value))
				{
					this.OnSER_DIVChanging(value);
					this.SendPropertyChanging();
					this._SER_DIV = value;
					this.SendPropertyChanged("SER_DIV");
					this.OnSER_DIVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MODE_TYPE", DbType="NVarChar(255)")]
		public string MODE_TYPE
		{
			get
			{
				return this._MODE_TYPE;
			}
			set
			{
				if ((this._MODE_TYPE != value))
				{
					this.OnMODE_TYPEChanging(value);
					this.SendPropertyChanging();
					this._MODE_TYPE = value;
					this.SendPropertyChanged("MODE_TYPE");
					this.OnMODE_TYPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SER_BILLING", DbType="NVarChar(255)")]
		public string SER_BILLING
		{
			get
			{
				return this._SER_BILLING;
			}
			set
			{
				if ((this._SER_BILLING != value))
				{
					this.OnSER_BILLINGChanging(value);
					this.SendPropertyChanging();
					this._SER_BILLING = value;
					this.SendPropertyChanged("SER_BILLING");
					this.OnSER_BILLINGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRODUCT_ID", DbType="Float")]
		public System.Nullable<double> PRODUCT_ID
		{
			get
			{
				return this._PRODUCT_ID;
			}
			set
			{
				if ((this._PRODUCT_ID != value))
				{
					this.OnPRODUCT_IDChanging(value);
					this.SendPropertyChanging();
					this._PRODUCT_ID = value;
					this.SendPropertyChanged("PRODUCT_ID");
					this.OnPRODUCT_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SER_HIERARCHY_ID", DbType="NVarChar(255)")]
		public string SER_HIERARCHY_ID
		{
			get
			{
				return this._SER_HIERARCHY_ID;
			}
			set
			{
				if ((this._SER_HIERARCHY_ID != value))
				{
					this.OnSER_HIERARCHY_IDChanging(value);
					this.SendPropertyChanging();
					this._SER_HIERARCHY_ID = value;
					this.SendPropertyChanged("SER_HIERARCHY_ID");
					this.OnSER_HIERARCHY_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_Assignment", Storage="_Assignments", ThisKey="SER_CODE", OtherKey="ServiceCode")]
		public EntitySet<Assignment> Assignments
		{
			get
			{
				return this._Assignments;
			}
			set
			{
				this._Assignments.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Assignments(Assignment entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_Assignments(Assignment entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.State")]
	public partial class State : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _STATE_CODE;
		
		private string _STATE_DESC;
		
		private string _STATE_COUNTRY;
		
		private string _STATE_CAPITAL;
		
		private string _STATE_MAP;
		
		private System.Nullable<double> _STATE_POPULATION;
		
		private string _STATE_IMP_AREA;
		
		private string _STATE_INDUSTRIES;
		
		private string _STATE_ZO;
		
		private string _STATE_STATUS;
		
		private System.Nullable<System.DateTime> _MOD_DATE;
		
		private System.Nullable<double> _MOD_TIME;
		
		private string _NODEID;
		
		private string _USERID;
		
		private string _TRANS_STATUS;
		
		private string _STATE_RO;
		
		private EntitySet<City> _Cities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSTATE_CODEChanging(string value);
    partial void OnSTATE_CODEChanged();
    partial void OnSTATE_DESCChanging(string value);
    partial void OnSTATE_DESCChanged();
    partial void OnSTATE_COUNTRYChanging(string value);
    partial void OnSTATE_COUNTRYChanged();
    partial void OnSTATE_CAPITALChanging(string value);
    partial void OnSTATE_CAPITALChanged();
    partial void OnSTATE_MAPChanging(string value);
    partial void OnSTATE_MAPChanged();
    partial void OnSTATE_POPULATIONChanging(System.Nullable<double> value);
    partial void OnSTATE_POPULATIONChanged();
    partial void OnSTATE_IMP_AREAChanging(string value);
    partial void OnSTATE_IMP_AREAChanged();
    partial void OnSTATE_INDUSTRIESChanging(string value);
    partial void OnSTATE_INDUSTRIESChanged();
    partial void OnSTATE_ZOChanging(string value);
    partial void OnSTATE_ZOChanged();
    partial void OnSTATE_STATUSChanging(string value);
    partial void OnSTATE_STATUSChanged();
    partial void OnMOD_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnMOD_DATEChanged();
    partial void OnMOD_TIMEChanging(System.Nullable<double> value);
    partial void OnMOD_TIMEChanged();
    partial void OnNODEIDChanging(string value);
    partial void OnNODEIDChanged();
    partial void OnUSERIDChanging(string value);
    partial void OnUSERIDChanged();
    partial void OnTRANS_STATUSChanging(string value);
    partial void OnTRANS_STATUSChanged();
    partial void OnSTATE_ROChanging(string value);
    partial void OnSTATE_ROChanged();
    #endregion
		
		public State()
		{
			this._Cities = new EntitySet<City>(new Action<City>(this.attach_Cities), new Action<City>(this.detach_Cities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATE_CODE", DbType="NVarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string STATE_CODE
		{
			get
			{
				return this._STATE_CODE;
			}
			set
			{
				if ((this._STATE_CODE != value))
				{
					this.OnSTATE_CODEChanging(value);
					this.SendPropertyChanging();
					this._STATE_CODE = value;
					this.SendPropertyChanged("STATE_CODE");
					this.OnSTATE_CODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATE_DESC", DbType="NVarChar(255)")]
		public string STATE_DESC
		{
			get
			{
				return this._STATE_DESC;
			}
			set
			{
				if ((this._STATE_DESC != value))
				{
					this.OnSTATE_DESCChanging(value);
					this.SendPropertyChanging();
					this._STATE_DESC = value;
					this.SendPropertyChanged("STATE_DESC");
					this.OnSTATE_DESCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATE_COUNTRY", DbType="NVarChar(255)")]
		public string STATE_COUNTRY
		{
			get
			{
				return this._STATE_COUNTRY;
			}
			set
			{
				if ((this._STATE_COUNTRY != value))
				{
					this.OnSTATE_COUNTRYChanging(value);
					this.SendPropertyChanging();
					this._STATE_COUNTRY = value;
					this.SendPropertyChanged("STATE_COUNTRY");
					this.OnSTATE_COUNTRYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATE_CAPITAL", DbType="NVarChar(255)")]
		public string STATE_CAPITAL
		{
			get
			{
				return this._STATE_CAPITAL;
			}
			set
			{
				if ((this._STATE_CAPITAL != value))
				{
					this.OnSTATE_CAPITALChanging(value);
					this.SendPropertyChanging();
					this._STATE_CAPITAL = value;
					this.SendPropertyChanged("STATE_CAPITAL");
					this.OnSTATE_CAPITALChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATE_MAP", DbType="NVarChar(255)")]
		public string STATE_MAP
		{
			get
			{
				return this._STATE_MAP;
			}
			set
			{
				if ((this._STATE_MAP != value))
				{
					this.OnSTATE_MAPChanging(value);
					this.SendPropertyChanging();
					this._STATE_MAP = value;
					this.SendPropertyChanged("STATE_MAP");
					this.OnSTATE_MAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATE_POPULATION", DbType="Float")]
		public System.Nullable<double> STATE_POPULATION
		{
			get
			{
				return this._STATE_POPULATION;
			}
			set
			{
				if ((this._STATE_POPULATION != value))
				{
					this.OnSTATE_POPULATIONChanging(value);
					this.SendPropertyChanging();
					this._STATE_POPULATION = value;
					this.SendPropertyChanged("STATE_POPULATION");
					this.OnSTATE_POPULATIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATE_IMP_AREA", DbType="NVarChar(255)")]
		public string STATE_IMP_AREA
		{
			get
			{
				return this._STATE_IMP_AREA;
			}
			set
			{
				if ((this._STATE_IMP_AREA != value))
				{
					this.OnSTATE_IMP_AREAChanging(value);
					this.SendPropertyChanging();
					this._STATE_IMP_AREA = value;
					this.SendPropertyChanged("STATE_IMP_AREA");
					this.OnSTATE_IMP_AREAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATE_INDUSTRIES", DbType="NVarChar(255)")]
		public string STATE_INDUSTRIES
		{
			get
			{
				return this._STATE_INDUSTRIES;
			}
			set
			{
				if ((this._STATE_INDUSTRIES != value))
				{
					this.OnSTATE_INDUSTRIESChanging(value);
					this.SendPropertyChanging();
					this._STATE_INDUSTRIES = value;
					this.SendPropertyChanged("STATE_INDUSTRIES");
					this.OnSTATE_INDUSTRIESChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATE_ZO", DbType="NVarChar(255)")]
		public string STATE_ZO
		{
			get
			{
				return this._STATE_ZO;
			}
			set
			{
				if ((this._STATE_ZO != value))
				{
					this.OnSTATE_ZOChanging(value);
					this.SendPropertyChanging();
					this._STATE_ZO = value;
					this.SendPropertyChanged("STATE_ZO");
					this.OnSTATE_ZOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATE_STATUS", DbType="NVarChar(255)")]
		public string STATE_STATUS
		{
			get
			{
				return this._STATE_STATUS;
			}
			set
			{
				if ((this._STATE_STATUS != value))
				{
					this.OnSTATE_STATUSChanging(value);
					this.SendPropertyChanging();
					this._STATE_STATUS = value;
					this.SendPropertyChanged("STATE_STATUS");
					this.OnSTATE_STATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MOD_DATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> MOD_DATE
		{
			get
			{
				return this._MOD_DATE;
			}
			set
			{
				if ((this._MOD_DATE != value))
				{
					this.OnMOD_DATEChanging(value);
					this.SendPropertyChanging();
					this._MOD_DATE = value;
					this.SendPropertyChanged("MOD_DATE");
					this.OnMOD_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MOD_TIME", DbType="Float")]
		public System.Nullable<double> MOD_TIME
		{
			get
			{
				return this._MOD_TIME;
			}
			set
			{
				if ((this._MOD_TIME != value))
				{
					this.OnMOD_TIMEChanging(value);
					this.SendPropertyChanging();
					this._MOD_TIME = value;
					this.SendPropertyChanged("MOD_TIME");
					this.OnMOD_TIMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NODEID", DbType="NVarChar(255)")]
		public string NODEID
		{
			get
			{
				return this._NODEID;
			}
			set
			{
				if ((this._NODEID != value))
				{
					this.OnNODEIDChanging(value);
					this.SendPropertyChanging();
					this._NODEID = value;
					this.SendPropertyChanged("NODEID");
					this.OnNODEIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USERID", DbType="NVarChar(255)")]
		public string USERID
		{
			get
			{
				return this._USERID;
			}
			set
			{
				if ((this._USERID != value))
				{
					this.OnUSERIDChanging(value);
					this.SendPropertyChanging();
					this._USERID = value;
					this.SendPropertyChanged("USERID");
					this.OnUSERIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRANS_STATUS", DbType="NVarChar(255)")]
		public string TRANS_STATUS
		{
			get
			{
				return this._TRANS_STATUS;
			}
			set
			{
				if ((this._TRANS_STATUS != value))
				{
					this.OnTRANS_STATUSChanging(value);
					this.SendPropertyChanging();
					this._TRANS_STATUS = value;
					this.SendPropertyChanged("TRANS_STATUS");
					this.OnTRANS_STATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATE_RO", DbType="NVarChar(255)")]
		public string STATE_RO
		{
			get
			{
				return this._STATE_RO;
			}
			set
			{
				if ((this._STATE_RO != value))
				{
					this.OnSTATE_ROChanging(value);
					this.SendPropertyChanging();
					this._STATE_RO = value;
					this.SendPropertyChanged("STATE_RO");
					this.OnSTATE_ROChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="State_City", Storage="_Cities", ThisKey="STATE_CODE", OtherKey="CITY_STATE")]
		public EntitySet<City> Cities
		{
			get
			{
				return this._Cities;
			}
			set
			{
				this._Cities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Cities(City entity)
		{
			this.SendPropertyChanging();
			entity.State = this;
		}
		
		private void detach_Cities(City entity)
		{
			this.SendPropertyChanging();
			entity.State = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Transaction]")]
	public partial class Transaction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private decimal _AmountPayed;
		
		private System.Nullable<decimal> _AmountCharged;
		
		private string _ConnsignmentNo;
		
		private double _Weight;
		
		private System.Nullable<double> _WeightByFranchize;
		
		private string _Destination;
		
		private System.Nullable<decimal> _DestinationPin;
		
		private System.Nullable<System.Guid> _UserId;
		
		private System.DateTime _BookingDate;
		
		private System.Nullable<System.DateTime> _AddDate;
		
		private System.Nullable<System.DateTime> _LastModified;
		
		private string _Type;
		
		private string _Mode;
		
		private char _DOX;
		
		private double _ServiceTax;
		
		private double _SplDisc;
		
		private string _InvoiceNo;
		
		private System.Nullable<System.DateTime> _InvoiceDate;
		
		private string _CustCode;
		
		private string _TransMF_No;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<Client> _Client;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnAmountPayedChanging(decimal value);
    partial void OnAmountPayedChanged();
    partial void OnAmountChargedChanging(System.Nullable<decimal> value);
    partial void OnAmountChargedChanged();
    partial void OnConnsignmentNoChanging(string value);
    partial void OnConnsignmentNoChanged();
    partial void OnWeightChanging(double value);
    partial void OnWeightChanged();
    partial void OnWeightByFranchizeChanging(System.Nullable<double> value);
    partial void OnWeightByFranchizeChanged();
    partial void OnDestinationChanging(string value);
    partial void OnDestinationChanged();
    partial void OnDestinationPinChanging(System.Nullable<decimal> value);
    partial void OnDestinationPinChanged();
    partial void OnUserIdChanging(System.Nullable<System.Guid> value);
    partial void OnUserIdChanged();
    partial void OnBookingDateChanging(System.DateTime value);
    partial void OnBookingDateChanged();
    partial void OnAddDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAddDateChanged();
    partial void OnLastModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnModeChanging(string value);
    partial void OnModeChanged();
    partial void OnDOXChanging(char value);
    partial void OnDOXChanged();
    partial void OnServiceTaxChanging(double value);
    partial void OnServiceTaxChanged();
    partial void OnSplDiscChanging(double value);
    partial void OnSplDiscChanged();
    partial void OnInvoiceNoChanging(string value);
    partial void OnInvoiceNoChanged();
    partial void OnInvoiceDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInvoiceDateChanged();
    partial void OnCustCodeChanging(string value);
    partial void OnCustCodeChanged();
    partial void OnTransMF_NoChanging(string value);
    partial void OnTransMF_NoChanged();
    #endregion
		
		public Transaction()
		{
			this._Employee = default(EntityRef<Employee>);
			this._Client = default(EntityRef<Client>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountPayed", DbType="Decimal(18,2) NOT NULL")]
		public decimal AmountPayed
		{
			get
			{
				return this._AmountPayed;
			}
			set
			{
				if ((this._AmountPayed != value))
				{
					this.OnAmountPayedChanging(value);
					this.SendPropertyChanging();
					this._AmountPayed = value;
					this.SendPropertyChanged("AmountPayed");
					this.OnAmountPayedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountCharged", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> AmountCharged
		{
			get
			{
				return this._AmountCharged;
			}
			set
			{
				if ((this._AmountCharged != value))
				{
					this.OnAmountChargedChanging(value);
					this.SendPropertyChanging();
					this._AmountCharged = value;
					this.SendPropertyChanged("AmountCharged");
					this.OnAmountChargedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConnsignmentNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ConnsignmentNo
		{
			get
			{
				return this._ConnsignmentNo;
			}
			set
			{
				if ((this._ConnsignmentNo != value))
				{
					this.OnConnsignmentNoChanging(value);
					this.SendPropertyChanging();
					this._ConnsignmentNo = value;
					this.SendPropertyChanged("ConnsignmentNo");
					this.OnConnsignmentNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Float NOT NULL")]
		public double Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeightByFranchize", DbType="Float")]
		public System.Nullable<double> WeightByFranchize
		{
			get
			{
				return this._WeightByFranchize;
			}
			set
			{
				if ((this._WeightByFranchize != value))
				{
					this.OnWeightByFranchizeChanging(value);
					this.SendPropertyChanging();
					this._WeightByFranchize = value;
					this.SendPropertyChanged("WeightByFranchize");
					this.OnWeightByFranchizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Destination", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Destination
		{
			get
			{
				return this._Destination;
			}
			set
			{
				if ((this._Destination != value))
				{
					this.OnDestinationChanging(value);
					this.SendPropertyChanging();
					this._Destination = value;
					this.SendPropertyChanged("Destination");
					this.OnDestinationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DestinationPin", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> DestinationPin
		{
			get
			{
				return this._DestinationPin;
			}
			set
			{
				if ((this._DestinationPin != value))
				{
					this.OnDestinationPinChanging(value);
					this.SendPropertyChanging();
					this._DestinationPin = value;
					this.SendPropertyChanged("DestinationPin");
					this.OnDestinationPinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookingDate", DbType="Date NOT NULL")]
		public System.DateTime BookingDate
		{
			get
			{
				return this._BookingDate;
			}
			set
			{
				if ((this._BookingDate != value))
				{
					this.OnBookingDateChanging(value);
					this.SendPropertyChanging();
					this._BookingDate = value;
					this.SendPropertyChanged("BookingDate");
					this.OnBookingDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddDate", DbType="Date")]
		public System.Nullable<System.DateTime> AddDate
		{
			get
			{
				return this._AddDate;
			}
			set
			{
				if ((this._AddDate != value))
				{
					this.OnAddDateChanging(value);
					this.SendPropertyChanging();
					this._AddDate = value;
					this.SendPropertyChanged("AddDate");
					this.OnAddDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModified", DbType="Date")]
		public System.Nullable<System.DateTime> LastModified
		{
			get
			{
				return this._LastModified;
			}
			set
			{
				if ((this._LastModified != value))
				{
					this.OnLastModifiedChanging(value);
					this.SendPropertyChanging();
					this._LastModified = value;
					this.SendPropertyChanged("LastModified");
					this.OnLastModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NChar(25)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mode", DbType="NChar(25) NOT NULL", CanBeNull=false)]
		public string Mode
		{
			get
			{
				return this._Mode;
			}
			set
			{
				if ((this._Mode != value))
				{
					this.OnModeChanging(value);
					this.SendPropertyChanging();
					this._Mode = value;
					this.SendPropertyChanged("Mode");
					this.OnModeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOX", DbType="Char(1) NOT NULL")]
		public char DOX
		{
			get
			{
				return this._DOX;
			}
			set
			{
				if ((this._DOX != value))
				{
					this.OnDOXChanging(value);
					this.SendPropertyChanging();
					this._DOX = value;
					this.SendPropertyChanged("DOX");
					this.OnDOXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceTax", DbType="Float NOT NULL")]
		public double ServiceTax
		{
			get
			{
				return this._ServiceTax;
			}
			set
			{
				if ((this._ServiceTax != value))
				{
					this.OnServiceTaxChanging(value);
					this.SendPropertyChanging();
					this._ServiceTax = value;
					this.SendPropertyChanged("ServiceTax");
					this.OnServiceTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SplDisc", DbType="Float NOT NULL")]
		public double SplDisc
		{
			get
			{
				return this._SplDisc;
			}
			set
			{
				if ((this._SplDisc != value))
				{
					this.OnSplDiscChanging(value);
					this.SendPropertyChanging();
					this._SplDisc = value;
					this.SendPropertyChanged("SplDisc");
					this.OnSplDiscChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNo", DbType="VarChar(50)")]
		public string InvoiceNo
		{
			get
			{
				return this._InvoiceNo;
			}
			set
			{
				if ((this._InvoiceNo != value))
				{
					this.OnInvoiceNoChanging(value);
					this.SendPropertyChanging();
					this._InvoiceNo = value;
					this.SendPropertyChanged("InvoiceNo");
					this.OnInvoiceNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceDate", DbType="Date")]
		public System.Nullable<System.DateTime> InvoiceDate
		{
			get
			{
				return this._InvoiceDate;
			}
			set
			{
				if ((this._InvoiceDate != value))
				{
					this.OnInvoiceDateChanging(value);
					this.SendPropertyChanging();
					this._InvoiceDate = value;
					this.SendPropertyChanged("InvoiceDate");
					this.OnInvoiceDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustCode", DbType="VarChar(6)")]
		public string CustCode
		{
			get
			{
				return this._CustCode;
			}
			set
			{
				if ((this._CustCode != value))
				{
					if (this._Client.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustCodeChanging(value);
					this.SendPropertyChanging();
					this._CustCode = value;
					this.SendPropertyChanged("CustCode");
					this.OnCustCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransMF_No", DbType="VarChar(50)")]
		public string TransMF_No
		{
			get
			{
				return this._TransMF_No;
			}
			set
			{
				if ((this._TransMF_No != value))
				{
					this.OnTransMF_NoChanging(value);
					this.SendPropertyChanging();
					this._TransMF_No = value;
					this.SendPropertyChanged("TransMF_No");
					this.OnTransMF_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Transaction", Storage="_Employee", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.Transactions.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.Transactions.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_Transaction", Storage="_Client", ThisKey="CustCode", OtherKey="CLCODE", IsForeignKey=true)]
		public Client Client
		{
			get
			{
				return this._Client.Entity;
			}
			set
			{
				Client previousValue = this._Client.Entity;
				if (((previousValue != value) 
							|| (this._Client.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Client.Entity = null;
						previousValue.Transactions.Remove(this);
					}
					this._Client.Entity = value;
					if ((value != null))
					{
						value.Transactions.Add(this);
						this._CustCode = value.CLCODE;
					}
					else
					{
						this._CustCode = default(string);
					}
					this.SendPropertyChanged("Client");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.User_Roles")]
	public partial class User_Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Guid _EmployeeId;
		
		private System.Guid _RoleId;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<Role> _Role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnEmployeeIdChanging(System.Guid value);
    partial void OnEmployeeIdChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    #endregion
		
		public User_Role()
		{
			this._Employee = default(EntityRef<Employee>);
			this._Role = default(EntityRef<Role>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid EmployeeId
		{
			get
			{
				return this._EmployeeId;
			}
			set
			{
				if ((this._EmployeeId != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeId = value;
					this.SendPropertyChanged("EmployeeId");
					this.OnEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_User_Role", Storage="_Employee", ThisKey="EmployeeId", OtherKey="Id", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.User_Roles.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.User_Roles.Add(this);
						this._EmployeeId = value.Id;
					}
					else
					{
						this._EmployeeId = default(System.Guid);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_User_Role", Storage="_Role", ThisKey="RoleId", OtherKey="Id", IsForeignKey=true)]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.User_Roles.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.User_Roles.Add(this);
						this._RoleId = value.Id;
					}
					else
					{
						this._RoleId = default(System.Guid);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
